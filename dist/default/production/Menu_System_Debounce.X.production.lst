

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Mar 08 11:35:11 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  000E14                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _problem
    40  000E14  B2                 	db	low STR_1
    41  000E15  06                 	db	high STR_1
    42                           
    43                           ;initializer for _startup
    44  000E16  A6                 	db	low STR_2
    45  000E17  06                 	db	high STR_2
    46                           
    47                           	psect	smallconst
    48  000600                     __psmallconst:
    49                           	opt stack 0
    50  000600  00                 	db	0
    51  000601                     _lcd_init:
    52                           	opt stack 0
    53  000601  33                 	db	51
    54  000602  32                 	db	50
    55  000603  2C                 	db	44
    56  000604  06                 	db	6
    57  000605  0C                 	db	12
    58  000606                     __end_of_lcd_init:
    59                           	opt stack 0
    60  000606                     _msg_ary:
    61                           	opt stack 0
    62  000606  44                 	db	68
    63  000607  65                 	db	101
    64  000608  73                 	db	115
    65  000609  69                 	db	105
    66  00060A  72                 	db	114
    67  00060B  65                 	db	101
    68  00060C  64                 	db	100
    69  00060D  3E                 	db	62
    70  00060E  20                 	db	32
    71  00060F  00                 	db	0
    72  000610  00                 	db	0
    73  000611  00                 	db	0
    74  000612  00                 	db	0
    75  000613  00                 	db	0
    76  000614  00                 	db	0
    77  000615  00                 	db	0
    78  000616  41                 	db	65
    79  000617  63                 	db	99
    80  000618  74                 	db	116
    81  000619  75                 	db	117
    82  00061A  61                 	db	97
    83  00061B  6C                 	db	108
    84  00061C  3E                 	db	62
    85  00061D  20                 	db	32
    86  00061E  00                 	db	0
    87  00061F  00                 	db	0
    88  000620  00                 	db	0
    89  000621  00                 	db	0
    90  000622  00                 	db	0
    91  000623  00                 	db	0
    92  000624  00                 	db	0
    93  000625  00                 	db	0
    94  000626  50                 	db	80
    95  000627  6F                 	db	111
    96  000628  74                 	db	116
    97  000629  5F                 	db	95
    98  00062A  56                 	db	86
    99  00062B  61                 	db	97
   100  00062C  6C                 	db	108
   101  00062D  75                 	db	117
   102  00062E  65                 	db	101
   103  00062F  3E                 	db	62
   104  000630  20                 	db	32
   105  000631  00                 	db	0
   106  000632  00                 	db	0
   107  000633  00                 	db	0
   108  000634  00                 	db	0
   109  000635  00                 	db	0
   110  000636  44                 	db	68
   111  000637  65                 	db	101
   112  000638  73                 	db	115
   113  000639  69                 	db	105
   114  00063A  72                 	db	114
   115  00063B  65                 	db	101
   116  00063C  64                 	db	100
   117  00063D  3E                 	db	62
   118  00063E  20                 	db	32
   119  00063F  00                 	db	0
   120  000640  00                 	db	0
   121  000641  00                 	db	0
   122  000642  00                 	db	0
   123  000643  00                 	db	0
   124  000644  00                 	db	0
   125  000645  00                 	db	0
   126  000646  00                 	db	0
   127  000647  00                 	db	0
   128  000648  00                 	db	0
   129  000649  00                 	db	0
   130  00064A  00                 	db	0
   131  00064B  00                 	db	0
   132  00064C  00                 	db	0
   133  00064D  00                 	db	0
   134  00064E  00                 	db	0
   135  00064F  00                 	db	0
   136  000650  00                 	db	0
   137  000651  00                 	db	0
   138  000652  00                 	db	0
   139  000653  00                 	db	0
   140  000654  00                 	db	0
   141  000655  00                 	db	0
   142  000656  00                 	db	0
   143  000657  00                 	db	0
   144  000658  00                 	db	0
   145  000659  00                 	db	0
   146  00065A  00                 	db	0
   147  00065B  00                 	db	0
   148  00065C  00                 	db	0
   149  00065D  00                 	db	0
   150  00065E  00                 	db	0
   151  00065F  00                 	db	0
   152  000660  00                 	db	0
   153  000661  00                 	db	0
   154  000662  00                 	db	0
   155  000663  00                 	db	0
   156  000664  00                 	db	0
   157  000665  00                 	db	0
   158  000666  00                 	db	0
   159  000667  00                 	db	0
   160  000668  00                 	db	0
   161  000669  00                 	db	0
   162  00066A  00                 	db	0
   163  00066B  00                 	db	0
   164  00066C  00                 	db	0
   165  00066D  00                 	db	0
   166  00066E  00                 	db	0
   167  00066F  00                 	db	0
   168  000670  00                 	db	0
   169  000671  00                 	db	0
   170  000672  00                 	db	0
   171  000673  00                 	db	0
   172  000674  00                 	db	0
   173  000675  00                 	db	0
   174  000676  00                 	db	0
   175  000677  00                 	db	0
   176  000678  00                 	db	0
   177  000679  00                 	db	0
   178  00067A  00                 	db	0
   179  00067B  00                 	db	0
   180  00067C  00                 	db	0
   181  00067D  00                 	db	0
   182  00067E  00                 	db	0
   183  00067F  00                 	db	0
   184  000680  00                 	db	0
   185  000681  00                 	db	0
   186  000682  00                 	db	0
   187  000683  00                 	db	0
   188  000684  00                 	db	0
   189  000685  00                 	db	0
   190  000686  00                 	db	0
   191  000687  00                 	db	0
   192  000688  00                 	db	0
   193  000689  00                 	db	0
   194  00068A  00                 	db	0
   195  00068B  00                 	db	0
   196  00068C  00                 	db	0
   197  00068D  00                 	db	0
   198  00068E  00                 	db	0
   199  00068F  00                 	db	0
   200  000690  00                 	db	0
   201  000691  00                 	db	0
   202  000692  00                 	db	0
   203  000693  00                 	db	0
   204  000694  00                 	db	0
   205  000695  00                 	db	0
   206  000696  00                 	db	0
   207  000697  00                 	db	0
   208  000698  00                 	db	0
   209  000699  00                 	db	0
   210  00069A  00                 	db	0
   211  00069B  00                 	db	0
   212  00069C  00                 	db	0
   213  00069D  00                 	db	0
   214  00069E  00                 	db	0
   215  00069F  00                 	db	0
   216  0006A0  00                 	db	0
   217  0006A1  00                 	db	0
   218  0006A2  00                 	db	0
   219  0006A3  00                 	db	0
   220  0006A4  00                 	db	0
   221  0006A5  00                 	db	0
   222  0006A6                     __end_of_msg_ary:
   223                           	opt stack 0
   224  0000                     _ADCON0	set	4034
   225  0000                     _ADCON0bits	set	4034
   226  0000                     _ADCON1	set	4033
   227  0000                     _ADCON2	set	4032
   228  0000                     _ADRESH	set	4036
   229  0000                     _INTCONbits	set	4082
   230  0000                     _LATC	set	3979
   231  0000                     _LATDbits	set	3980
   232  0000                     _PIR1bits	set	3998
   233  0000                     _PORTB	set	3969
   234  0000                     _PORTCbits	set	3970
   235  0000                     _T0CON	set	4053
   236  0000                     _T0CONbits	set	4053
   237  0000                     _TMR0H	set	4055
   238  0000                     _TMR0L	set	4054
   239  0000                     _TRISA	set	3986
   240  0000                     _TRISB	set	3987
   241  0000                     _TRISC	set	3988
   242  0000                     _TRISD	set	3989
   243  0006A6                     STR_2:
   244  0006A6  52                 	db	82	;'R'
   245  0006A7  65                 	db	101	;'e'
   246  0006A8  61                 	db	97	;'a'
   247  0006A9  64                 	db	100	;'d'
   248  0006AA  79                 	db	121	;'y'
   249  0006AB  20                 	db	32
   250  0006AC  74                 	db	116	;'t'
   251  0006AD  6F                 	db	111	;'o'
   252  0006AE  20                 	db	32
   253  0006AF  67                 	db	103	;'g'
   254  0006B0  6F                 	db	111	;'o'
   255  0006B1  00                 	db	0
   256  0006B2                     STR_1:
   257  0006B2  50                 	db	80	;'P'
   258  0006B3  72                 	db	114	;'r'
   259  0006B4  6F                 	db	111	;'o'
   260  0006B5  62                 	db	98	;'b'
   261  0006B6  6C                 	db	108	;'l'
   262  0006B7  65                 	db	101	;'e'
   263  0006B8  6D                 	db	109	;'m'
   264  0006B9  00                 	db	0
   265                           
   266                           ; #config settings
   267  0006BA  00                 	db	0	; dummy byte at the end
   268  0000                     
   269                           	psect	cinit
   270  000CC6                     __pcinit:
   271                           	opt stack 0
   272  000CC6                     start_initialization:
   273                           	opt stack 0
   274  000CC6                     __initialization:
   275                           	opt stack 0
   276                           
   277                           ; Clear objects allocated to COMRAM (7 bytes)
   278  000CC6  EE00  F028         	lfsr	0,__pbssCOMRAM
   279  000CCA  0E07               	movlw	7
   280  000CCC                     clear_0:
   281  000CCC  6AEE               	clrf	postinc0,c
   282  000CCE  06E8               	decf	wreg,f,c
   283  000CD0  E1FD               	bnz	clear_0
   284                           
   285                           ; Initialize objects allocated to COMRAM (4 bytes)
   286                           ; load TBLPTR registers with __pidataCOMRAM
   287  000CD2  0E14               	movlw	low __pidataCOMRAM
   288  000CD4  6EF6               	movwf	tblptrl,c
   289  000CD6  0E0E               	movlw	high __pidataCOMRAM
   290  000CD8  6EF7               	movwf	tblptrh,c
   291  000CDA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   292  000CDC  6EF8               	movwf	tblptru,c
   293  000CDE  EE00  F02F         	lfsr	0,__pdataCOMRAM
   294  000CE2  EE10 F004          	lfsr	1,4
   295  000CE6                     copy_data0:
   296  000CE6  0009               	tblrd		*+
   297  000CE8  CFF5 FFEE          	movff	tablat,postinc0
   298  000CEC  50E5               	movf	postdec1,w,c
   299  000CEE  50E1               	movf	fsr1l,w,c
   300  000CF0  E1FA               	bnz	copy_data0
   301  000CF2                     end_of_initialization:
   302                           	opt stack 0
   303  000CF2                     __end_of__initialization:
   304                           	opt stack 0
   305  000CF2  9033               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   306  000CF4  9233               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   307  000CF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   308  000CF8  6EF8               	movwf	tblptru,c
   309  000CFA  0100               	movlb	0
   310  000CFC  EF5E  F003         	goto	_main	;jump to C main() function
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           	psect	bssCOMRAM
   321  000028                     __pbssCOMRAM:
   322                           	opt stack 0
   323  000028                     Find_Button_Press@Button_Count:
   324                           	opt stack 0
   325  000028                     	ds	1
   326  000029                     Find_Button_Press@Button_State:
   327                           	opt stack 0
   328  000029                     	ds	1
   329  00002A                     Find_Button_Press@Temp_Press:
   330                           	opt stack 0
   331  00002A                     	ds	1
   332  00002B                     _Button_Press:
   333                           	opt stack 0
   334  00002B                     	ds	1
   335  00002C                     _TICK_E:
   336                           	opt stack 0
   337  00002C                     	ds	1
   338  00002D                     _count_test:
   339                           	opt stack 0
   340  00002D                     	ds	1
   341  00002E                     _counter:
   342                           	opt stack 0
   343  00002E                     	ds	1
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           postdec1	equ	0xFE5
   351                           fsr1l	equ	0xFE1
   352                           
   353                           	psect	dataCOMRAM
   354  00002F                     __pdataCOMRAM:
   355                           	opt stack 0
   356  00002F                     _problem:
   357                           	opt stack 0
   358  00002F                     	ds	2
   359  000031                     _startup:
   360                           	opt stack 0
   361  000031                     	ds	2
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           postinc0	equ	0xFEE
   367                           wreg	equ	0xFE8
   368                           postdec1	equ	0xFE5
   369                           fsr1l	equ	0xFE1
   370                           
   371                           	psect	cstackCOMRAM
   372  000001                     __pcstackCOMRAM:
   373                           	opt stack 0
   374  000001                     i2WriteTimer0@timer0:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x0
   378  000001                     	ds	2
   379  000003                     i2WriteTimer0@timer:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x2
   383  000003                     	ds	2
   384  000005                     ??_myIsr:
   385                           
   386                           ; 0 bytes @ 0x4
   387  000005                     	ds	15
   388  000014                     ??_delay_s:
   389  000014                     ?___awdiv:
   390                           	opt stack 0
   391  000014                     ?___awmod:
   392                           	opt stack 0
   393  000014                     lcd_raw_send@RS:
   394                           	opt stack 0
   395  000014                     OpenTimer0@config:
   396                           	opt stack 0
   397  000014                     WriteTimer0@timer0:
   398                           	opt stack 0
   399  000014                     ___awdiv@dividend:
   400                           	opt stack 0
   401  000014                     ___awmod@dividend:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x13
   405  000014                     	ds	1
   406  000015                     ??_lcd_raw_send:
   407  000015                     delay_s@secs:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x14
   411  000015                     	ds	1
   412  000016                     delay_s@j:
   413                           	opt stack 0
   414  000016                     WriteTimer0@timer:
   415                           	opt stack 0
   416  000016                     ___awdiv@divisor:
   417                           	opt stack 0
   418  000016                     ___awmod@divisor:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x15
   422  000016                     	ds	1
   423  000017                     lcd_raw_send@in:
   424                           	opt stack 0
   425  000017                     delay_s@i:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x16
   429  000017                     	ds	1
   430  000018                     lcd_print_ch@in:
   431                           	opt stack 0
   432  000018                     lcd_command@in:
   433                           	opt stack 0
   434  000018                     ___awdiv@counter:
   435                           	opt stack 0
   436  000018                     ___awmod@counter:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x17
   440  000018                     	ds	1
   441  000019                     ??_lcd_clear:
   442  000019                     lcd_cursor@y:
   443                           	opt stack 0
   444  000019                     ___awdiv@sign:
   445                           	opt stack 0
   446  000019                     ___awmod@sign:
   447                           	opt stack 0
   448  000019                     lcd_print@mess:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x18
   452  000019                     	ds	1
   453  00001A                     ??_lcd_start:
   454  00001A                     lcd_cursor@x:
   455                           	opt stack 0
   456  00001A                     ___awdiv@quotient:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x19
   460  00001A                     	ds	1
   461  00001B                     ??_lcd_print:
   462  00001B                     lcd_start@i:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x1A
   466  00001B                     	ds	1
   467  00001C                     lcd_display_value@hunds:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x1B
   471  00001C                     	ds	1
   472  00001D                     lcd_print@i:
   473                           	opt stack 0
   474  00001D                     lcd_display_value@tens:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x1C
   478  00001D                     	ds	1
   479  00001E                     ??_Window:
   480  00001E                     lcd_display_value@units:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x1D
   484  00001E                     	ds	1
   485  00001F                     lcd_display_value@value:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x1E
   489  00001F                     	ds	1
   490  000020                     Window@num:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x1F
   494  000020                     	ds	1
   495  000021                     main@C:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x20
   499  000021                     	ds	1
   500  000022                     main@A:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x21
   504  000022                     	ds	1
   505  000023                     main@B:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x22
   509  000023                     	ds	1
   510  000024                     main@my_mch_state:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x23
   514  000024                     	ds	1
   515  000025                     main@ADC_Result:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x24
   519  000025                     	ds	1
   520  000026                     main@Motor1:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x25
   524  000026                     	ds	2
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           postdec1	equ	0xFE5
   532                           fsr1l	equ	0xFE1
   533                           
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 114 in file "st_mch3_update_values_with_debounce_lib.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  Motor1          2   37[COMRAM] struct .
   544 ;;  ADC_Result      1   36[COMRAM] unsigned char 
   545 ;;  my_mch_state    1   35[COMRAM] enum E4344
   546 ;;  B               1   34[COMRAM] unsigned char 
   547 ;;  A               1   33[COMRAM] unsigned char 
   548 ;;  C               1   32[COMRAM] unsigned char 
   549 ;; Return value:  Size  Location     Type
   550 ;;		None               void
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   558 ;;      Params:         0       0       0       0       0       0       0
   559 ;;      Locals:         7       0       0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0
   561 ;;      Totals:         7       0       0       0       0       0       0
   562 ;;Total ram usage:        7 bytes
   563 ;; Hardware stack levels required when called:    6
   564 ;; This function calls:
   565 ;;		_Initial
   566 ;;		_Window
   567 ;;		_delay_s
   568 ;;		_lcd_clear
   569 ;;		_lcd_cursor
   570 ;;		_lcd_display_value
   571 ;;		_lcd_print
   572 ;;		_lcd_start
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text0
   579  0006BC                     __ptext0:
   580                           	opt stack 0
   581  0006BC                     _main:
   582                           	opt stack 25
   583                           
   584                           ;st_mch3_update_values_with_debounce_lib.c: 117: unsigned char A = 20;
   585                           
   586                           ;incstack = 0
   587  0006BC  0E14               	movlw	20
   588  0006BE  6E22               	movwf	main@A,c
   589                           
   590                           ;st_mch3_update_values_with_debounce_lib.c: 118: unsigned char B = 30;
   591  0006C0  0E1E               	movlw	30
   592  0006C2  6E23               	movwf	main@B,c
   593                           
   594                           ;st_mch3_update_values_with_debounce_lib.c: 119: unsigned char C = 40;
   595  0006C4  0E28               	movlw	40
   596  0006C6  6E21               	movwf	main@C,c
   597                           
   598                           ;st_mch3_update_values_with_debounce_lib.c: 120: unsigned char ADC_Result = 0;
   599  0006C8  0E00               	movlw	0
   600  0006CA  6E25               	movwf	main@ADC_Result,c
   601                           
   602                           ;st_mch3_update_values_with_debounce_lib.c: 122: typedef enum {MENU_0 = 0,MENU_1} states
      +                          ;
   603                           ;st_mch3_update_values_with_debounce_lib.c: 123: states my_mch_state = MENU_1;
   604  0006CC  0E01               	movlw	1
   605  0006CE  6E24               	movwf	main@my_mch_state,c
   606                           
   607                           ;st_mch3_update_values_with_debounce_lib.c: 125: typedef struct{
   608                           ;st_mch3_update_values_with_debounce_lib.c: 126: unsigned char Desired;
   609                           ;st_mch3_update_values_with_debounce_lib.c: 127: unsigned char Actual;
   610                           ;st_mch3_update_values_with_debounce_lib.c: 128: }Motor;
   611                           ;st_mch3_update_values_with_debounce_lib.c: 130: Motor Motor1;
   612                           ;st_mch3_update_values_with_debounce_lib.c: 131: Motor1.Desired=0;
   613  0006D0  0E00               	movlw	0
   614  0006D2  6E26               	movwf	main@Motor1,c
   615                           
   616                           ;st_mch3_update_values_with_debounce_lib.c: 132: Motor1.Actual=0;
   617  0006D4  0E00               	movlw	0
   618  0006D6  6E27               	movwf	main@Motor1+1,c
   619                           
   620                           ;st_mch3_update_values_with_debounce_lib.c: 134: Initial();
   621  0006D8  EC80  F006         	call	_Initial	;wreg free
   622                           
   623                           ;st_mch3_update_values_with_debounce_lib.c: 135: lcd_start ();
   624  0006DC  EC42  F006         	call	_lcd_start	;wreg free
   625                           
   626                           ;st_mch3_update_values_with_debounce_lib.c: 136: lcd_cursor ( 0, 0 ) ;
   627  0006E0  0E00               	movlw	0
   628  0006E2  6E19               	movwf	lcd_cursor@y,c
   629  0006E4  0E00               	movlw	0
   630  0006E6  ECDD  F006         	call	_lcd_cursor
   631                           
   632                           ;st_mch3_update_values_with_debounce_lib.c: 137: lcd_print ( startup ) ;
   633  0006EA  C031  F019         	movff	_startup,lcd_print@mess
   634  0006EE  C032  F01A         	movff	_startup+1,lcd_print@mess+1
   635  0006F2  EC18  F006         	call	_lcd_print	;wreg free
   636                           
   637                           ;st_mch3_update_values_with_debounce_lib.c: 139: delay_s(2);
   638  0006F6  0E02               	movlw	2
   639  0006F8  EC9C  F006         	call	_delay_s
   640                           
   641                           ;st_mch3_update_values_with_debounce_lib.c: 141: Window(0);
   642  0006FC  0E00               	movlw	0
   643  0006FE  ECE5  F005         	call	_Window
   644                           
   645                           ;st_mch3_update_values_with_debounce_lib.c: 142: lcd_cursor ( 10, 0 ) ;
   646  000702  0E00               	movlw	0
   647  000704  6E19               	movwf	lcd_cursor@y,c
   648  000706  0E0A               	movlw	10
   649  000708  ECDD  F006         	call	_lcd_cursor
   650                           
   651                           ;st_mch3_update_values_with_debounce_lib.c: 143: lcd_display_value(A);
   652  00070C  5022               	movf	main@A,w,c
   653  00070E  ECE7  F004         	call	_lcd_display_value
   654                           
   655                           ;st_mch3_update_values_with_debounce_lib.c: 144: lcd_cursor ( 10, 1 ) ;
   656  000712  0E01               	movlw	1
   657  000714  6E19               	movwf	lcd_cursor@y,c
   658  000716  0E0A               	movlw	10
   659  000718  ECDD  F006         	call	_lcd_cursor
   660                           
   661                           ;st_mch3_update_values_with_debounce_lib.c: 145: lcd_display_value(B);
   662  00071C  5023               	movf	main@B,w,c
   663  00071E  ECE7  F004         	call	_lcd_display_value
   664  000722                     l1439:
   665  000722  502B               	movf	_Button_Press,w,c
   666  000724  A4D8               	btfss	status,2,c
   667  000726  D01F               	goto	l1463
   668  000728  502C               	movf	_TICK_E,w,c
   669  00072A  A4D8               	btfss	status,2,c
   670  00072C  D01C               	goto	l1463
   671  00072E  D7F9               	goto	l1439
   672  000730                     l151:
   673                           
   674                           ;st_mch3_update_values_with_debounce_lib.c: 157: if (Button_Press.B0){
   675  000730  A02B               	btfss	_Button_Press,0,c
   676  000732  D062               	goto	l1493
   677                           
   678                           ;st_mch3_update_values_with_debounce_lib.c: 158: my_mch_state = MENU_1;
   679  000734  0E01               	movlw	1
   680  000736  6E24               	movwf	main@my_mch_state,c
   681                           
   682                           ;st_mch3_update_values_with_debounce_lib.c: 159: Window(1);
   683  000738  0E01               	movlw	1
   684  00073A  ECE5  F005         	call	_Window
   685                           
   686                           ;st_mch3_update_values_with_debounce_lib.c: 160: PIR1bits.ADIF=0;
   687  00073E  9C9E               	bcf	3998,6,c	;volatile
   688                           
   689                           ;st_mch3_update_values_with_debounce_lib.c: 161: ADCON0bits.ADON=1;
   690  000740  80C2               	bsf	4034,0,c	;volatile
   691                           
   692                           ;st_mch3_update_values_with_debounce_lib.c: 163: }
   693                           ;st_mch3_update_values_with_debounce_lib.c: 165: break;
   694  000742  D05A               	goto	l1493
   695  000744                     l154:
   696                           
   697                           ;st_mch3_update_values_with_debounce_lib.c: 167: if (Button_Press.B0){
   698  000744  A02B               	btfss	_Button_Press,0,c
   699  000746  D058               	goto	l1493
   700                           
   701                           ;st_mch3_update_values_with_debounce_lib.c: 168: my_mch_state = MENU_0;
   702  000748  0E00               	movlw	0
   703  00074A  6E24               	movwf	main@my_mch_state,c
   704                           
   705                           ;st_mch3_update_values_with_debounce_lib.c: 169: Window(0);
   706  00074C  0E00               	movlw	0
   707  00074E  ECE5  F005         	call	_Window
   708                           
   709                           ;st_mch3_update_values_with_debounce_lib.c: 170: ADCON0bits.ADON=0;
   710  000752  90C2               	bcf	4034,0,c	;volatile
   711                           
   712                           ;st_mch3_update_values_with_debounce_lib.c: 171: }
   713                           ;st_mch3_update_values_with_debounce_lib.c: 172: break;
   714  000754  D051               	goto	l1493
   715  000756                     l156:
   716                           
   717                           ;st_mch3_update_values_with_debounce_lib.c: 176: if (Button_Press.B0){
   718  000756  A02B               	btfss	_Button_Press,0,c
   719  000758  D04F               	goto	l1493
   720                           
   721                           ;st_mch3_update_values_with_debounce_lib.c: 177: my_mch_state = MENU_0;
   722  00075A  0E00               	movlw	0
   723  00075C  6E24               	movwf	main@my_mch_state,c
   724                           
   725                           ;st_mch3_update_values_with_debounce_lib.c: 178: Window(0);
   726  00075E  0E00               	movlw	0
   727  000760  ECE5  F005         	call	_Window
   728                           
   729                           ;st_mch3_update_values_with_debounce_lib.c: 181: }
   730                           
   731                           ;st_mch3_update_values_with_debounce_lib.c: 179: }
   732                           ;st_mch3_update_values_with_debounce_lib.c: 180: break;
   733  000764  D049               	goto	l1493
   734  000766                     l1463:
   735  000766  5024               	movf	main@my_mch_state,w,c
   736                           
   737                           ; Switch size 1, requested type "space"
   738                           ; Number of cases is 2, Range of values is 0 to 1
   739                           ; switch strategies available:
   740                           ; Name         Instructions Cycles
   741                           ; simple_byte            7     4 (average)
   742                           ;	Chosen strategy is simple_byte
   743  000768  0A00               	xorlw	0	; case 0
   744  00076A  B4D8               	btfsc	status,2,c
   745  00076C  D7E1               	goto	l151
   746  00076E  0A01               	xorlw	1	; case 1
   747  000770  B4D8               	btfsc	status,2,c
   748  000772  D7E8               	goto	l154
   749  000774  D7F0               	goto	l156
   750  000776                     l1465:
   751                           
   752                           ;st_mch3_update_values_with_debounce_lib.c: 188: lcd_cursor(10,0);
   753  000776  0E00               	movlw	0
   754  000778  6E19               	movwf	lcd_cursor@y,c
   755  00077A  0E0A               	movlw	10
   756  00077C  ECDD  F006         	call	_lcd_cursor
   757                           
   758                           ;st_mch3_update_values_with_debounce_lib.c: 189: lcd_display_value(Motor1.Desired);
   759  000780  5026               	movf	main@Motor1,w,c
   760  000782  ECE7  F004         	call	_lcd_display_value
   761                           
   762                           ;st_mch3_update_values_with_debounce_lib.c: 190: lcd_cursor(10, 1);
   763  000786  0E01               	movlw	1
   764  000788  6E19               	movwf	lcd_cursor@y,c
   765  00078A  0E0A               	movlw	10
   766  00078C  ECDD  F006         	call	_lcd_cursor
   767                           
   768                           ;st_mch3_update_values_with_debounce_lib.c: 191: lcd_display_value(Motor1.Actual);
   769  000790  5027               	movf	main@Motor1+1,w,c
   770  000792  ECE7  F004         	call	_lcd_display_value
   771                           
   772                           ;st_mch3_update_values_with_debounce_lib.c: 199: LATC = 0x01;
   773  000796  0E01               	movlw	1
   774  000798  D02D               	goto	L2
   775  00079A                     l161:
   776                           
   777                           ;st_mch3_update_values_with_debounce_lib.c: 203: if (Button_Press.B1)
   778  00079A  B22B               	btfsc	_Button_Press,1,c
   779                           
   780                           ;st_mch3_update_values_with_debounce_lib.c: 204: {
   781                           ;st_mch3_update_values_with_debounce_lib.c: 205: Motor1.Desired=ADC_Result;
   782  00079C  C025  F026         	movff	main@ADC_Result,main@Motor1
   783                           
   784                           ;st_mch3_update_values_with_debounce_lib.c: 206: }
   785                           ;st_mch3_update_values_with_debounce_lib.c: 208: ADC_Result=ADRESH>>2;
   786  0007A0  40C4               	rrncf	4036,w,c	;volatile
   787  0007A2  42E8               	rrncf	wreg,f,c
   788  0007A4  0B3F               	andlw	63
   789  0007A6  6E25               	movwf	main@ADC_Result,c
   790                           
   791                           ;st_mch3_update_values_with_debounce_lib.c: 209: if (ADC_Result>51)
   792  0007A8  0E33               	movlw	51
   793  0007AA  6425               	cpfsgt	main@ADC_Result,c
   794  0007AC  D002               	goto	l1475
   795                           
   796                           ;st_mch3_update_values_with_debounce_lib.c: 210: {
   797                           ;st_mch3_update_values_with_debounce_lib.c: 211: ADC_Result=50;
   798  0007AE  0E32               	movlw	50
   799  0007B0  6E25               	movwf	main@ADC_Result,c
   800  0007B2                     l1475:
   801                           
   802                           ;st_mch3_update_values_with_debounce_lib.c: 212: }
   803                           ;st_mch3_update_values_with_debounce_lib.c: 213: ADCON0bits.GO_nDONE=1;
   804  0007B2  82C2               	bsf	4034,1,c	;volatile
   805                           
   806                           ;st_mch3_update_values_with_debounce_lib.c: 215: lcd_cursor ( 10, 0 ) ;
   807  0007B4  0E00               	movlw	0
   808  0007B6  6E19               	movwf	lcd_cursor@y,c
   809  0007B8  0E0A               	movlw	10
   810  0007BA  ECDD  F006         	call	_lcd_cursor
   811                           
   812                           ;st_mch3_update_values_with_debounce_lib.c: 216: lcd_display_value(ADC_Result);
   813  0007BE  5025               	movf	main@ADC_Result,w,c
   814  0007C0  ECE7  F004         	call	_lcd_display_value
   815                           
   816                           ;st_mch3_update_values_with_debounce_lib.c: 217: lcd_cursor ( 10, 1 ) ;
   817  0007C4  0E01               	movlw	1
   818  0007C6  6E19               	movwf	lcd_cursor@y,c
   819  0007C8  0E0A               	movlw	10
   820  0007CA  ECDD  F006         	call	_lcd_cursor
   821                           
   822                           ;st_mch3_update_values_with_debounce_lib.c: 218: lcd_display_value(Motor1.Desired);
   823  0007CE  5026               	movf	main@Motor1,w,c
   824  0007D0  ECE7  F004         	call	_lcd_display_value
   825                           
   826                           ;st_mch3_update_values_with_debounce_lib.c: 219: LATC= 0x02;
   827  0007D4  0E02               	movlw	2
   828  0007D6  D00E               	goto	L2
   829  0007D8                     l1485:
   830                           
   831                           ;st_mch3_update_values_with_debounce_lib.c: 223: lcd_cursor ( 0, 0 ) ;
   832  0007D8  0E00               	movlw	0
   833  0007DA  6E19               	movwf	lcd_cursor@y,c
   834  0007DC  0E00               	movlw	0
   835  0007DE  ECDD  F006         	call	_lcd_cursor
   836                           
   837                           ;st_mch3_update_values_with_debounce_lib.c: 224: lcd_clear();
   838  0007E2  ECB6  F006         	call	_lcd_clear	;wreg free
   839                           
   840                           ;st_mch3_update_values_with_debounce_lib.c: 225: lcd_print ( problem );
   841  0007E6  C02F  F019         	movff	_problem,lcd_print@mess
   842  0007EA  C030  F01A         	movff	_problem+1,lcd_print@mess+1
   843  0007EE  EC18  F006         	call	_lcd_print	;wreg free
   844                           
   845                           ;st_mch3_update_values_with_debounce_lib.c: 226: LATC = 0x05;
   846  0007F2  0E05               	movlw	5
   847  0007F4                     L2:
   848  0007F4  6E8B               	movwf	3979,c	;volatile
   849                           
   850                           ;st_mch3_update_values_with_debounce_lib.c: 228: }
   851                           
   852                           ;st_mch3_update_values_with_debounce_lib.c: 227: break;
   853  0007F6  D008               	goto	l1495
   854  0007F8                     l1493:
   855  0007F8  5024               	movf	main@my_mch_state,w,c
   856                           
   857                           ; Switch size 1, requested type "space"
   858                           ; Number of cases is 2, Range of values is 0 to 1
   859                           ; switch strategies available:
   860                           ; Name         Instructions Cycles
   861                           ; simple_byte            7     4 (average)
   862                           ;	Chosen strategy is simple_byte
   863  0007FA  0A00               	xorlw	0	; case 0
   864  0007FC  B4D8               	btfsc	status,2,c
   865  0007FE  D7BB               	goto	l1465
   866  000800  0A01               	xorlw	1	; case 1
   867  000802  B4D8               	btfsc	status,2,c
   868  000804  D7CA               	goto	l161
   869  000806  D7E8               	goto	l1485
   870  000808                     l1495:
   871                           
   872                           ;st_mch3_update_values_with_debounce_lib.c: 230: Button_Press.Full = 0;
   873  000808  0E00               	movlw	0
   874  00080A  6E2B               	movwf	_Button_Press,c
   875                           
   876                           ;st_mch3_update_values_with_debounce_lib.c: 232: TICK_E=0;
   877  00080C  0E00               	movlw	0
   878  00080E  6E2C               	movwf	_TICK_E,c
   879  000810  D788               	goto	l1439
   880  000812                     __end_of_main:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           postdec1	equ	0xFE5
   889                           fsr1l	equ	0xFE1
   890                           status	equ	0xFD8
   891                           
   892 ;; *************** function _lcd_start *****************
   893 ;; Defined at:
   894 ;;		line 189 in file "../../LCD_library/lcdlib_2016.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  i               1   26[COMRAM] unsigned char 
   899 ;;  t               1    0        unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      unsigned char 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   909 ;;      Params:         0       0       0       0       0       0       0
   910 ;;      Locals:         1       0       0       0       0       0       0
   911 ;;      Temps:          1       0       0       0       0       0       0
   912 ;;      Totals:         2       0       0       0       0       0       0
   913 ;;Total ram usage:        2 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:    5
   916 ;; This function calls:
   917 ;;		_lcd_clear
   918 ;;		_lcd_command
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text1
   925  000C84                     __ptext1:
   926                           	opt stack 0
   927  000C84                     _lcd_start:
   928                           	opt stack 25
   929                           
   930                           ;lcdlib_2016.c: 191: unsigned char i, t ;
   931                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
   932                           
   933                           ;incstack = 0
   934  000C84  5095               	movf	3989,w,c	;volatile
   935  000C86  0BC0               	andlw	192
   936  000C88  6E95               	movwf	3989,c	;volatile
   937                           
   938                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
   939  000C8A  0EE0               	movlw	224
   940  000C8C  6E1A               	movwf	??_lcd_start& (0+255),c
   941  000C8E  0E6A               	movlw	106
   942  000C90                     u757:
   943  000C90  2EE8               	decfsz	wreg,f,c
   944  000C92  D7FE               	goto	u757
   945  000C94  2E1A               	decfsz	??_lcd_start& (0+255),f,c
   946  000C96  D7FC               	goto	u757
   947                           
   948                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
   949  000C98  0E00               	movlw	0
   950  000C9A  6E1B               	movwf	lcd_start@i,c
   951  000C9C                     l1335:
   952  000C9C  0E04               	movlw	4
   953  000C9E  641B               	cpfsgt	lcd_start@i,c
   954  000CA0  D001               	goto	l1339
   955  000CA2  D00E               	goto	l1345
   956  000CA4                     l1339:
   957                           
   958                           ;lcdlib_2016.c: 204: {
   959                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
   960  000CA4  501B               	movf	lcd_start@i,w,c
   961  000CA6  0D01               	mullw	1
   962  000CA8  0E01               	movlw	low _lcd_init
   963  000CAA  24F3               	addwf	prodl,w,c
   964  000CAC  6EF6               	movwf	tblptrl,c
   965  000CAE  0E06               	movlw	high _lcd_init
   966  000CB0  20F4               	addwfc	prodh,w,c
   967  000CB2  6EF7               	movwf	tblptrh,c
   968  000CB4                     	if	0	;There are less than 3 active tblptr bytes
   969  000CB4                     	endif
   970  000CB4  0008               	tblrd		*
   971  000CB6  50F5               	movf	tablat,w,c
   972  000CB8  EC03  F007         	call	_lcd_command
   973  000CBC  2A1B               	incf	lcd_start@i,f,c
   974  000CBE  D7EE               	goto	l1335
   975  000CC0                     l1345:
   976                           
   977                           ;lcdlib_2016.c: 206: }
   978                           ;lcdlib_2016.c: 207: lcd_clear () ;
   979  000CC0  ECB6  F006         	call	_lcd_clear	;wreg free
   980  000CC4  0012               	return	
   981  000CC6                     __end_of_lcd_start:
   982                           	opt stack 0
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           prodh	equ	0xFF4
   988                           prodl	equ	0xFF3
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           postdec1	equ	0xFE5
   992                           fsr1l	equ	0xFE1
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _lcd_display_value *****************
   996 ;; Defined at:
   997 ;;		line 244 in file "../../LCD_library/lcdlib_2016.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  value           1    wreg     unsigned char 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  value           1   30[COMRAM] unsigned char 
  1002 ;;  units           1   29[COMRAM] unsigned char 
  1003 ;;  tens            1   28[COMRAM] unsigned char 
  1004 ;;  hunds           1   27[COMRAM] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;		None               void
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1014 ;;      Params:         0       0       0       0       0       0       0
  1015 ;;      Locals:         4       0       0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0
  1017 ;;      Totals:         4       0       0       0       0       0       0
  1018 ;;Total ram usage:        4 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    4
  1021 ;; This function calls:
  1022 ;;		___awdiv
  1023 ;;		___awmod
  1024 ;;		_lcd_print_ch
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text2
  1031  0009CE                     __ptext2:
  1032                           	opt stack 0
  1033  0009CE                     _lcd_display_value:
  1034                           	opt stack 26
  1035                           
  1036                           ;incstack = 0
  1037                           ;lcd_display_value@value stored from wreg
  1038  0009CE  6E1F               	movwf	lcd_display_value@value,c
  1039                           
  1040                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
  1041                           ;lcdlib_2016.c: 250: units = value % 10 ;
  1042  0009D0  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1043  0009D4  6A15               	clrf	___awmod@dividend+1,c
  1044  0009D6  0E00               	movlw	0
  1045  0009D8  6E17               	movwf	___awmod@divisor+1,c
  1046  0009DA  0E0A               	movlw	10
  1047  0009DC  6E16               	movwf	___awmod@divisor,c
  1048  0009DE  ECAD  F005         	call	___awmod	;wreg free
  1049  0009E2  5014               	movf	?___awmod,w,c
  1050  0009E4  6E1E               	movwf	lcd_display_value@units,c
  1051                           
  1052                           ;lcdlib_2016.c: 251: value = value / 10 ;
  1053  0009E6  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1054  0009EA  6A15               	clrf	___awdiv@dividend+1,c
  1055  0009EC  0E00               	movlw	0
  1056  0009EE  6E17               	movwf	___awdiv@divisor+1,c
  1057  0009F0  0E0A               	movlw	10
  1058  0009F2  6E16               	movwf	___awdiv@divisor,c
  1059  0009F4  EC2C  F005         	call	___awdiv	;wreg free
  1060  0009F8  5014               	movf	?___awdiv,w,c
  1061  0009FA  6E1F               	movwf	lcd_display_value@value,c
  1062                           
  1063                           ;lcdlib_2016.c: 252: tens = value % 10 ;
  1064  0009FC  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1065  000A00  6A15               	clrf	___awmod@dividend+1,c
  1066  000A02  0E00               	movlw	0
  1067  000A04  6E17               	movwf	___awmod@divisor+1,c
  1068  000A06  0E0A               	movlw	10
  1069  000A08  6E16               	movwf	___awmod@divisor,c
  1070  000A0A  ECAD  F005         	call	___awmod	;wreg free
  1071  000A0E  5014               	movf	?___awmod,w,c
  1072  000A10  6E1D               	movwf	lcd_display_value@tens,c
  1073                           
  1074                           ;lcdlib_2016.c: 253: value = value / 10 ;
  1075  000A12  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1076  000A16  6A15               	clrf	___awdiv@dividend+1,c
  1077  000A18  0E00               	movlw	0
  1078  000A1A  6E17               	movwf	___awdiv@divisor+1,c
  1079  000A1C  0E0A               	movlw	10
  1080  000A1E  6E16               	movwf	___awdiv@divisor,c
  1081  000A20  EC2C  F005         	call	___awdiv	;wreg free
  1082  000A24  5014               	movf	?___awdiv,w,c
  1083  000A26  6E1F               	movwf	lcd_display_value@value,c
  1084                           
  1085                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
  1086  000A28  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1087  000A2C  6A15               	clrf	___awmod@dividend+1,c
  1088  000A2E  0E00               	movlw	0
  1089  000A30  6E17               	movwf	___awmod@divisor+1,c
  1090  000A32  0E0A               	movlw	10
  1091  000A34  6E16               	movwf	___awmod@divisor,c
  1092  000A36  ECAD  F005         	call	___awmod	;wreg free
  1093  000A3A  5014               	movf	?___awmod,w,c
  1094  000A3C  6E1C               	movwf	lcd_display_value@hunds,c
  1095                           
  1096                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
  1097  000A3E  501C               	movf	lcd_display_value@hunds,w,c
  1098  000A40  0F30               	addlw	48
  1099  000A42  ECFC  F006         	call	_lcd_print_ch
  1100                           
  1101                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
  1102  000A46  501D               	movf	lcd_display_value@tens,w,c
  1103  000A48  0F30               	addlw	48
  1104  000A4A  ECFC  F006         	call	_lcd_print_ch
  1105                           
  1106                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
  1107  000A4E  501E               	movf	lcd_display_value@units,w,c
  1108  000A50  0F30               	addlw	48
  1109  000A52  ECFC  F006         	call	_lcd_print_ch
  1110  000A56  0012               	return		;funcret
  1111  000A58                     __end_of_lcd_display_value:
  1112                           	opt stack 0
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           prodh	equ	0xFF4
  1118                           prodl	equ	0xFF3
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           postdec1	equ	0xFE5
  1122                           fsr1l	equ	0xFE1
  1123                           status	equ	0xFD8
  1124                           
  1125 ;; *************** function ___awmod *****************
  1126 ;; Defined at:
  1127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  dividend        2   19[COMRAM] int 
  1130 ;;  divisor         2   21[COMRAM] int 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  sign            1   24[COMRAM] unsigned char 
  1133 ;;  counter         1   23[COMRAM] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2   19[COMRAM] int 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         4       0       0       0       0       0       0
  1144 ;;      Locals:         2       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0
  1146 ;;      Totals:         6       0       0       0       0       0       0
  1147 ;;Total ram usage:        6 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    2
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_lcd_display_value
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text3
  1158  000B5A                     __ptext3:
  1159                           	opt stack 0
  1160  000B5A                     ___awmod:
  1161                           	opt stack 27
  1162                           
  1163                           ;incstack = 0
  1164  000B5A  0E00               	movlw	0
  1165  000B5C  6E19               	movwf	___awmod@sign,c
  1166  000B5E  AE15               	btfss	___awmod@dividend+1,7,c
  1167  000B60  D006               	goto	l1301
  1168  000B62  6C14               	negf	___awmod@dividend,c
  1169  000B64  1E15               	comf	___awmod@dividend+1,f,c
  1170  000B66  B0D8               	btfsc	status,0,c
  1171  000B68  2A15               	incf	___awmod@dividend+1,f,c
  1172  000B6A  0E01               	movlw	1
  1173  000B6C  6E19               	movwf	___awmod@sign,c
  1174  000B6E                     l1301:
  1175  000B6E  AE17               	btfss	___awmod@divisor+1,7,c
  1176  000B70  D004               	goto	l1305
  1177  000B72  6C16               	negf	___awmod@divisor,c
  1178  000B74  1E17               	comf	___awmod@divisor+1,f,c
  1179  000B76  B0D8               	btfsc	status,0,c
  1180  000B78  2A17               	incf	___awmod@divisor+1,f,c
  1181  000B7A                     l1305:
  1182  000B7A  5016               	movf	___awmod@divisor,w,c
  1183  000B7C  1017               	iorwf	___awmod@divisor+1,w,c
  1184  000B7E  B4D8               	btfsc	status,2,c
  1185  000B80  D018               	goto	l1321
  1186  000B82  0E01               	movlw	1
  1187  000B84  6E18               	movwf	___awmod@counter,c
  1188  000B86  D004               	goto	l1311
  1189  000B88                     l1309:
  1190  000B88  90D8               	bcf	status,0,c
  1191  000B8A  3616               	rlcf	___awmod@divisor,f,c
  1192  000B8C  3617               	rlcf	___awmod@divisor+1,f,c
  1193  000B8E  2A18               	incf	___awmod@counter,f,c
  1194  000B90                     l1311:
  1195  000B90  AE17               	btfss	___awmod@divisor+1,7,c
  1196  000B92  D7FA               	goto	l1309
  1197  000B94                     l1313:
  1198  000B94  5016               	movf	___awmod@divisor,w,c
  1199  000B96  5C14               	subwf	___awmod@dividend,w,c
  1200  000B98  5017               	movf	___awmod@divisor+1,w,c
  1201  000B9A  5815               	subwfb	___awmod@dividend+1,w,c
  1202  000B9C  A0D8               	btfss	status,0,c
  1203  000B9E  D004               	goto	l1317
  1204  000BA0  5016               	movf	___awmod@divisor,w,c
  1205  000BA2  5E14               	subwf	___awmod@dividend,f,c
  1206  000BA4  5017               	movf	___awmod@divisor+1,w,c
  1207  000BA6  5A15               	subwfb	___awmod@dividend+1,f,c
  1208  000BA8                     l1317:
  1209  000BA8  90D8               	bcf	status,0,c
  1210  000BAA  3217               	rrcf	___awmod@divisor+1,f,c
  1211  000BAC  3216               	rrcf	___awmod@divisor,f,c
  1212  000BAE  2E18               	decfsz	___awmod@counter,f,c
  1213  000BB0  D7F1               	goto	l1313
  1214  000BB2                     l1321:
  1215  000BB2  5019               	movf	___awmod@sign,w,c
  1216  000BB4  B4D8               	btfsc	status,2,c
  1217  000BB6  D004               	goto	l1325
  1218  000BB8  6C14               	negf	___awmod@dividend,c
  1219  000BBA  1E15               	comf	___awmod@dividend+1,f,c
  1220  000BBC  B0D8               	btfsc	status,0,c
  1221  000BBE  2A15               	incf	___awmod@dividend+1,f,c
  1222  000BC0                     l1325:
  1223  000BC0  C014  F014         	movff	___awmod@dividend,?___awmod
  1224  000BC4  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  1225  000BC8  0012               	return	
  1226  000BCA                     __end_of___awmod:
  1227                           	opt stack 0
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           prodh	equ	0xFF4
  1233                           prodl	equ	0xFF3
  1234                           postinc0	equ	0xFEE
  1235                           wreg	equ	0xFE8
  1236                           postdec1	equ	0xFE5
  1237                           fsr1l	equ	0xFE1
  1238                           status	equ	0xFD8
  1239                           
  1240 ;; *************** function ___awdiv *****************
  1241 ;; Defined at:
  1242 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  dividend        2   19[COMRAM] int 
  1245 ;;  divisor         2   21[COMRAM] int 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  quotient        2   25[COMRAM] int 
  1248 ;;  sign            1   24[COMRAM] unsigned char 
  1249 ;;  counter         1   23[COMRAM] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  2   19[COMRAM] int 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2, status,0
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1259 ;;      Params:         4       0       0       0       0       0       0
  1260 ;;      Locals:         4       0       0       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0
  1262 ;;      Totals:         8       0       0       0       0       0       0
  1263 ;;Total ram usage:        8 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    2
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_lcd_display_value
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text4
  1274  000A58                     __ptext4:
  1275                           	opt stack 0
  1276  000A58                     ___awdiv:
  1277                           	opt stack 27
  1278                           
  1279                           ;incstack = 0
  1280  000A58  0E00               	movlw	0
  1281  000A5A  6E19               	movwf	___awdiv@sign,c
  1282  000A5C  AE17               	btfss	___awdiv@divisor+1,7,c
  1283  000A5E  D006               	goto	l1257
  1284  000A60  6C16               	negf	___awdiv@divisor,c
  1285  000A62  1E17               	comf	___awdiv@divisor+1,f,c
  1286  000A64  B0D8               	btfsc	status,0,c
  1287  000A66  2A17               	incf	___awdiv@divisor+1,f,c
  1288  000A68  0E01               	movlw	1
  1289  000A6A  6E19               	movwf	___awdiv@sign,c
  1290  000A6C                     l1257:
  1291  000A6C  AE15               	btfss	___awdiv@dividend+1,7,c
  1292  000A6E  D006               	goto	l1263
  1293  000A70  6C14               	negf	___awdiv@dividend,c
  1294  000A72  1E15               	comf	___awdiv@dividend+1,f,c
  1295  000A74  B0D8               	btfsc	status,0,c
  1296  000A76  2A15               	incf	___awdiv@dividend+1,f,c
  1297  000A78  0E01               	movlw	1
  1298  000A7A  1A19               	xorwf	___awdiv@sign,f,c
  1299  000A7C                     l1263:
  1300  000A7C  0E00               	movlw	0
  1301  000A7E  6E1B               	movwf	___awdiv@quotient+1,c
  1302  000A80  0E00               	movlw	0
  1303  000A82  6E1A               	movwf	___awdiv@quotient,c
  1304  000A84  5016               	movf	___awdiv@divisor,w,c
  1305  000A86  1017               	iorwf	___awdiv@divisor+1,w,c
  1306  000A88  B4D8               	btfsc	status,2,c
  1307  000A8A  D01C               	goto	l1285
  1308  000A8C  0E01               	movlw	1
  1309  000A8E  6E18               	movwf	___awdiv@counter,c
  1310  000A90  D004               	goto	l1271
  1311  000A92                     l1269:
  1312  000A92  90D8               	bcf	status,0,c
  1313  000A94  3616               	rlcf	___awdiv@divisor,f,c
  1314  000A96  3617               	rlcf	___awdiv@divisor+1,f,c
  1315  000A98  2A18               	incf	___awdiv@counter,f,c
  1316  000A9A                     l1271:
  1317  000A9A  AE17               	btfss	___awdiv@divisor+1,7,c
  1318  000A9C  D7FA               	goto	l1269
  1319  000A9E                     l1273:
  1320  000A9E  90D8               	bcf	status,0,c
  1321  000AA0  361A               	rlcf	___awdiv@quotient,f,c
  1322  000AA2  361B               	rlcf	___awdiv@quotient+1,f,c
  1323  000AA4  5016               	movf	___awdiv@divisor,w,c
  1324  000AA6  5C14               	subwf	___awdiv@dividend,w,c
  1325  000AA8  5017               	movf	___awdiv@divisor+1,w,c
  1326  000AAA  5815               	subwfb	___awdiv@dividend+1,w,c
  1327  000AAC  A0D8               	btfss	status,0,c
  1328  000AAE  D005               	goto	l1281
  1329  000AB0  5016               	movf	___awdiv@divisor,w,c
  1330  000AB2  5E14               	subwf	___awdiv@dividend,f,c
  1331  000AB4  5017               	movf	___awdiv@divisor+1,w,c
  1332  000AB6  5A15               	subwfb	___awdiv@dividend+1,f,c
  1333  000AB8  801A               	bsf	___awdiv@quotient,0,c
  1334  000ABA                     l1281:
  1335  000ABA  90D8               	bcf	status,0,c
  1336  000ABC  3217               	rrcf	___awdiv@divisor+1,f,c
  1337  000ABE  3216               	rrcf	___awdiv@divisor,f,c
  1338  000AC0  2E18               	decfsz	___awdiv@counter,f,c
  1339  000AC2  D7ED               	goto	l1273
  1340  000AC4                     l1285:
  1341  000AC4  5019               	movf	___awdiv@sign,w,c
  1342  000AC6  B4D8               	btfsc	status,2,c
  1343  000AC8  D004               	goto	l1289
  1344  000ACA  6C1A               	negf	___awdiv@quotient,c
  1345  000ACC  1E1B               	comf	___awdiv@quotient+1,f,c
  1346  000ACE  B0D8               	btfsc	status,0,c
  1347  000AD0  2A1B               	incf	___awdiv@quotient+1,f,c
  1348  000AD2                     l1289:
  1349  000AD2  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  1350  000AD6  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  1351  000ADA  0012               	return	
  1352  000ADC                     __end_of___awdiv:
  1353                           	opt stack 0
  1354                           tblptru	equ	0xFF8
  1355                           tblptrh	equ	0xFF7
  1356                           tblptrl	equ	0xFF6
  1357                           tablat	equ	0xFF5
  1358                           prodh	equ	0xFF4
  1359                           prodl	equ	0xFF3
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           postdec1	equ	0xFE5
  1363                           fsr1l	equ	0xFE1
  1364                           status	equ	0xFD8
  1365                           
  1366 ;; *************** function _Window *****************
  1367 ;; Defined at:
  1368 ;;		line 258 in file "st_mch3_update_values_with_debounce_lib.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  num             1    wreg     unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  num             1   31[COMRAM] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;		None               void
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1382 ;;      Params:         0       0       0       0       0       0       0
  1383 ;;      Locals:         1       0       0       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0       0       0
  1385 ;;      Totals:         3       0       0       0       0       0       0
  1386 ;;Total ram usage:        3 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    5
  1389 ;; This function calls:
  1390 ;;		_lcd_clear
  1391 ;;		_lcd_cursor
  1392 ;;		_lcd_print
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text5
  1399  000BCA                     __ptext5:
  1400                           	opt stack 0
  1401  000BCA                     _Window:
  1402                           	opt stack 25
  1403                           
  1404                           ;incstack = 0
  1405                           ;Window@num stored from wreg
  1406  000BCA  6E20               	movwf	Window@num,c
  1407                           
  1408                           ;st_mch3_update_values_with_debounce_lib.c: 260: lcd_clear();
  1409  000BCC  ECB6  F006         	call	_lcd_clear	;wreg free
  1410                           
  1411                           ;st_mch3_update_values_with_debounce_lib.c: 261: lcd_cursor ( 0, 0 ) ;
  1412  000BD0  0E00               	movlw	0
  1413  000BD2  6E19               	movwf	lcd_cursor@y,c
  1414  000BD4  0E00               	movlw	0
  1415  000BD6  ECDD  F006         	call	_lcd_cursor
  1416                           
  1417                           ;st_mch3_update_values_with_debounce_lib.c: 262: lcd_print ( msg_ary[num*2]);
  1418  000BDA  5020               	movf	Window@num,w,c
  1419  000BDC  0D20               	mullw	32
  1420  000BDE  0E06               	movlw	low _msg_ary
  1421  000BE0  24F3               	addwf	prodl,w,c
  1422  000BE2  6E19               	movwf	lcd_print@mess,c
  1423  000BE4  0E06               	movlw	high _msg_ary
  1424  000BE6  20F4               	addwfc	prodh,w,c
  1425  000BE8  6E1A               	movwf	lcd_print@mess+1,c
  1426  000BEA  EC18  F006         	call	_lcd_print	;wreg free
  1427                           
  1428                           ;st_mch3_update_values_with_debounce_lib.c: 263: lcd_cursor ( 0, 1 ) ;
  1429  000BEE  0E01               	movlw	1
  1430  000BF0  6E19               	movwf	lcd_cursor@y,c
  1431  000BF2  0E00               	movlw	0
  1432  000BF4  ECDD  F006         	call	_lcd_cursor
  1433                           
  1434                           ;st_mch3_update_values_with_debounce_lib.c: 264: lcd_print ( msg_ary[(num*2)+1]);
  1435  000BF8  5020               	movf	Window@num,w,c
  1436  000BFA  6E1E               	movwf	??_Window& (0+255),c
  1437  000BFC  6A1F               	clrf	(??_Window+1)& (0+255),c
  1438  000BFE  90D8               	bcf	status,0,c
  1439  000C00  361E               	rlcf	??_Window,f,c
  1440  000C02  361F               	rlcf	??_Window+1,f,c
  1441  000C04  3A1E               	swapf	??_Window,f,c
  1442  000C06  3A1F               	swapf	??_Window+1,f,c
  1443  000C08  0EF0               	movlw	240
  1444  000C0A  161F               	andwf	??_Window+1,f,c
  1445  000C0C  501E               	movf	??_Window,w,c
  1446  000C0E  0B0F               	andlw	15
  1447  000C10  121F               	iorwf	??_Window+1,f,c
  1448  000C12  0EF0               	movlw	240
  1449  000C14  161E               	andwf	??_Window,f,c
  1450  000C16  0E10               	movlw	16
  1451  000C18  261E               	addwf	??_Window,f,c
  1452  000C1A  0E00               	movlw	0
  1453  000C1C  221F               	addwfc	??_Window+1,f,c
  1454  000C1E  0E06               	movlw	low _msg_ary
  1455  000C20  241E               	addwf	??_Window,w,c
  1456  000C22  6E19               	movwf	lcd_print@mess,c
  1457  000C24  0E06               	movlw	high _msg_ary
  1458  000C26  201F               	addwfc	??_Window+1,w,c
  1459  000C28  6E1A               	movwf	lcd_print@mess+1,c
  1460  000C2A  EC18  F006         	call	_lcd_print	;wreg free
  1461  000C2E  0012               	return		;funcret
  1462  000C30                     __end_of_Window:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           prodh	equ	0xFF4
  1469                           prodl	equ	0xFF3
  1470                           postinc0	equ	0xFEE
  1471                           wreg	equ	0xFE8
  1472                           postdec1	equ	0xFE5
  1473                           fsr1l	equ	0xFE1
  1474                           status	equ	0xFD8
  1475                           
  1476 ;; *************** function _lcd_print *****************
  1477 ;; Defined at:
  1478 ;;		line 215 in file "../../LCD_library/lcdlib_2016.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  mess            2   24[COMRAM] PTR const unsigned char 
  1481 ;;		 -> msg_ary(160), STR_2(12), STR_1(8), 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  i               1   28[COMRAM] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      unsigned char 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1493 ;;      Params:         2       0       0       0       0       0       0
  1494 ;;      Locals:         1       0       0       0       0       0       0
  1495 ;;      Temps:          2       0       0       0       0       0       0
  1496 ;;      Totals:         5       0       0       0       0       0       0
  1497 ;;Total ram usage:        5 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    4
  1500 ;; This function calls:
  1501 ;;		_lcd_print_ch
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;;		_Window
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text6
  1509  000C30                     __ptext6:
  1510                           	opt stack 0
  1511  000C30                     _lcd_print:
  1512                           	opt stack 26
  1513                           
  1514                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
  1515                           
  1516                           ;incstack = 0
  1517  000C30  0E00               	movlw	0
  1518  000C32  6E1D               	movwf	lcd_print@i,c
  1519                           
  1520                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
  1521  000C34  D013               	goto	l1245
  1522  000C36                     l1241:
  1523                           
  1524                           ;lcdlib_2016.c: 225: {
  1525                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
  1526  000C36  501D               	movf	lcd_print@i,w,c
  1527  000C38  0D01               	mullw	1
  1528  000C3A  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1529  000C3E  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1530  000C42  50F3               	movf	prodl,w,c
  1531  000C44  261B               	addwf	??_lcd_print,f,c
  1532  000C46  50F4               	movf	prodh,w,c
  1533  000C48  221C               	addwfc	??_lcd_print+1,f,c
  1534  000C4A  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1535  000C4E  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1536  000C52                     	if	0	;tblptru may be non-zero
  1537  000C52                     	endif
  1538  000C52                     	if	0	;tblptru may be non-zero
  1539  000C52                     	endif
  1540  000C52  0008               	tblrd		*
  1541  000C54  50F5               	movf	tablat,w,c
  1542  000C56  ECFC  F006         	call	_lcd_print_ch
  1543                           
  1544                           ;lcdlib_2016.c: 227: i++ ;
  1545  000C5A  2A1D               	incf	lcd_print@i,f,c
  1546  000C5C                     l1245:
  1547  000C5C  501D               	movf	lcd_print@i,w,c
  1548  000C5E  0D01               	mullw	1
  1549  000C60  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1550  000C64  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1551  000C68  50F3               	movf	prodl,w,c
  1552  000C6A  261B               	addwf	??_lcd_print,f,c
  1553  000C6C  50F4               	movf	prodh,w,c
  1554  000C6E  221C               	addwfc	??_lcd_print+1,f,c
  1555  000C70  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1556  000C74  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1557  000C78                     	if	0	;tblptru may be non-zero
  1558  000C78                     	endif
  1559  000C78                     	if	0	;tblptru may be non-zero
  1560  000C78                     	endif
  1561  000C78  0008               	tblrd		*
  1562  000C7A  50F5               	movf	tablat,w,c
  1563  000C7C  0900               	iorlw	0
  1564  000C7E  B4D8               	btfsc	status,2,c
  1565  000C80  0012               	return	
  1566  000C82  D7D9               	goto	l1241
  1567  000C84                     __end_of_lcd_print:
  1568                           	opt stack 0
  1569                           tblptru	equ	0xFF8
  1570                           tblptrh	equ	0xFF7
  1571                           tblptrl	equ	0xFF6
  1572                           tablat	equ	0xFF5
  1573                           prodh	equ	0xFF4
  1574                           prodl	equ	0xFF3
  1575                           postinc0	equ	0xFEE
  1576                           wreg	equ	0xFE8
  1577                           postdec1	equ	0xFE5
  1578                           fsr1l	equ	0xFE1
  1579                           status	equ	0xFD8
  1580                           
  1581 ;; *************** function _lcd_print_ch *****************
  1582 ;; Defined at:
  1583 ;;		line 115 in file "../../LCD_library/lcdlib_2016.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  in              1    wreg     unsigned char 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  in              1   23[COMRAM] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      unsigned char 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1597 ;;      Params:         0       0       0       0       0       0       0
  1598 ;;      Locals:         1       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0
  1600 ;;      Totals:         1       0       0       0       0       0       0
  1601 ;;Total ram usage:        1 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    3
  1604 ;; This function calls:
  1605 ;;		_lcd_raw_send
  1606 ;; This function is called by:
  1607 ;;		_lcd_print
  1608 ;;		_lcd_display_value
  1609 ;;		_lcd_display_int_value
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text7
  1614  000DF8                     __ptext7:
  1615                           	opt stack 0
  1616  000DF8                     _lcd_print_ch:
  1617                           	opt stack 26
  1618                           
  1619                           ;incstack = 0
  1620                           ;lcd_print_ch@in stored from wreg
  1621  000DF8  6E18               	movwf	lcd_print_ch@in,c
  1622                           
  1623                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  1624  000DFA  0E01               	movlw	1
  1625  000DFC  6E14               	movwf	lcd_raw_send@RS,c
  1626  000DFE  5018               	movf	lcd_print_ch@in,w,c
  1627  000E00  EC09  F004         	call	_lcd_raw_send
  1628  000E04  0012               	return	
  1629  000E06                     __end_of_lcd_print_ch:
  1630                           	opt stack 0
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           prodh	equ	0xFF4
  1636                           prodl	equ	0xFF3
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           postdec1	equ	0xFE5
  1640                           fsr1l	equ	0xFE1
  1641                           status	equ	0xFD8
  1642                           
  1643 ;; *************** function _lcd_cursor *****************
  1644 ;; Defined at:
  1645 ;;		line 144 in file "../../LCD_library/lcdlib_2016.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  x               1    wreg     unsigned char 
  1648 ;;  y               1   24[COMRAM] unsigned char 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  x               1   25[COMRAM] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      unsigned char 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1660 ;;      Params:         1       0       0       0       0       0       0
  1661 ;;      Locals:         1       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0
  1663 ;;      Totals:         2       0       0       0       0       0       0
  1664 ;;Total ram usage:        2 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    4
  1667 ;; This function calls:
  1668 ;;		_lcd_command
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;;		_Window
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text8
  1676  000DBA                     __ptext8:
  1677                           	opt stack 0
  1678  000DBA                     _lcd_cursor:
  1679                           	opt stack 26
  1680                           
  1681                           ;incstack = 0
  1682                           ;lcd_cursor@x stored from wreg
  1683  000DBA  6E1A               	movwf	lcd_cursor@x,c
  1684                           
  1685                           ;lcdlib_2016.c: 153: if ( y==0 )
  1686  000DBC  5019               	movf	lcd_cursor@y,w,c
  1687  000DBE  A4D8               	btfss	status,2,c
  1688  000DC0  D002               	goto	l1233
  1689                           
  1690                           ;lcdlib_2016.c: 154: {
  1691                           ;lcdlib_2016.c: 156: y=0x80 ;
  1692  000DC2  0E80               	movlw	128
  1693  000DC4  D001               	goto	L3
  1694  000DC6                     l1233:
  1695                           
  1696                           ;lcdlib_2016.c: 158: else
  1697                           ;lcdlib_2016.c: 159: {
  1698                           ;lcdlib_2016.c: 161: y=0xc0 ;
  1699  000DC6  0EC0               	movlw	192
  1700  000DC8                     L3:
  1701  000DC8  6E19               	movwf	lcd_cursor@y,c
  1702                           
  1703                           ;lcdlib_2016.c: 162: }
  1704                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  1705  000DCA  5019               	movf	lcd_cursor@y,w,c
  1706  000DCC  241A               	addwf	lcd_cursor@x,w,c
  1707  000DCE  EC03  F007         	call	_lcd_command
  1708  000DD2  0012               	return	
  1709  000DD4                     __end_of_lcd_cursor:
  1710                           	opt stack 0
  1711                           tblptru	equ	0xFF8
  1712                           tblptrh	equ	0xFF7
  1713                           tblptrl	equ	0xFF6
  1714                           tablat	equ	0xFF5
  1715                           prodh	equ	0xFF4
  1716                           prodl	equ	0xFF3
  1717                           postinc0	equ	0xFEE
  1718                           wreg	equ	0xFE8
  1719                           postdec1	equ	0xFE5
  1720                           fsr1l	equ	0xFE1
  1721                           status	equ	0xFD8
  1722                           
  1723 ;; *************** function _lcd_clear *****************
  1724 ;; Defined at:
  1725 ;;		line 131 in file "../../LCD_library/lcdlib_2016.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      unsigned char 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1739 ;;      Params:         0       0       0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0       0       0
  1741 ;;      Temps:          1       0       0       0       0       0       0
  1742 ;;      Totals:         1       0       0       0       0       0       0
  1743 ;;Total ram usage:        1 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    4
  1746 ;; This function calls:
  1747 ;;		_lcd_command
  1748 ;; This function is called by:
  1749 ;;		_lcd_start
  1750 ;;		_main
  1751 ;;		_Window
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text9
  1756  000D6C                     __ptext9:
  1757                           	opt stack 0
  1758  000D6C                     _lcd_clear:
  1759                           	opt stack 25
  1760                           
  1761                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
  1762                           
  1763                           ;incstack = 0
  1764  000D6C  0E01               	movlw	1
  1765  000D6E  EC03  F007         	call	_lcd_command
  1766                           
  1767                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
  1768  000D72  0E0D               	movlw	13
  1769  000D74  6E19               	movwf	??_lcd_clear& (0+255),c
  1770  000D76  0EC3               	movlw	195
  1771  000D78                     u767:
  1772  000D78  2EE8               	decfsz	wreg,f,c
  1773  000D7A  D7FE               	goto	u767
  1774  000D7C  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1775  000D7E  D7FC               	goto	u767
  1776  000D80  F000               	nop	
  1777                           
  1778                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
  1779  000D82  0E02               	movlw	2
  1780  000D84  EC03  F007         	call	_lcd_command
  1781                           
  1782                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
  1783  000D88  0E0D               	movlw	13
  1784  000D8A  6E19               	movwf	??_lcd_clear& (0+255),c
  1785  000D8C  0EC3               	movlw	195
  1786  000D8E                     u777:
  1787  000D8E  2EE8               	decfsz	wreg,f,c
  1788  000D90  D7FE               	goto	u777
  1789  000D92  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1790  000D94  D7FC               	goto	u777
  1791  000D96  F000               	nop	
  1792  000D98  0012               	return	
  1793  000D9A                     __end_of_lcd_clear:
  1794                           	opt stack 0
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           prodh	equ	0xFF4
  1800                           prodl	equ	0xFF3
  1801                           postinc0	equ	0xFEE
  1802                           wreg	equ	0xFE8
  1803                           postdec1	equ	0xFE5
  1804                           fsr1l	equ	0xFE1
  1805                           status	equ	0xFD8
  1806                           
  1807 ;; *************** function _lcd_command *****************
  1808 ;; Defined at:
  1809 ;;		line 123 in file "../../LCD_library/lcdlib_2016.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  in              1    wreg     unsigned char 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  in              1   23[COMRAM] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;		None               void
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1823 ;;      Params:         0       0       0       0       0       0       0
  1824 ;;      Locals:         1       0       0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0
  1826 ;;      Totals:         1       0       0       0       0       0       0
  1827 ;;Total ram usage:        1 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    3
  1830 ;; This function calls:
  1831 ;;		_lcd_raw_send
  1832 ;; This function is called by:
  1833 ;;		_lcd_clear
  1834 ;;		_lcd_cursor
  1835 ;;		_lcd_start
  1836 ;;		_lcd_cursor_on
  1837 ;;		_lcd_cursor_off
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text10
  1842  000E06                     __ptext10:
  1843                           	opt stack 0
  1844  000E06                     _lcd_command:
  1845                           	opt stack 26
  1846                           
  1847                           ;incstack = 0
  1848                           ;lcd_command@in stored from wreg
  1849  000E06  6E18               	movwf	lcd_command@in,c
  1850                           
  1851                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  1852  000E08  0E00               	movlw	0
  1853  000E0A  6E14               	movwf	lcd_raw_send@RS,c
  1854  000E0C  5018               	movf	lcd_command@in,w,c
  1855  000E0E  EC09  F004         	call	_lcd_raw_send
  1856  000E12  0012               	return		;funcret
  1857  000E14                     __end_of_lcd_command:
  1858                           	opt stack 0
  1859                           tblptru	equ	0xFF8
  1860                           tblptrh	equ	0xFF7
  1861                           tblptrl	equ	0xFF6
  1862                           tablat	equ	0xFF5
  1863                           prodh	equ	0xFF4
  1864                           prodl	equ	0xFF3
  1865                           postinc0	equ	0xFEE
  1866                           wreg	equ	0xFE8
  1867                           postdec1	equ	0xFE5
  1868                           fsr1l	equ	0xFE1
  1869                           status	equ	0xFD8
  1870                           
  1871 ;; *************** function _lcd_raw_send *****************
  1872 ;; Defined at:
  1873 ;;		line 74 in file "../../LCD_library/lcdlib_2016.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  in              1    wreg     unsigned char 
  1876 ;;  RS              1   19[COMRAM] unsigned char 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  in              1   22[COMRAM] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;		None               void
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1888 ;;      Params:         1       0       0       0       0       0       0
  1889 ;;      Locals:         1       0       0       0       0       0       0
  1890 ;;      Temps:          2       0       0       0       0       0       0
  1891 ;;      Totals:         4       0       0       0       0       0       0
  1892 ;;Total ram usage:        4 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    2
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_lcd_print_ch
  1899 ;;		_lcd_command
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text11
  1904  000812                     __ptext11:
  1905                           	opt stack 0
  1906  000812                     _lcd_raw_send:
  1907                           	opt stack 26
  1908                           
  1909                           ;incstack = 0
  1910                           ;lcd_raw_send@in stored from wreg
  1911  000812  6E17               	movwf	lcd_raw_send@in,c
  1912                           
  1913                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  1914  000814  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1915  000818  3A15               	swapf	??_lcd_raw_send,f,c
  1916  00081A  0E0F               	movlw	15
  1917  00081C  1615               	andwf	??_lcd_raw_send,f,c
  1918  00081E  508C               	movf	3980,w,c	;volatile
  1919  000820  1815               	xorwf	??_lcd_raw_send,w,c
  1920  000822  0BFE               	andlw	-2
  1921  000824  1815               	xorwf	??_lcd_raw_send,w,c
  1922  000826  6E8C               	movwf	3980,c	;volatile
  1923                           
  1924                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  1925  000828  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1926  00082C  0E05               	movlw	5
  1927  00082E  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1928  000830                     u425:
  1929  000830  90D8               	bcf	status,0,c
  1930  000832  3215               	rrcf	??_lcd_raw_send,f,c
  1931  000834  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1932  000836  D7FC               	goto	u425
  1933  000838  4615               	rlncf	??_lcd_raw_send,f,c
  1934  00083A  508C               	movf	3980,w,c	;volatile
  1935  00083C  1815               	xorwf	??_lcd_raw_send,w,c
  1936  00083E  0BFD               	andlw	-3
  1937  000840  1815               	xorwf	??_lcd_raw_send,w,c
  1938  000842  6E8C               	movwf	3980,c	;volatile
  1939                           
  1940                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  1941  000844  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  1942  000848  0E06               	movlw	6
  1943  00084A  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1944  00084C                     u435:
  1945  00084C  90D8               	bcf	status,0,c
  1946  00084E  3215               	rrcf	??_lcd_raw_send,f,c
  1947  000850  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1948  000852  D7FC               	goto	u435
  1949  000854  4615               	rlncf	??_lcd_raw_send,f,c
  1950  000856  4615               	rlncf	??_lcd_raw_send,f,c
  1951  000858  508C               	movf	3980,w,c	;volatile
  1952  00085A  1815               	xorwf	??_lcd_raw_send,w,c
  1953  00085C  0BFB               	andlw	-5
  1954  00085E  1815               	xorwf	??_lcd_raw_send,w,c
  1955  000860  6E8C               	movwf	3980,c	;volatile
  1956                           
  1957                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  1958  000862  6A15               	clrf	??_lcd_raw_send& (0+255),c
  1959  000864  AE17               	btfss	lcd_raw_send@in,7,c
  1960  000866  D001               	bra	u445
  1961  000868  2A15               	incf	??_lcd_raw_send& (0+255),f,c
  1962  00086A                     u445:
  1963  00086A  4615               	rlncf	??_lcd_raw_send,f,c
  1964  00086C  4615               	rlncf	??_lcd_raw_send,f,c
  1965  00086E  4615               	rlncf	??_lcd_raw_send,f,c
  1966  000870  508C               	movf	3980,w,c	;volatile
  1967  000872  1815               	xorwf	??_lcd_raw_send,w,c
  1968  000874  0BF7               	andlw	-9
  1969  000876  1815               	xorwf	??_lcd_raw_send,w,c
  1970  000878  6E8C               	movwf	3980,c	;volatile
  1971                           
  1972                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  1973  00087A  B014               	btfsc	lcd_raw_send@RS,0,c
  1974  00087C  D002               	bra	u455
  1975  00087E  988C               	bcf	3980,4,c	;volatile
  1976  000880  D001               	bra	u456
  1977  000882                     u455:
  1978  000882  888C               	bsf	3980,4,c	;volatile
  1979  000884                     u456:
  1980                           
  1981                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1982  000884  0E03               	movlw	3
  1983  000886                     u787:
  1984  000886  2EE8               	decfsz	wreg,f,c
  1985  000888  D7FE               	goto	u787
  1986                           
  1987                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  1988  00088A  8A8C               	bsf	3980,5,c	;volatile
  1989                           
  1990                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1991  00088C  0E03               	movlw	3
  1992  00088E                     u797:
  1993  00088E  2EE8               	decfsz	wreg,f,c
  1994  000890  D7FE               	goto	u797
  1995                           
  1996                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  1997  000892  9A8C               	bcf	3980,5,c	;volatile
  1998                           
  1999                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2000  000894  0E51               	movlw	81
  2001  000896                     u807:
  2002  000896  2EE8               	decfsz	wreg,f,c
  2003  000898  D7FE               	goto	u807
  2004  00089A  D000               	nop2		;nop
  2005                           
  2006                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  2007  00089C  B017               	btfsc	lcd_raw_send@in,0,c
  2008  00089E  D002               	bra	u465
  2009  0008A0  908C               	bcf	3980,0,c	;volatile
  2010  0008A2  D001               	bra	u466
  2011  0008A4                     u465:
  2012  0008A4  808C               	bsf	3980,0,c	;volatile
  2013  0008A6                     u466:
  2014                           
  2015                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  2016  0008A6  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2017  0008AA  90D8               	bcf	status,0,c
  2018  0008AC  3215               	rrcf	??_lcd_raw_send,f,c
  2019  0008AE  4615               	rlncf	??_lcd_raw_send,f,c
  2020  0008B0  508C               	movf	3980,w,c	;volatile
  2021  0008B2  1815               	xorwf	??_lcd_raw_send,w,c
  2022  0008B4  0BFD               	andlw	-3
  2023  0008B6  1815               	xorwf	??_lcd_raw_send,w,c
  2024  0008B8  6E8C               	movwf	3980,c	;volatile
  2025                           
  2026                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  2027  0008BA  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2028  0008BE  90D8               	bcf	status,0,c
  2029  0008C0  3215               	rrcf	??_lcd_raw_send,f,c
  2030  0008C2  90D8               	bcf	status,0,c
  2031  0008C4  3215               	rrcf	??_lcd_raw_send,f,c
  2032  0008C6  4615               	rlncf	??_lcd_raw_send,f,c
  2033  0008C8  4615               	rlncf	??_lcd_raw_send,f,c
  2034  0008CA  508C               	movf	3980,w,c	;volatile
  2035  0008CC  1815               	xorwf	??_lcd_raw_send,w,c
  2036  0008CE  0BFB               	andlw	-5
  2037  0008D0  1815               	xorwf	??_lcd_raw_send,w,c
  2038  0008D2  6E8C               	movwf	3980,c	;volatile
  2039                           
  2040                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  2041  0008D4  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2042  0008D8  90D8               	bcf	status,0,c
  2043  0008DA  3215               	rrcf	??_lcd_raw_send,f,c
  2044  0008DC  90D8               	bcf	status,0,c
  2045  0008DE  3215               	rrcf	??_lcd_raw_send,f,c
  2046  0008E0  90D8               	bcf	status,0,c
  2047  0008E2  3215               	rrcf	??_lcd_raw_send,f,c
  2048  0008E4  4615               	rlncf	??_lcd_raw_send,f,c
  2049  0008E6  4615               	rlncf	??_lcd_raw_send,f,c
  2050  0008E8  4615               	rlncf	??_lcd_raw_send,f,c
  2051  0008EA  508C               	movf	3980,w,c	;volatile
  2052  0008EC  1815               	xorwf	??_lcd_raw_send,w,c
  2053  0008EE  0BF7               	andlw	-9
  2054  0008F0  1815               	xorwf	??_lcd_raw_send,w,c
  2055  0008F2  6E8C               	movwf	3980,c	;volatile
  2056                           
  2057                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2058  0008F4  0E03               	movlw	3
  2059  0008F6                     u817:
  2060  0008F6  2EE8               	decfsz	wreg,f,c
  2061  0008F8  D7FE               	goto	u817
  2062                           
  2063                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  2064  0008FA  8A8C               	bsf	3980,5,c	;volatile
  2065                           
  2066                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2067  0008FC  0E03               	movlw	3
  2068  0008FE                     u827:
  2069  0008FE  2EE8               	decfsz	wreg,f,c
  2070  000900  D7FE               	goto	u827
  2071                           
  2072                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  2073  000902  9A8C               	bcf	3980,5,c	;volatile
  2074                           
  2075                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2076  000904  0E51               	movlw	81
  2077  000906                     u837:
  2078  000906  2EE8               	decfsz	wreg,f,c
  2079  000908  D7FE               	goto	u837
  2080  00090A  D000               	nop2		;nop
  2081  00090C  0012               	return		;funcret
  2082  00090E                     __end_of_lcd_raw_send:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           prodh	equ	0xFF4
  2089                           prodl	equ	0xFF3
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postdec1	equ	0xFE5
  2093                           fsr1l	equ	0xFE1
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _Initial *****************
  2097 ;; Defined at:
  2098 ;;		line 237 in file "st_mch3_update_values_with_debounce_lib.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;		None               void
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2112 ;;      Params:         0       0       0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0
  2115 ;;      Totals:         0       0       0       0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    3
  2119 ;; This function calls:
  2120 ;;		_OpenTimer0
  2121 ;;		_WriteTimer0
  2122 ;;		_delay_s
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text12
  2129  000D00                     __ptext12:
  2130                           	opt stack 0
  2131  000D00                     _Initial:
  2132                           	opt stack 27
  2133                           
  2134                           ;st_mch3_update_values_with_debounce_lib.c: 238: ADCON0 = 0x01;
  2135                           
  2136                           ;incstack = 0
  2137  000D00  0E01               	movlw	1
  2138  000D02  6EC2               	movwf	4034,c	;volatile
  2139                           
  2140                           ;st_mch3_update_values_with_debounce_lib.c: 239: ADCON1 = 0x0E;
  2141  000D04  0E0E               	movlw	14
  2142  000D06  6EC1               	movwf	4033,c	;volatile
  2143                           
  2144                           ;st_mch3_update_values_with_debounce_lib.c: 240: ADCON2 = 0x17;
  2145  000D08  0E17               	movlw	23
  2146  000D0A  6EC0               	movwf	4032,c	;volatile
  2147                           
  2148                           ;st_mch3_update_values_with_debounce_lib.c: 241: TRISA = 0x01;
  2149  000D0C  0E01               	movlw	1
  2150  000D0E  6E92               	movwf	3986,c	;volatile
  2151                           
  2152                           ;st_mch3_update_values_with_debounce_lib.c: 242: TRISB = 0xFF;
  2153  000D10  6893               	setf	3987,c	;volatile
  2154                           
  2155                           ;st_mch3_update_values_with_debounce_lib.c: 243: TRISC = 0x00;
  2156  000D12  0E00               	movlw	0
  2157  000D14  6E94               	movwf	3988,c	;volatile
  2158                           
  2159                           ;st_mch3_update_values_with_debounce_lib.c: 245: LATC = 0xff;
  2160  000D16  688B               	setf	3979,c	;volatile
  2161                           
  2162                           ;st_mch3_update_values_with_debounce_lib.c: 246: delay_s(3);
  2163  000D18  0E03               	movlw	3
  2164  000D1A  EC9C  F006         	call	_delay_s
  2165                           
  2166                           ;st_mch3_update_values_with_debounce_lib.c: 247: LATC = 0x00;
  2167  000D1E  0E00               	movlw	0
  2168  000D20  6E8B               	movwf	3979,c	;volatile
  2169                           
  2170                           ;st_mch3_update_values_with_debounce_lib.c: 250: OpenTimer0( 0b11111111 & 0b10111111 & 0
      +                          b11011111 & 0b11110000);
  2171  000D22  0E90               	movlw	144
  2172  000D24  ECCD  F006         	call	_OpenTimer0
  2173                           
  2174                           ;st_mch3_update_values_with_debounce_lib.c: 251: WriteTimer0(40960);
  2175  000D28  0EA0               	movlw	160
  2176  000D2A  6E15               	movwf	WriteTimer0@timer0+1,c
  2177  000D2C  0E00               	movlw	0
  2178  000D2E  6E14               	movwf	WriteTimer0@timer0,c
  2179  000D30  ECEA  F006         	call	_WriteTimer0	;wreg free
  2180                           
  2181                           ;st_mch3_update_values_with_debounce_lib.c: 252: (INTCONbits.GIE = 1);
  2182  000D34  8EF2               	bsf	intcon,7,c	;volatile
  2183  000D36  0012               	return		;funcret
  2184  000D38                     __end_of_Initial:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           prodh	equ	0xFF4
  2191                           prodl	equ	0xFF3
  2192                           intcon	equ	0xFF2
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1l	equ	0xFE1
  2197                           status	equ	0xFD8
  2198                           
  2199 ;; *************** function _delay_s *****************
  2200 ;; Defined at:
  2201 ;;		line 268 in file "st_mch3_update_values_with_debounce_lib.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  secs            1    wreg     unsigned char 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  secs            1   20[COMRAM] unsigned char 
  2206 ;;  i               1   22[COMRAM] unsigned char 
  2207 ;;  j               1   21[COMRAM] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2217 ;;      Params:         0       0       0       0       0       0       0
  2218 ;;      Locals:         3       0       0       0       0       0       0
  2219 ;;      Temps:          1       0       0       0       0       0       0
  2220 ;;      Totals:         4       0       0       0       0       0       0
  2221 ;;Total ram usage:        4 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    2
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_main
  2228 ;;		_Initial
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text13
  2233  000D38                     __ptext13:
  2234                           	opt stack 0
  2235  000D38                     _delay_s:
  2236                           	opt stack 28
  2237                           
  2238                           ;incstack = 0
  2239                           ;delay_s@secs stored from wreg
  2240  000D38  6E15               	movwf	delay_s@secs,c
  2241                           
  2242                           ;st_mch3_update_values_with_debounce_lib.c: 270: unsigned char i,j;
  2243                           ;st_mch3_update_values_with_debounce_lib.c: 271: for(j=0;j<secs;j++)
  2244  000D3A  0E00               	movlw	0
  2245  000D3C  6E16               	movwf	delay_s@j,c
  2246  000D3E  D011               	goto	l899
  2247  000D40                     l887:
  2248                           
  2249                           ;st_mch3_update_values_with_debounce_lib.c: 272: {
  2250                           ;st_mch3_update_values_with_debounce_lib.c: 273: for (i=0;i<25;i++)
  2251  000D40  0E00               	movlw	0
  2252  000D42  6E17               	movwf	delay_s@i,c
  2253  000D44                     l889:
  2254  000D44  0E18               	movlw	24
  2255  000D46  6417               	cpfsgt	delay_s@i,c
  2256  000D48  D001               	goto	l893
  2257  000D4A  D00A               	goto	l897
  2258  000D4C                     l893:
  2259                           
  2260                           ;st_mch3_update_values_with_debounce_lib.c: 274: _delay((unsigned long)((40)*(19660800/4
      +                          000.0)));
  2261  000D4C  0E00               	movlw	0
  2262  000D4E  6E14               	movwf	??_delay_s& (0+255),c
  2263  000D50  0E54               	movlw	84
  2264  000D52                     u847:
  2265  000D52  2EE8               	decfsz	wreg,f,c
  2266  000D54  D7FE               	goto	u847
  2267  000D56  2E14               	decfsz	??_delay_s& (0+255),f,c
  2268  000D58  D7FC               	goto	u847
  2269  000D5A  D000               	nop2	
  2270  000D5C  2A17               	incf	delay_s@i,f,c
  2271  000D5E  D7F2               	goto	l889
  2272  000D60                     l897:
  2273  000D60  2A16               	incf	delay_s@j,f,c
  2274  000D62                     l899:
  2275  000D62  5015               	movf	delay_s@secs,w,c
  2276  000D64  5C16               	subwf	delay_s@j,w,c
  2277  000D66  B0D8               	btfsc	status,0,c
  2278  000D68  0012               	return	
  2279  000D6A  D7EA               	goto	l887
  2280  000D6C                     __end_of_delay_s:
  2281                           	opt stack 0
  2282                           tblptru	equ	0xFF8
  2283                           tblptrh	equ	0xFF7
  2284                           tblptrl	equ	0xFF6
  2285                           tablat	equ	0xFF5
  2286                           prodh	equ	0xFF4
  2287                           prodl	equ	0xFF3
  2288                           intcon	equ	0xFF2
  2289                           postinc0	equ	0xFEE
  2290                           wreg	equ	0xFE8
  2291                           postdec1	equ	0xFE5
  2292                           fsr1l	equ	0xFE1
  2293                           status	equ	0xFD8
  2294                           
  2295 ;; *************** function _WriteTimer0 *****************
  2296 ;; Defined at:
  2297 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  timer0          2   19[COMRAM] unsigned int 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  timer           2   21[COMRAM] struct Timers
  2302 ;; Return value:  Size  Location     Type
  2303 ;;		None               void
  2304 ;; Registers used:
  2305 ;;		None
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2311 ;;      Params:         2       0       0       0       0       0       0
  2312 ;;      Locals:         2       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0
  2314 ;;      Totals:         4       0       0       0       0       0       0
  2315 ;;Total ram usage:        4 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    2
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_Initial
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text14
  2326  000DD4                     __ptext14:
  2327                           	opt stack 0
  2328  000DD4                     _WriteTimer0:
  2329                           	opt stack 27
  2330                           
  2331                           ;incstack = 0
  2332  000DD4  C014  F016         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2333  000DD8  C015  F017         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2334  000DDC  C017  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2335  000DE0  C016  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2336  000DE4  0012               	return		;funcret
  2337  000DE6                     __end_of_WriteTimer0:
  2338                           	opt stack 0
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           prodh	equ	0xFF4
  2344                           prodl	equ	0xFF3
  2345                           intcon	equ	0xFF2
  2346                           postinc0	equ	0xFEE
  2347                           wreg	equ	0xFE8
  2348                           postdec1	equ	0xFE5
  2349                           fsr1l	equ	0xFE1
  2350                           status	equ	0xFD8
  2351                           
  2352 ;; *************** function _OpenTimer0 *****************
  2353 ;; Defined at:
  2354 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0open.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  config          1    wreg     unsigned char 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  config          1   19[COMRAM] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;		None               void
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2368 ;;      Params:         0       0       0       0       0       0       0
  2369 ;;      Locals:         1       0       0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0
  2371 ;;      Totals:         1       0       0       0       0       0       0
  2372 ;;Total ram usage:        1 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    2
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_Initial
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text15
  2383  000D9A                     __ptext15:
  2384                           	opt stack 0
  2385  000D9A                     _OpenTimer0:
  2386                           	opt stack 27
  2387                           
  2388                           ;incstack = 0
  2389                           ;OpenTimer0@config stored from wreg
  2390  000D9A  6E14               	movwf	OpenTimer0@config,c
  2391  000D9C  5014               	movf	OpenTimer0@config,w,c
  2392  000D9E  0B7F               	andlw	127
  2393  000DA0  6ED5               	movwf	4053,c	;volatile
  2394  000DA2  0E00               	movlw	0
  2395  000DA4  6ED7               	movwf	4055,c	;volatile
  2396  000DA6  0E00               	movlw	0
  2397  000DA8  6ED6               	movwf	4054,c	;volatile
  2398  000DAA  94F2               	bcf	intcon,2,c	;volatile
  2399  000DAC  AE14               	btfss	OpenTimer0@config,7,c
  2400  000DAE  D002               	goto	l194
  2401  000DB0  8AF2               	bsf	intcon,5,c	;volatile
  2402  000DB2  D001               	goto	l195
  2403  000DB4                     l194:
  2404  000DB4  9AF2               	bcf	intcon,5,c	;volatile
  2405  000DB6                     l195:
  2406  000DB6  8ED5               	bsf	4053,7,c	;volatile
  2407  000DB8  0012               	return		;funcret
  2408  000DBA                     __end_of_OpenTimer0:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           prodh	equ	0xFF4
  2415                           prodl	equ	0xFF3
  2416                           intcon	equ	0xFF2
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1l	equ	0xFE1
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function _myIsr *****************
  2424 ;; Defined at:
  2425 ;;		line 68 in file "st_mch3_update_values_with_debounce_lib.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;		None               void
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2439 ;;      Params:         0       0       0       0       0       0       0
  2440 ;;      Locals:         0       0       0       0       0       0       0
  2441 ;;      Temps:         15       0       0       0       0       0       0
  2442 ;;      Totals:        15       0       0       0       0       0       0
  2443 ;;Total ram usage:       15 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    1
  2446 ;; This function calls:
  2447 ;;		_Find_Button_Press
  2448 ;;		i2_WriteTimer0
  2449 ;; This function is called by:
  2450 ;;		Interrupt level 2
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	intcode
  2455  000008                     __pintcode:
  2456                           	opt stack 0
  2457  000008                     _myIsr:
  2458                           	opt stack 25
  2459                           
  2460                           ;incstack = 0
  2461  000008  8233               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2462  00000A  CFFA F006          	movff	pclath,??_myIsr+1
  2463  00000E  CFFB F007          	movff	pclatu,??_myIsr+2
  2464  000012  ED87  F004         	call	int_func,f	;refresh shadow registers
  2465                           pclatu	equ	0xFFB
  2466                           pclath	equ	0xFFA
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           postdec1	equ	0xFE5
  2477                           fsr1l	equ	0xFE1
  2478                           status	equ	0xFD8
  2479                           
  2480                           	psect	intcode_body
  2481  00090E                     __pintcode_body:
  2482                           	opt stack 25
  2483  00090E                     int_func:
  2484                           	opt stack 25
  2485  00090E  0006               	pop		; remove dummy address from shadow register refresh
  2486  000910  CFE9 F008          	movff	fsr0l,??_myIsr+3
  2487  000914  CFEA F009          	movff	fsr0h,??_myIsr+4
  2488  000918  CFE1 F00A          	movff	fsr1l,??_myIsr+5
  2489  00091C  CFE2 F00B          	movff	fsr1h,??_myIsr+6
  2490  000920  CFD9 F00C          	movff	fsr2l,??_myIsr+7
  2491  000924  CFDA F00D          	movff	fsr2h,??_myIsr+8
  2492  000928  CFF3 F00E          	movff	prodl,??_myIsr+9
  2493  00092C  CFF4 F00F          	movff	prodh,??_myIsr+10
  2494  000930  CFF6 F010          	movff	tblptrl,??_myIsr+11
  2495  000934  CFF7 F011          	movff	tblptrh,??_myIsr+12
  2496  000938  CFF8 F012          	movff	tblptru,??_myIsr+13
  2497  00093C  CFF5 F013          	movff	tablat,??_myIsr+14
  2498                           
  2499                           ;st_mch3_update_values_with_debounce_lib.c: 72: if(INTCONbits.TMR0IE && INTCONbits.TMR0I
      +                          F) {
  2500  000940  BAF2               	btfsc	intcon,5,c	;volatile
  2501  000942  A4F2               	btfss	intcon,2,c	;volatile
  2502  000944  D026               	goto	i2l139
  2503                           
  2504                           ;st_mch3_update_values_with_debounce_lib.c: 74: Find_Button_Press();
  2505  000946  EC6E  F005         	call	_Find_Button_Press	;wreg free
  2506                           
  2507                           ;st_mch3_update_values_with_debounce_lib.c: 75: WriteTimer0(40960);
  2508  00094A  0EA0               	movlw	160
  2509  00094C  6E02               	movwf	i2WriteTimer0@timer0+1,c
  2510  00094E  0E00               	movlw	0
  2511  000950  6E01               	movwf	i2WriteTimer0@timer0,c
  2512  000952  ECF3  F006         	call	i2_WriteTimer0	;wreg free
  2513                           
  2514                           ;st_mch3_update_values_with_debounce_lib.c: 76: INTCONbits.TMR0IF = 0;
  2515  000956  94F2               	bcf	intcon,2,c	;volatile
  2516                           
  2517                           ;st_mch3_update_values_with_debounce_lib.c: 79: count_test++;
  2518  000958  2A2D               	incf	_count_test,f,c
  2519                           
  2520                           ;st_mch3_update_values_with_debounce_lib.c: 80: if(count_test == 100){
  2521  00095A  0E64               	movlw	100
  2522  00095C  182D               	xorwf	_count_test,w,c
  2523  00095E  A4D8               	btfss	status,2,c
  2524  000960  D010               	goto	i2l1411
  2525                           
  2526                           ;st_mch3_update_values_with_debounce_lib.c: 81: PORTCbits.RC7 = ~PORTCbits.RC7;
  2527  000962  AE82               	btfss	3970,7,c	;volatile
  2528  000964  D002               	goto	i2u66_40
  2529  000966  0E01               	movlw	1
  2530  000968  D001               	goto	i2u66_46
  2531  00096A                     i2u66_40:
  2532  00096A  0E00               	movlw	0
  2533  00096C                     i2u66_46:
  2534  00096C  0AFF               	xorlw	255
  2535  00096E  6E05               	movwf	??_myIsr& (0+255),c
  2536  000970  3205               	rrcf	??_myIsr,f,c
  2537  000972  3205               	rrcf	??_myIsr,f,c
  2538  000974  5082               	movf	3970,w,c	;volatile
  2539  000976  1805               	xorwf	??_myIsr,w,c
  2540  000978  0B7F               	andlw	-129
  2541  00097A  1805               	xorwf	??_myIsr,w,c
  2542  00097C  6E82               	movwf	3970,c	;volatile
  2543                           
  2544                           ;st_mch3_update_values_with_debounce_lib.c: 82: count_test = 0;
  2545  00097E  0E00               	movlw	0
  2546  000980  6E2D               	movwf	_count_test,c
  2547  000982                     i2l1411:
  2548                           
  2549                           ;st_mch3_update_values_with_debounce_lib.c: 83: }
  2550                           ;st_mch3_update_values_with_debounce_lib.c: 85: counter++;
  2551  000982  2A2E               	incf	_counter,f,c
  2552                           
  2553                           ;st_mch3_update_values_with_debounce_lib.c: 86: if(counter >10)
  2554  000984  0E0A               	movlw	10
  2555  000986  642E               	cpfsgt	_counter,c
  2556  000988  D004               	goto	i2l139
  2557                           
  2558                           ;st_mch3_update_values_with_debounce_lib.c: 87: {
  2559                           ;st_mch3_update_values_with_debounce_lib.c: 88: TICK_E= 1;
  2560  00098A  0E01               	movlw	1
  2561  00098C  6E2C               	movwf	_TICK_E,c
  2562                           
  2563                           ;st_mch3_update_values_with_debounce_lib.c: 89: counter=0;
  2564  00098E  0E00               	movlw	0
  2565  000990  6E2E               	movwf	_counter,c
  2566  000992                     i2l139:
  2567  000992  C013  FFF5         	movff	??_myIsr+14,tablat
  2568  000996  C012  FFF8         	movff	??_myIsr+13,tblptru
  2569  00099A  C011  FFF7         	movff	??_myIsr+12,tblptrh
  2570  00099E  C010  FFF6         	movff	??_myIsr+11,tblptrl
  2571  0009A2  C00F  FFF4         	movff	??_myIsr+10,prodh
  2572  0009A6  C00E  FFF3         	movff	??_myIsr+9,prodl
  2573  0009AA  C00D  FFDA         	movff	??_myIsr+8,fsr2h
  2574  0009AE  C00C  FFD9         	movff	??_myIsr+7,fsr2l
  2575  0009B2  C00B  FFE2         	movff	??_myIsr+6,fsr1h
  2576  0009B6  C00A  FFE1         	movff	??_myIsr+5,fsr1l
  2577  0009BA  C009  FFEA         	movff	??_myIsr+4,fsr0h
  2578  0009BE  C008  FFE9         	movff	??_myIsr+3,fsr0l
  2579  0009C2  C007  FFFB         	movff	??_myIsr+2,pclatu
  2580  0009C6  C006  FFFA         	movff	??_myIsr+1,pclath
  2581  0009CA  9233               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2582  0009CC  0011               	retfie		f
  2583  0009CE                     __end_of_myIsr:
  2584                           	opt stack 0
  2585                           pclatu	equ	0xFFB
  2586                           pclath	equ	0xFFA
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           prodh	equ	0xFF4
  2592                           prodl	equ	0xFF3
  2593                           intcon	equ	0xFF2
  2594                           postinc0	equ	0xFEE
  2595                           fsr0h	equ	0xFEA
  2596                           fsr0l	equ	0xFE9
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function i2_WriteTimer0 *****************
  2606 ;; Defined at:
  2607 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  timer0          2    0[COMRAM] unsigned int 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  2612 ;; Return value:  Size  Location     Type
  2613 ;;		None               void
  2614 ;; Registers used:
  2615 ;;		None
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2621 ;;      Params:         2       0       0       0       0       0       0
  2622 ;;      Locals:         2       0       0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0
  2624 ;;      Totals:         4       0       0       0       0       0       0
  2625 ;;Total ram usage:        4 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_myIsr
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text17
  2635  000DE6                     __ptext17:
  2636                           	opt stack 0
  2637  000DE6                     i2_WriteTimer0:
  2638                           	opt stack 25
  2639                           
  2640                           ;incstack = 0
  2641  000DE6  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  2642  000DEA  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  2643  000DEE  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  2644  000DF2  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  2645  000DF6  0012               	return		;funcret
  2646  000DF8                     __end_ofi2_WriteTimer0:
  2647                           	opt stack 0
  2648                           pclatu	equ	0xFFB
  2649                           pclath	equ	0xFFA
  2650                           tblptru	equ	0xFF8
  2651                           tblptrh	equ	0xFF7
  2652                           tblptrl	equ	0xFF6
  2653                           tablat	equ	0xFF5
  2654                           prodh	equ	0xFF4
  2655                           prodl	equ	0xFF3
  2656                           intcon	equ	0xFF2
  2657                           postinc0	equ	0xFEE
  2658                           fsr0h	equ	0xFEA
  2659                           fsr0l	equ	0xFE9
  2660                           wreg	equ	0xFE8
  2661                           postdec1	equ	0xFE5
  2662                           fsr1h	equ	0xFE2
  2663                           fsr1l	equ	0xFE1
  2664                           fsr2h	equ	0xFDA
  2665                           fsr2l	equ	0xFD9
  2666                           status	equ	0xFD8
  2667                           
  2668 ;; *************** function _Find_Button_Press *****************
  2669 ;; Defined at:
  2670 ;;		line 36 in file "../../Buttons_Debounce_State_Mch/Buttons_Debounce.X/Buttons_Debounce.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;		None               void
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2684 ;;      Params:         0       0       0       0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0
  2687 ;;      Totals:         0       0       0       0       0       0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_myIsr
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text18
  2698  000ADC                     __ptext18:
  2699                           	opt stack 0
  2700  000ADC                     _Find_Button_Press:
  2701                           	opt stack 25
  2702                           
  2703                           ;Buttons_Debounce.c: 38: static states Button_State=Waiting;
  2704                           ;Buttons_Debounce.c: 39: static unsigned char Button_Count=0;
  2705                           ;Buttons_Debounce.c: 40: static Bit_Mask Temp_Press;
  2706                           ;Buttons_Debounce.c: 44: switch (Button_State){
  2707                           
  2708                           ;incstack = 0
  2709  000ADC  D030               	goto	i2l1019
  2710  000ADE                     i2l995:
  2711                           
  2712                           ;Buttons_Debounce.c: 46: if(PORTB)
  2713  000ADE  5081               	movf	3969,w,c	;volatile
  2714  000AE0  B4D8               	btfsc	status,2,c
  2715  000AE2  0012               	return	
  2716                           
  2717                           ;Buttons_Debounce.c: 47: {
  2718                           ;Buttons_Debounce.c: 48: Button_State = Detected;
  2719  000AE4  0E01               	movlw	1
  2720  000AE6  6E29               	movwf	Find_Button_Press@Button_State,c
  2721                           
  2722                           ;Buttons_Debounce.c: 49: Button_Count = 0;
  2723  000AE8  0E00               	movlw	0
  2724  000AEA  6E28               	movwf	Find_Button_Press@Button_Count,c
  2725                           
  2726                           ;Buttons_Debounce.c: 51: Temp_Press.Full=PORTB;
  2727  000AEC  CF81 F02A          	movff	3969,Find_Button_Press@Temp_Press	;volatile
  2728                           
  2729                           ;Buttons_Debounce.c: 52: }
  2730                           ;Buttons_Debounce.c: 53: break;
  2731  000AF0  0012               	return	
  2732  000AF2                     i2l1001:
  2733                           
  2734                           ;Buttons_Debounce.c: 55: if (Temp_Press.Full == PORTB)
  2735  000AF2  5081               	movf	3969,w,c	;volatile
  2736  000AF4  182A               	xorwf	Find_Button_Press@Temp_Press,w,c
  2737  000AF6  A4D8               	btfss	status,2,c
  2738  000AF8  D007               	goto	i2l1009
  2739                           
  2740                           ;Buttons_Debounce.c: 56: {
  2741                           ;Buttons_Debounce.c: 57: ++Button_Count;
  2742  000AFA  2A28               	incf	Find_Button_Press@Button_Count,f,c
  2743                           
  2744                           ;Buttons_Debounce.c: 58: if (Button_Count > 10)
  2745  000AFC  0E0A               	movlw	10
  2746  000AFE  6428               	cpfsgt	Find_Button_Press@Button_Count,c
  2747  000B00  0012               	return	
  2748                           
  2749                           ;Buttons_Debounce.c: 59: {
  2750                           ;Buttons_Debounce.c: 60: Button_State = WaitForRelease;
  2751  000B02  0E02               	movlw	2
  2752  000B04  6E29               	movwf	Find_Button_Press@Button_State,c
  2753                           
  2754                           ;Buttons_Debounce.c: 61: }
  2755                           ;Buttons_Debounce.c: 62: }
  2756  000B06  0012               	return	
  2757  000B08                     i2l1009:
  2758                           
  2759                           ;Buttons_Debounce.c: 63: else
  2760                           ;Buttons_Debounce.c: 64: {
  2761                           ;Buttons_Debounce.c: 65: Button_State = Waiting;
  2762  000B08  0E00               	movlw	0
  2763  000B0A  6E29               	movwf	Find_Button_Press@Button_State,c
  2764                           
  2765                           ;Buttons_Debounce.c: 66: }
  2766                           ;Buttons_Debounce.c: 67: break;
  2767  000B0C  0012               	return	
  2768  000B0E                     i2l1011:
  2769                           
  2770                           ;Buttons_Debounce.c: 69: if (!PORTB)
  2771  000B0E  5081               	movf	3969,w,c	;volatile
  2772  000B10  A4D8               	btfss	status,2,c
  2773  000B12  0012               	return	
  2774                           
  2775                           ;Buttons_Debounce.c: 70: {
  2776                           ;Buttons_Debounce.c: 71: Button_State = Update;
  2777  000B14  0E03               	movlw	3
  2778  000B16  6E29               	movwf	Find_Button_Press@Button_State,c
  2779                           
  2780                           ;Buttons_Debounce.c: 72: }
  2781                           ;Buttons_Debounce.c: 73: break;
  2782  000B18  0012               	return	
  2783  000B1A                     i2l23:
  2784                           
  2785                           ;Buttons_Debounce.c: 75: {
  2786                           ;Buttons_Debounce.c: 76: Button_Press = Temp_Press;
  2787  000B1A  C02A  F02B         	movff	Find_Button_Press@Temp_Press,_Button_Press
  2788                           
  2789                           ;Buttons_Debounce.c: 77: Button_State = Waiting;
  2790  000B1E  0E00               	movlw	0
  2791  000B20  6E29               	movwf	Find_Button_Press@Button_State,c
  2792                           
  2793                           ;Buttons_Debounce.c: 78: Button_Count = 0;
  2794  000B22  0E00               	movlw	0
  2795  000B24  6E28               	movwf	Find_Button_Press@Button_Count,c
  2796                           
  2797                           ;Buttons_Debounce.c: 79: Temp_Press.Full=0;
  2798  000B26  0E00               	movlw	0
  2799  000B28  6E2A               	movwf	Find_Button_Press@Temp_Press,c
  2800                           
  2801                           ;Buttons_Debounce.c: 80: }
  2802                           ;Buttons_Debounce.c: 81: break;
  2803  000B2A  0012               	return	
  2804  000B2C                     i2l1017:
  2805                           
  2806                           ;Buttons_Debounce.c: 83: {
  2807                           ;Buttons_Debounce.c: 84: Button_State = Waiting;
  2808  000B2C  0E00               	movlw	0
  2809  000B2E  6E29               	movwf	Find_Button_Press@Button_State,c
  2810                           
  2811                           ;Buttons_Debounce.c: 85: Button_Count = 0;
  2812  000B30  0E00               	movlw	0
  2813  000B32  6E28               	movwf	Find_Button_Press@Button_Count,c
  2814                           
  2815                           ;Buttons_Debounce.c: 86: Temp_Press.Full=0;
  2816  000B34  0E00               	movlw	0
  2817  000B36  6E2A               	movwf	Find_Button_Press@Temp_Press,c
  2818                           
  2819                           ;Buttons_Debounce.c: 87: Button_Press.Full=0;
  2820  000B38  0E00               	movlw	0
  2821  000B3A  6E2B               	movwf	_Button_Press,c
  2822                           
  2823                           ;Buttons_Debounce.c: 88: }
  2824                           ;Buttons_Debounce.c: 89: }
  2825  000B3C  0012               	return	
  2826  000B3E                     i2l1019:
  2827  000B3E  5029               	movf	Find_Button_Press@Button_State,w,c
  2828                           
  2829                           ; Switch size 1, requested type "space"
  2830                           ; Number of cases is 4, Range of values is 0 to 3
  2831                           ; switch strategies available:
  2832                           ; Name         Instructions Cycles
  2833                           ; simple_byte           13     7 (average)
  2834                           ;	Chosen strategy is simple_byte
  2835  000B40  0A00               	xorlw	0	; case 0
  2836  000B42  B4D8               	btfsc	status,2,c
  2837  000B44  D7CC               	goto	i2l995
  2838  000B46  0A01               	xorlw	1	; case 1
  2839  000B48  B4D8               	btfsc	status,2,c
  2840  000B4A  D7D3               	goto	i2l1001
  2841  000B4C  0A03               	xorlw	3	; case 2
  2842  000B4E  B4D8               	btfsc	status,2,c
  2843  000B50  D7DE               	goto	i2l1011
  2844  000B52  0A01               	xorlw	1	; case 3
  2845  000B54  B4D8               	btfsc	status,2,c
  2846  000B56  D7E1               	goto	i2l23
  2847  000B58  D7E9               	goto	i2l1017
  2848  000B5A                     __end_of_Find_Button_Press:
  2849                           	opt stack 0
  2850                           pclatu	equ	0xFFB
  2851                           pclath	equ	0xFFA
  2852                           tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           prodh	equ	0xFF4
  2857                           prodl	equ	0xFF3
  2858                           intcon	equ	0xFF2
  2859                           postinc0	equ	0xFEE
  2860                           fsr0h	equ	0xFEA
  2861                           fsr0l	equ	0xFE9
  2862                           wreg	equ	0xFE8
  2863                           postdec1	equ	0xFE5
  2864                           fsr1h	equ	0xFE2
  2865                           fsr1l	equ	0xFE1
  2866                           fsr2h	equ	0xFDA
  2867                           fsr2l	equ	0xFD9
  2868                           status	equ	0xFD8
  2869                           pclatu	equ	0xFFB
  2870                           pclath	equ	0xFFA
  2871                           tblptru	equ	0xFF8
  2872                           tblptrh	equ	0xFF7
  2873                           tblptrl	equ	0xFF6
  2874                           tablat	equ	0xFF5
  2875                           prodh	equ	0xFF4
  2876                           prodl	equ	0xFF3
  2877                           intcon	equ	0xFF2
  2878                           postinc0	equ	0xFEE
  2879                           fsr0h	equ	0xFEA
  2880                           fsr0l	equ	0xFE9
  2881                           wreg	equ	0xFE8
  2882                           postdec1	equ	0xFE5
  2883                           fsr1h	equ	0xFE2
  2884                           fsr1l	equ	0xFE1
  2885                           fsr2h	equ	0xFDA
  2886                           fsr2l	equ	0xFD9
  2887                           status	equ	0xFD8
  2888                           
  2889                           	psect	rparam
  2890  0000                     pclatu	equ	0xFFB
  2891                           pclath	equ	0xFFA
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           prodh	equ	0xFF4
  2897                           prodl	equ	0xFF3
  2898                           intcon	equ	0xFF2
  2899                           postinc0	equ	0xFEE
  2900                           fsr0h	equ	0xFEA
  2901                           fsr0l	equ	0xFE9
  2902                           wreg	equ	0xFE8
  2903                           postdec1	equ	0xFE5
  2904                           fsr1h	equ	0xFE2
  2905                           fsr1l	equ	0xFE1
  2906                           fsr2h	equ	0xFDA
  2907                           fsr2l	equ	0xFD9
  2908                           status	equ	0xFD8
  2909                           
  2910                           	psect	temp
  2911  000033                     btemp:
  2912                           	opt stack 0
  2913  000033                     	ds	1
  2914  0000                     int$flags	set	btemp
  2915                           pclatu	equ	0xFFB
  2916                           pclath	equ	0xFFA
  2917                           tblptru	equ	0xFF8
  2918                           tblptrh	equ	0xFF7
  2919                           tblptrl	equ	0xFF6
  2920                           tablat	equ	0xFF5
  2921                           prodh	equ	0xFF4
  2922                           prodl	equ	0xFF3
  2923                           intcon	equ	0xFF2
  2924                           postinc0	equ	0xFEE
  2925                           fsr0h	equ	0xFEA
  2926                           fsr0l	equ	0xFE9
  2927                           wreg	equ	0xFE8
  2928                           postdec1	equ	0xFE5
  2929                           fsr1h	equ	0xFE2
  2930                           fsr1l	equ	0xFE1
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    165
    Data        4
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     39      50
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    startup	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    problem	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 160
		 -> msg_ary(CODE[160]), STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Window
    _lcd_start->_lcd_clear
    _lcd_display_value->___awdiv
    _Window->_lcd_print
    _lcd_print->_lcd_print_ch
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_WriteTimer0
    _Initial->_delay_s

Critical Paths under _myIsr in COMRAM

    _myIsr->i2_WriteTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    8043
                                             32 COMRAM     7     7      0
                            _Initial
                             _Window
                            _delay_s
                          _lcd_clear
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     812
                                             25 COMRAM     2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1909
                                             27 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Window                                               3     3      0    2382
                                             29 COMRAM     3     3      0
                          _lcd_clear
                         _lcd_cursor
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     766
                                             24 COMRAM     5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1    1200
                                             24 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     372
                                             24 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     350
                                             19 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     285
                         _OpenTimer0
                        _WriteTimer0
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              4     4      0      60
                                             19 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     195
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                               15    15      0      93
                                              4 COMRAM    15    15      0
                  _Find_Button_Press
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Find_Button_Press                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _OpenTimer0
     _WriteTimer0
     _delay_s
   _Window
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_cursor
       _lcd_command
         _lcd_raw_send
     _lcd_print
       _lcd_print_ch
         _lcd_raw_send
   _delay_s
   _lcd_clear
     _lcd_command
       _lcd_raw_send
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send

 _myIsr (ROOT)
   _Find_Button_Press
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     27      32       1       39.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      15        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Mar 08 11:35:11 2017

                ?_lcd_raw_send 0014                   ___awdiv@sign 0019                    __CFG_BORV$3 000000  
                ?_lcd_print_ch 0001                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000  
                          l151 0730                            l161 079A                            l154 0744  
                          l156 0756                            l194 0DB4                            l195 0DB6  
                          l893 0D4C                            l887 0D40                            l897 0D60  
                          l889 0D44                            l899 0D62                   __CFG_CPB$OFF 000000  
                          u425 0830                   __CFG_CPD$OFF 000000                            u435 084C  
                          u445 086A                            u455 0882                            u456 0884  
                          u465 08A4                            u466 08A6                            u807 0896  
                          u817 08F6                            u827 08FE                            u837 0906  
                          u757 0C90                            u847 0D52                            u767 0D78  
                          u777 0D8E                            u787 0886                            u797 088E  
         __size_of_WriteTimer0 0012                   ___awmod@sign 0019                            prod 000FF3  
                          wreg 000FE8                    lcd_cursor@x 001A                    lcd_cursor@y 0019  
                 __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000                           l1301 0B6E  
                         l1311 0B90                           l1233 0DC6                           l1241 0C36  
                         l1313 0B94                           l1321 0BB2                           l1305 0B7A  
                         l1245 0C5C                           l1325 0BC0                           l1317 0BA8  
                         l1309 0B88                           l1271 0A9A                           l1263 0A7C  
                         l1335 0C9C                           l1281 0ABA                           l1273 0A9E  
                         l1257 0A6C                           l1345 0CC0                           l1339 0CA4  
                         l1269 0A92                           l1285 0AC4                           l1463 0766  
                         l1439 0722                           l1289 0AD2                           l1465 0776  
                         l1475 07B2                           l1485 07D8                           l1493 07F8  
                         l1495 0808                           STR_1 06B2                           STR_2 06A6  
                         _LATC 000F8B                           i2l23 0B1A                           _main 06BC  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0033         __size_ofi2_WriteTimer0 0012                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                 ??_lcd_raw_send 0015  
                 ___param_bank 000010                __end_of_Initial 0D38                 ??_lcd_print_ch 0018  
                lcd_command@in 0018                          ?_main 0001                __end_of___awdiv 0ADC  
              __end_of___awmod 0BCA                          _T0CON 000FD5                ___awdiv@divisor 0016  
                        i2l139 0992                ___awdiv@counter 0018                          i2l995 0ADE  
                        _TMR0H 000FD7                          _TMR0L 000FD6                          _PORTB 000F81  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TRISD 000F95                  __CFG_PWRT$OFF 000000                __end_of_delay_s 0D6C  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                          _myIsr 0008                          main@A 0022  
                        main@B 0023                          main@C 0021                __end_of_msg_ary 06A6  
                        tablat 000FF5                          status 000FD8                __initialization 0CC6  
                 __end_of_main 0812                         ??_main 0021                  i2_WriteTimer0 0DE6  
                __activetblptr 000002                         _ADCON0 000FC2                         _ADCON1 000FC1  
                       _ADCON2 000FC0                         _ADRESH 000FC4                         ?_myIsr 0001  
             ___awdiv@dividend 0014                         i2l1001 0AF2                         i2l1011 0B0E  
                       i2l1017 0B2C                         i2l1009 0B08                         i2l1019 0B3E  
                       i2l1411 0982                     _OpenTimer0 0D9A                         _TICK_E 002C  
                    ??_Initial 0018                 __CFG_XINST$OFF 000000                  lcd_print@mess 0019  
             __end_of_lcd_init 0606           __size_of_lcd_command 000E                         _Window 0BCA  
                    ??___awdiv 0018                 __CFG_STVREN$ON 000000                      ??___awmod 0018  
             OpenTimer0@config 0014                         clear_0 0CCC               ___awdiv@quotient 001A  
              ___awmod@divisor 0016                      ??_delay_s 0014                 ?i2_WriteTimer0 0001  
              ___awmod@counter 0018                   __pdataCOMRAM 002F                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         __end_of_lcd_raw_send 090E           __end_of_lcd_print_ch 0E06                     __accesstop 0080  
      __end_of__initialization 0CF2                __CFG_PBADEN$OFF 000000                  ___rparam_used 000001  
               __pcstackCOMRAM 0001                  __end_of_myIsr 09CE             __size_of_lcd_clear 002E  
           __size_of_lcd_print 0054             __size_of_lcd_start 0042                        ??_myIsr 0005  
                  ?_OpenTimer0 0001                 lcd_raw_send@RS 0014                 lcd_raw_send@in 0017  
                      ?_Window 0001          lcd_display_value@tens 001D                ??i2_WriteTimer0 0003  
             WriteTimer0@timer 0016                  ??_WriteTimer0 0016                     _lcd_cursor 0DBA  
                      i2u66_40 096A                        i2u66_46 096C            i2WriteTimer0@timer0 0001  
                      _Initial 0D00                     _count_test 002D                        __Hparam 0000  
                      __Lparam 0000              __end_of_lcd_clear 0D9A    Find_Button_Press@Temp_Press 002A  
              __size_of_Window 0066              __end_of_lcd_print 0C84              __end_of_lcd_start 0CC6  
               lcd_print_ch@in 0018                        ___awdiv 0A58                        ___awmod 0B5A  
                 __psmallconst 0600                        __pcinit 0CC6                        _delay_s 0D38  
                      __ramtop 0600            __size_of_OpenTimer0 0020                        __ptext0 06BC  
                      __ptext1 0C84                        __ptext2 09CE                        __ptext3 0B5A  
                      __ptext4 0A58                        __ptext5 0BCA                        __ptext6 0C30  
                      __ptext7 0DF8                        __ptext8 0DBA                        __ptext9 0D6C  
                    _T0CONbits 000FD5          __size_of_lcd_raw_send 00FC                        _counter 002E  
             ___awmod@dividend 0014                        _msg_ary 0606            __end_of_WriteTimer0 0DE6  
        __size_of_lcd_print_ch 000E                        _problem 002F                        _startup 0031  
               __pintcode_body 090E           end_of_initialization 0CF2                  __Lmediumconst 0000  
                      int_func 090E              _Find_Button_Press 0ADC             ?_Find_Button_Press 0001  
                      postdec1 000FE5                        postinc0 000FEE                   _lcd_raw_send 0812  
          ??_Find_Button_Press 0001                   _lcd_print_ch 0DF8                      _PORTCbits 000F82  
                  ?_lcd_cursor 0019                     main@Motor1 0026      __end_of_Find_Button_Press 0B5A  
                ??_lcd_command 0018                     lcd_print@i 001D                     lcd_start@i 001B  
            _lcd_display_value 09CE                 __end_of_Window 0C30             ?_lcd_display_value 0001  
                __pidataCOMRAM 0E14                    _WriteTimer0 0DD4            ??_lcd_display_value 001C  
          start_initialization 0CC6                   _Button_Press 002B                   ??_OpenTimer0 0014  
    __end_of_lcd_display_value 0A58                       ??_Window 001E            __size_of_lcd_cursor 001A  
          __end_of_lcd_command 0E14               __CFG_LPT1OSC$OFF 000000             __end_of_OpenTimer0 0DBA  
                  __pbssCOMRAM 0028                      Window@num 0020     __size_of_Find_Button_Press 007E  
                     ?_Initial 0001              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
                     ?___awdiv 0014                       ?___awmod 0014                      _lcd_clear 0D6C  
                     ?_delay_s 0001          __end_ofi2_WriteTimer0 0DF8                      _lcd_print 0C30  
       lcd_display_value@hunds 001C                      _lcd_start 0C84         lcd_display_value@value 001F  
       lcd_display_value@units 001E                    __smallconst 0600              WriteTimer0@timer0 0014  
           i2WriteTimer0@timer 0003                 __size_of_myIsr 09C6                       _LATDbits 000F8C  
                  _lcd_command 0E06     __size_of_lcd_display_value 008A               main@my_mch_state 0024  
                     _PIR1bits 000F9E               __CFG_WDTPS$32768 000000                     ?_lcd_clear 0001  
                   ?_lcd_print 0019                     ?_lcd_start 0001                     _ADCON0bits 000FC2  
               main@ADC_Result 0025                   ??_lcd_cursor 001A                      copy_data0 0CE6  
                     __Hrparam 0000               __size_of_Initial 0038                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000             __end_of_lcd_cursor 0DD4               __size_of___awdiv 0084  
             __size_of___awmod 0070                   ?_WriteTimer0 0014               __size_of_delay_s 0034  
                     __ptext10 0E06                       __ptext11 0812                       __ptext12 0D00  
                     __ptext13 0D38                       __ptext14 0DD4                       __ptext15 0D9A  
                     __ptext17 0DE6                       __ptext18 0ADC                       _lcd_init 0601  
                __size_of_main 0156                       delay_s@i 0017                       delay_s@j 0016  
                     int$flags 0033                    ??_lcd_clear 0019                    delay_s@secs 0015  
                  ??_lcd_print 001B                    ??_lcd_start 001A                     _INTCONbits 000FF2  
                     intlevel2 0000  Find_Button_Press@Button_Count 0028  Find_Button_Press@Button_State 0029  
                 ?_lcd_command 0001  
