

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Mar 22 12:40:12 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataBANK0
    50  0016B6                     __pidataBANK0:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _problem
    54  0016B6  B2                 	db	low STR_1
    55  0016B7  06                 	db	high STR_1
    56                           
    57                           ;initializer for _startup
    58  0016B8  A6                 	db	low STR_2
    59  0016B9  06                 	db	high STR_2
    60                           
    61                           	psect	smallconst
    62  000600                     __psmallconst:
    63                           	opt stack 0
    64  000600  00                 	db	0
    65  000601                     _lcd_init:
    66                           	opt stack 0
    67  000601  33                 	db	51
    68  000602  32                 	db	50
    69  000603  2C                 	db	44
    70  000604  06                 	db	6
    71  000605  0C                 	db	12
    72  000606                     __end_of_lcd_init:
    73                           	opt stack 0
    74  000606                     _msg_ary:
    75                           	opt stack 0
    76  000606  44                 	db	68
    77  000607  65                 	db	101
    78  000608  73                 	db	115
    79  000609  69                 	db	105
    80  00060A  72                 	db	114
    81  00060B  65                 	db	101
    82  00060C  64                 	db	100
    83  00060D  3E                 	db	62
    84  00060E  20                 	db	32
    85  00060F  00                 	db	0
    86  000610  00                 	db	0
    87  000611  00                 	db	0
    88  000612  00                 	db	0
    89  000613  00                 	db	0
    90  000614  00                 	db	0
    91  000615  00                 	db	0
    92  000616  41                 	db	65
    93  000617  63                 	db	99
    94  000618  74                 	db	116
    95  000619  75                 	db	117
    96  00061A  61                 	db	97
    97  00061B  6C                 	db	108
    98  00061C  3E                 	db	62
    99  00061D  20                 	db	32
   100  00061E  00                 	db	0
   101  00061F  00                 	db	0
   102  000620  00                 	db	0
   103  000621  00                 	db	0
   104  000622  00                 	db	0
   105  000623  00                 	db	0
   106  000624  00                 	db	0
   107  000625  00                 	db	0
   108  000626  50                 	db	80
   109  000627  6F                 	db	111
   110  000628  74                 	db	116
   111  000629  5F                 	db	95
   112  00062A  56                 	db	86
   113  00062B  61                 	db	97
   114  00062C  6C                 	db	108
   115  00062D  75                 	db	117
   116  00062E  65                 	db	101
   117  00062F  3E                 	db	62
   118  000630  20                 	db	32
   119  000631  00                 	db	0
   120  000632  00                 	db	0
   121  000633  00                 	db	0
   122  000634  00                 	db	0
   123  000635  00                 	db	0
   124  000636  44                 	db	68
   125  000637  65                 	db	101
   126  000638  73                 	db	115
   127  000639  69                 	db	105
   128  00063A  72                 	db	114
   129  00063B  65                 	db	101
   130  00063C  64                 	db	100
   131  00063D  3E                 	db	62
   132  00063E  20                 	db	32
   133  00063F  00                 	db	0
   134  000640  00                 	db	0
   135  000641  00                 	db	0
   136  000642  00                 	db	0
   137  000643  00                 	db	0
   138  000644  00                 	db	0
   139  000645  00                 	db	0
   140  000646  00                 	db	0
   141  000647  00                 	db	0
   142  000648  00                 	db	0
   143  000649  00                 	db	0
   144  00064A  00                 	db	0
   145  00064B  00                 	db	0
   146  00064C  00                 	db	0
   147  00064D  00                 	db	0
   148  00064E  00                 	db	0
   149  00064F  00                 	db	0
   150  000650  00                 	db	0
   151  000651  00                 	db	0
   152  000652  00                 	db	0
   153  000653  00                 	db	0
   154  000654  00                 	db	0
   155  000655  00                 	db	0
   156  000656  00                 	db	0
   157  000657  00                 	db	0
   158  000658  00                 	db	0
   159  000659  00                 	db	0
   160  00065A  00                 	db	0
   161  00065B  00                 	db	0
   162  00065C  00                 	db	0
   163  00065D  00                 	db	0
   164  00065E  00                 	db	0
   165  00065F  00                 	db	0
   166  000660  00                 	db	0
   167  000661  00                 	db	0
   168  000662  00                 	db	0
   169  000663  00                 	db	0
   170  000664  00                 	db	0
   171  000665  00                 	db	0
   172  000666  00                 	db	0
   173  000667  00                 	db	0
   174  000668  00                 	db	0
   175  000669  00                 	db	0
   176  00066A  00                 	db	0
   177  00066B  00                 	db	0
   178  00066C  00                 	db	0
   179  00066D  00                 	db	0
   180  00066E  00                 	db	0
   181  00066F  00                 	db	0
   182  000670  00                 	db	0
   183  000671  00                 	db	0
   184  000672  00                 	db	0
   185  000673  00                 	db	0
   186  000674  00                 	db	0
   187  000675  00                 	db	0
   188  000676  00                 	db	0
   189  000677  00                 	db	0
   190  000678  00                 	db	0
   191  000679  00                 	db	0
   192  00067A  00                 	db	0
   193  00067B  00                 	db	0
   194  00067C  00                 	db	0
   195  00067D  00                 	db	0
   196  00067E  00                 	db	0
   197  00067F  00                 	db	0
   198  000680  00                 	db	0
   199  000681  00                 	db	0
   200  000682  00                 	db	0
   201  000683  00                 	db	0
   202  000684  00                 	db	0
   203  000685  00                 	db	0
   204  000686  00                 	db	0
   205  000687  00                 	db	0
   206  000688  00                 	db	0
   207  000689  00                 	db	0
   208  00068A  00                 	db	0
   209  00068B  00                 	db	0
   210  00068C  00                 	db	0
   211  00068D  00                 	db	0
   212  00068E  00                 	db	0
   213  00068F  00                 	db	0
   214  000690  00                 	db	0
   215  000691  00                 	db	0
   216  000692  00                 	db	0
   217  000693  00                 	db	0
   218  000694  00                 	db	0
   219  000695  00                 	db	0
   220  000696  00                 	db	0
   221  000697  00                 	db	0
   222  000698  00                 	db	0
   223  000699  00                 	db	0
   224  00069A  00                 	db	0
   225  00069B  00                 	db	0
   226  00069C  00                 	db	0
   227  00069D  00                 	db	0
   228  00069E  00                 	db	0
   229  00069F  00                 	db	0
   230  0006A0  00                 	db	0
   231  0006A1  00                 	db	0
   232  0006A2  00                 	db	0
   233  0006A3  00                 	db	0
   234  0006A4  00                 	db	0
   235  0006A5  00                 	db	0
   236  0006A6                     __end_of_msg_ary:
   237                           	opt stack 0
   238  0006A6                     STR_2:
   239  0006A6  52                 	db	82	;'R'
   240  0006A7  65                 	db	101	;'e'
   241  0006A8  61                 	db	97	;'a'
   242  0006A9  64                 	db	100	;'d'
   243  0006AA  79                 	db	121	;'y'
   244  0006AB  20                 	db	32
   245  0006AC  74                 	db	116	;'t'
   246  0006AD  6F                 	db	111	;'o'
   247  0006AE  20                 	db	32
   248  0006AF  67                 	db	103	;'g'
   249  0006B0  6F                 	db	111	;'o'
   250  0006B1  00                 	db	0
   251  0006B2                     STR_1:
   252  0006B2  50                 	db	80	;'P'
   253  0006B3  72                 	db	114	;'r'
   254  0006B4  6F                 	db	111	;'o'
   255  0006B5  62                 	db	98	;'b'
   256  0006B6  6C                 	db	108	;'l'
   257  0006B7  65                 	db	101	;'e'
   258  0006B8  6D                 	db	109	;'m'
   259  0006B9  00                 	db	0
   260                           
   261                           ; #config settings
   262  0006BA  00                 	db	0	; dummy byte at the end
   263  0000                     
   264                           	psect	nvBANK0
   265  00009C                     __pnvBANK0:
   266                           	opt stack 0
   267  00009C                     _num:
   268                           	opt stack 0
   269  00009C                     	ds	1
   270  0000                     _ADCON0	set	4034
   271  0000                     _ADCON0bits	set	4034
   272  0000                     _ADCON1	set	4033
   273  0000                     _ADCON2	set	4032
   274  0000                     _ADRESH	set	4036
   275  0000                     _CCP1CONbits	set	4029
   276  0000                     _CCP2CONbits	set	4026
   277  0000                     _CCPR1H	set	4031
   278  0000                     _CCPR1L	set	4030
   279  0000                     _CCPR2L	set	4027
   280  0000                     _INTCONbits	set	4082
   281  0000                     _LATDbits	set	3980
   282  0000                     _LATE	set	3981
   283  0000                     _OSCCONbits	set	4051
   284  0000                     _PIE1bits	set	3997
   285  0000                     _PIR1bits	set	3998
   286  0000                     _PORTB	set	3969
   287  0000                     _PORTE	set	3972
   288  0000                     _PORTEbits	set	3972
   289  0000                     _PR2	set	4043
   290  0000                     _T0CON	set	4053
   291  0000                     _T0CONbits	set	4053
   292  0000                     _T1CONbits	set	4045
   293  0000                     _T2CONbits	set	4042
   294  0000                     _TMR0H	set	4055
   295  0000                     _TMR0L	set	4054
   296  0000                     _TMR1H	set	4047
   297  0000                     _TMR1L	set	4046
   298  0000                     _TRISA	set	3986
   299  0000                     _TRISB	set	3987
   300  0000                     _TRISC	set	3988
   301  0000                     _TRISCbits	set	3988
   302  0000                     _TRISD	set	3989
   303  0000                     _TRISE	set	3990
   304                           
   305                           	psect	cinit
   306  00150C                     __pcinit:
   307                           	opt stack 0
   308  00150C                     start_initialization:
   309                           	opt stack 0
   310  00150C                     __initialization:
   311                           	opt stack 0
   312                           
   313                           ; Clear objects allocated to BANK0 (4 bytes)
   314  00150C  0100               	movlb	0
   315  00150E  6B97               	clrf	(__pbssBANK0+3)& (0+255),b
   316  001510  6B96               	clrf	(__pbssBANK0+2)& (0+255),b
   317  001512  6B95               	clrf	(__pbssBANK0+1)& (0+255),b
   318  001514  6B94               	clrf	__pbssBANK0& (0+255),b
   319                           
   320                           ; Clear objects allocated to COMRAM (20 bytes)
   321  001516  EE00  F04D         	lfsr	0,__pbssCOMRAM
   322  00151A  0E14               	movlw	20
   323  00151C                     clear_0:
   324  00151C  6AEE               	clrf	postinc0,c
   325  00151E  06E8               	decf	wreg,f,c
   326  001520  E1FD               	bnz	clear_0
   327                           
   328                           ; Initialize objects allocated to BANK0 (4 bytes)
   329                           ; load TBLPTR registers with __pidataBANK0
   330  001522  0EB6               	movlw	low __pidataBANK0
   331  001524  6EF6               	movwf	tblptrl,c
   332  001526  0E16               	movlw	high __pidataBANK0
   333  001528  6EF7               	movwf	tblptrh,c
   334  00152A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   335  00152C  6EF8               	movwf	tblptru,c
   336  00152E  EE00  F098         	lfsr	0,__pdataBANK0
   337  001532  EE10 F004          	lfsr	1,4
   338  001536                     copy_data0:
   339  001536  0009               	tblrd		*+
   340  001538  CFF5 FFEE          	movff	tablat,postinc0
   341  00153C  50E5               	movf	postdec1,w,c
   342  00153E  50E1               	movf	fsr1l,w,c
   343  001540  E1FA               	bnz	copy_data0
   344  001542                     end_of_initialization:
   345                           	opt stack 0
   346  001542                     __end_of__initialization:
   347                           	opt stack 0
   348  001542  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   349  001544  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   350  001546  0E00               	movlw	low (__Lmediumconst shr (0+16))
   351  001548  6EF8               	movwf	tblptru,c
   352  00154A  0100               	movlb	0
   353  00154C  EF5E  F003         	goto	_main	;jump to C main() function
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           postdec1	equ	0xFE5
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	bssCOMRAM
   364  00004D                     __pbssCOMRAM:
   365                           	opt stack 0
   366  00004D                     _control1:
   367                           	opt stack 0
   368  00004D                     	ds	13
   369  00005A                     _captured:
   370                           	opt stack 0
   371  00005A                     	ds	2
   372  00005C                     Find_Button_Press@Button_Count:
   373                           	opt stack 0
   374  00005C                     	ds	1
   375  00005D                     Find_Button_Press@Button_State:
   376                           	opt stack 0
   377  00005D                     	ds	1
   378  00005E                     Find_Button_Press@Temp_Press:
   379                           	opt stack 0
   380  00005E                     	ds	1
   381  00005F                     _count_test:
   382                           	opt stack 0
   383  00005F                     	ds	1
   384  000060                     _counter:
   385                           	opt stack 0
   386  000060                     	ds	1
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396                           	psect	bssBANK0
   397  000094                     __pbssBANK0:
   398                           	opt stack 0
   399  000094                     _Motor1:
   400                           	opt stack 0
   401  000094                     	ds	2
   402  000096                     _Button_Press:
   403                           	opt stack 0
   404  000096                     	ds	1
   405  000097                     _TICK_E:
   406                           	opt stack 0
   407  000097                     	ds	1
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           postdec1	equ	0xFE5
   415                           fsr1l	equ	0xFE1
   416                           
   417                           	psect	dataBANK0
   418  000098                     __pdataBANK0:
   419                           	opt stack 0
   420  000098                     _problem:
   421                           	opt stack 0
   422  000098                     	ds	2
   423  00009A                     _startup:
   424                           	opt stack 0
   425  00009A                     	ds	2
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	cstackBANK0
   436  000080                     __pcstackBANK0:
   437                           	opt stack 0
   438  000080                     ??_delay_s:
   439  000080                     ?___awdiv:
   440                           	opt stack 0
   441  000080                     ?___awmod:
   442                           	opt stack 0
   443  000080                     ?___ltdiv:
   444                           	opt stack 0
   445  000080                     lcd_raw_send@RS:
   446                           	opt stack 0
   447  000080                     OpenTimer0@config:
   448                           	opt stack 0
   449  000080                     WriteTimer0@timer0:
   450                           	opt stack 0
   451  000080                     ___awdiv@dividend:
   452                           	opt stack 0
   453  000080                     ___awmod@dividend:
   454                           	opt stack 0
   455  000080                     ___ltdiv@dividend:
   456                           	opt stack 0
   457                           
   458                           ; 3 bytes @ 0x0
   459  000080                     	ds	1
   460  000081                     ??_lcd_raw_send:
   461  000081                     delay_s@secs:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x1
   465  000081                     	ds	1
   466  000082                     delay_s@i:
   467                           	opt stack 0
   468  000082                     WriteTimer0@timer:
   469                           	opt stack 0
   470  000082                     ___awdiv@divisor:
   471                           	opt stack 0
   472  000082                     ___awmod@divisor:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x2
   476  000082                     	ds	1
   477  000083                     lcd_raw_send@in:
   478                           	opt stack 0
   479  000083                     delay_s@j:
   480                           	opt stack 0
   481  000083                     ___ltdiv@divisor:
   482                           	opt stack 0
   483                           
   484                           ; 3 bytes @ 0x3
   485  000083                     	ds	1
   486  000084                     lcd_print_ch@in:
   487                           	opt stack 0
   488  000084                     lcd_command@in:
   489                           	opt stack 0
   490  000084                     ___awdiv@counter:
   491                           	opt stack 0
   492  000084                     ___awmod@counter:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x4
   496  000084                     	ds	1
   497  000085                     ??_lcd_clear:
   498  000085                     lcd_cursor@y:
   499                           	opt stack 0
   500  000085                     ___awdiv@sign:
   501                           	opt stack 0
   502  000085                     ___awmod@sign:
   503                           	opt stack 0
   504  000085                     lcd_print@mess:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x5
   508  000085                     	ds	1
   509  000086                     ??_lcd_start:
   510  000086                     lcd_cursor@x:
   511                           	opt stack 0
   512  000086                     ___awdiv@quotient:
   513                           	opt stack 0
   514  000086                     ___ltdiv@quotient:
   515                           	opt stack 0
   516                           
   517                           ; 3 bytes @ 0x6
   518  000086                     	ds	1
   519  000087                     ??_lcd_print:
   520  000087                     lcd_start@i:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x7
   524  000087                     	ds	1
   525  000088                     lcd_display_value@hunds:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x8
   529  000088                     	ds	1
   530  000089                     lcd_print@i:
   531                           	opt stack 0
   532  000089                     lcd_display_value@tens:
   533                           	opt stack 0
   534  000089                     ___ltdiv@counter:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x9
   538  000089                     	ds	1
   539  00008A                     ??_Window:
   540  00008A                     lcd_display_value@units:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0xA
   544  00008A                     	ds	1
   545  00008B                     lcd_display_value@value:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0xB
   549  00008B                     	ds	1
   550  00008C                     Window@num:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0xC
   554  00008C                     	ds	1
   555  00008D                     main@t1clk:
   556                           	opt stack 0
   557                           
   558                           ; 3 bytes @ 0xD
   559  00008D                     	ds	3
   560  000090                     main@test:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x10
   564  000090                     	ds	2
   565  000092                     main@my_mch_state:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x12
   569  000092                     	ds	1
   570  000093                     main@ADC_Result:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x13
   574  000093                     	ds	1
   575                           tblptru	equ	0xFF8
   576                           tblptrh	equ	0xFF7
   577                           tblptrl	equ	0xFF6
   578                           tablat	equ	0xFF5
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           postdec1	equ	0xFE5
   582                           fsr1l	equ	0xFE1
   583                           
   584                           	psect	cstackCOMRAM
   585  000001                     __pcstackCOMRAM:
   586                           	opt stack 0
   587  000001                     ?___ftpack:
   588                           	opt stack 0
   589  000001                     i2WriteTimer0@timer0:
   590                           	opt stack 0
   591  000001                     ___ftpack@arg:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x0
   595  000001                     	ds	2
   596  000003                     i2WriteTimer0@timer:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x2
   600  000003                     	ds	1
   601  000004                     ___ftpack@exp:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x3
   605  000004                     	ds	1
   606  000005                     ___ftpack@sign:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x4
   610  000005                     	ds	1
   611  000006                     ??___ftpack:
   612                           
   613                           ; 0 bytes @ 0x5
   614  000006                     	ds	3
   615  000009                     ?___abtoft:
   616                           	opt stack 0
   617  000009                     ?___lbtoft:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x8
   621  000009                     	ds	3
   622  00000C                     ___abtoft@sign:
   623                           	opt stack 0
   624  00000C                     ___lbtoft@c:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0xB
   628  00000C                     	ds	1
   629  00000D                     ___abtoft@c:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0xC
   633  00000D                     	ds	1
   634  00000E                     ?___ftmul:
   635                           	opt stack 0
   636  00000E                     ___ftmul@f1:
   637                           	opt stack 0
   638                           
   639                           ; 3 bytes @ 0xD
   640  00000E                     	ds	3
   641  000011                     ___ftmul@f2:
   642                           	opt stack 0
   643                           
   644                           ; 3 bytes @ 0x10
   645  000011                     	ds	3
   646  000014                     ??___ftmul:
   647                           
   648                           ; 0 bytes @ 0x13
   649  000014                     	ds	3
   650  000017                     ___ftmul@exp:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x16
   654  000017                     	ds	1
   655  000018                     ___ftmul@f3_as_product:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x17
   659  000018                     	ds	3
   660  00001B                     ___ftmul@cntr:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x1A
   664  00001B                     	ds	1
   665  00001C                     ___ftmul@sign:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x1B
   669  00001C                     	ds	1
   670  00001D                     ?___ftneg:
   671                           	opt stack 0
   672  00001D                     ___ftneg@f1:
   673                           	opt stack 0
   674                           
   675                           ; 3 bytes @ 0x1C
   676  00001D                     	ds	3
   677  000020                     ?___ftadd:
   678                           	opt stack 0
   679  000020                     ___ftadd@f1:
   680                           	opt stack 0
   681                           
   682                           ; 3 bytes @ 0x1F
   683  000020                     	ds	3
   684  000023                     ___ftadd@f2:
   685                           	opt stack 0
   686                           
   687                           ; 3 bytes @ 0x22
   688  000023                     	ds	3
   689  000026                     ??___ftadd:
   690                           
   691                           ; 0 bytes @ 0x25
   692  000026                     	ds	3
   693  000029                     ___ftadd@sign:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x28
   697  000029                     	ds	1
   698  00002A                     ___ftadd@exp2:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x29
   702  00002A                     	ds	1
   703  00002B                     ___ftadd@exp1:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x2A
   707  00002B                     	ds	1
   708  00002C                     ?___fttol:
   709                           	opt stack 0
   710  00002C                     ___fttol@f1:
   711                           	opt stack 0
   712                           
   713                           ; 3 bytes @ 0x2B
   714  00002C                     	ds	4
   715  000030                     ??___fttol:
   716                           
   717                           ; 0 bytes @ 0x2F
   718  000030                     	ds	5
   719  000035                     ___fttol@sign1:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x34
   723  000035                     	ds	1
   724  000036                     ___fttol@lval:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x35
   728  000036                     	ds	4
   729  00003A                     ___fttol@exp1:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x39
   733  00003A                     	ds	1
   734  00003B                     Controller_Func@temp:
   735                           	opt stack 0
   736                           
   737                           ; 3 bytes @ 0x3A
   738  00003B                     	ds	3
   739  00003E                     ??_myIsr:
   740                           
   741                           ; 0 bytes @ 0x3D
   742  00003E                     	ds	15
   743                           tblptru	equ	0xFF8
   744                           tblptrh	equ	0xFF7
   745                           tblptrl	equ	0xFF6
   746                           tablat	equ	0xFF5
   747                           postinc0	equ	0xFEE
   748                           wreg	equ	0xFE8
   749                           postdec1	equ	0xFE5
   750                           fsr1l	equ	0xFE1
   751                           
   752 ;;
   753 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   754 ;;
   755 ;; *************** function _main *****************
   756 ;; Defined at:
   757 ;;		line 154 in file "st_mch3_update_values_with_debounce_lib.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  t1clk           3   13[BANK0 ] unsigned um
   762 ;;  test            2   16[BANK0 ] unsigned int 
   763 ;;  ADC_Result      1   19[BANK0 ] unsigned char 
   764 ;;  my_mch_state    1   18[BANK0 ] enum E4366
   765 ;; Return value:  Size  Location     Type
   766 ;;		None               void
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   774 ;;      Params:         0       0       0       0       0       0       0
   775 ;;      Locals:         0       7       0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0
   777 ;;      Totals:         0       7       0       0       0       0       0
   778 ;;Total ram usage:        7 bytes
   779 ;; Hardware stack levels required when called:    8
   780 ;; This function calls:
   781 ;;		_Initial
   782 ;;		_Set
   783 ;;		_Window
   784 ;;		___ltdiv
   785 ;;		_delay_s
   786 ;;		_flash
   787 ;;		_lcd_clear
   788 ;;		_lcd_cursor
   789 ;;		_lcd_display_value
   790 ;;		_lcd_print
   791 ;;		_lcd_start
   792 ;; This function is called by:
   793 ;;		Startup code after reset
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text0
   798  0006BC                     __ptext0:
   799                           	opt stack 0
   800  0006BC                     _main:
   801                           	opt stack 23
   802                           
   803                           ;st_mch3_update_values_with_debounce_lib.c: 156: unsigned short long t1clk =250000;
   804                           
   805                           ;incstack = 0
   806  0006BC  0E90               	movlw	144
   807  0006BE  0100               	movlb	0	; () banked
   808  0006C0  6F8D               	movwf	main@t1clk& (0+255),b
   809  0006C2  0ED0               	movlw	208
   810  0006C4  0100               	movlb	0	; () banked
   811  0006C6  6F8E               	movwf	(main@t1clk+1)& (0+255),b
   812  0006C8  0E03               	movlw	3
   813  0006CA  0100               	movlb	0	; () banked
   814  0006CC  6F8F               	movwf	(main@t1clk+2)& (0+255),b
   815                           
   816                           ;st_mch3_update_values_with_debounce_lib.c: 157: unsigned int test=0;
   817  0006CE  0E00               	movlw	0
   818  0006D0  0100               	movlb	0	; () banked
   819  0006D2  6F91               	movwf	(main@test+1)& (0+255),b
   820  0006D4  0E00               	movlw	0
   821  0006D6  6F90               	movwf	main@test& (0+255),b
   822                           
   823                           ;st_mch3_update_values_with_debounce_lib.c: 159: unsigned char ADC_Result = 0;
   824  0006D8  0E00               	movlw	0
   825  0006DA  0100               	movlb	0	; () banked
   826  0006DC  6F93               	movwf	main@ADC_Result& (0+255),b
   827                           
   828                           ;st_mch3_update_values_with_debounce_lib.c: 161: typedef enum {MENU_0 = 0,MENU_1} states
      +                          ;
   829                           ;st_mch3_update_values_with_debounce_lib.c: 162: states my_mch_state = MENU_1;
   830  0006DE  0E01               	movlw	1
   831  0006E0  0100               	movlb	0	; () banked
   832  0006E2  6F92               	movwf	main@my_mch_state& (0+255),b
   833                           
   834                           ;st_mch3_update_values_with_debounce_lib.c: 165: Motor1.Desired=0;
   835  0006E4  0E00               	movlw	0
   836  0006E6  0100               	movlb	0	; () banked
   837  0006E8  6F94               	movwf	_Motor1& (0+255),b
   838                           
   839                           ;st_mch3_update_values_with_debounce_lib.c: 166: Motor1.Actual=0;
   840  0006EA  0E00               	movlw	0
   841  0006EC  0100               	movlb	0	; () banked
   842  0006EE  6F95               	movwf	(_Motor1+1)& (0+255),b
   843                           
   844                           ; BSR set to: 0
   845                           ;st_mch3_update_values_with_debounce_lib.c: 168: Initial();
   846  0006F0  EC90  F008         	call	_Initial	;wreg free
   847                           
   848                           ;st_mch3_update_values_with_debounce_lib.c: 169: flash();
   849  0006F4  EC24  F00B         	call	_flash	;wreg free
   850                           
   851                           ;st_mch3_update_values_with_debounce_lib.c: 170: Set();
   852  0006F8  EC55  F00B         	call	_Set	;wreg free
   853                           
   854                           ;st_mch3_update_values_with_debounce_lib.c: 171: flash();
   855  0006FC  EC24  F00B         	call	_flash	;wreg free
   856                           
   857                           ;st_mch3_update_values_with_debounce_lib.c: 172: lcd_start ();
   858  000700  EC60  F00A         	call	_lcd_start	;wreg free
   859                           
   860                           ;st_mch3_update_values_with_debounce_lib.c: 173: lcd_cursor ( 0, 0 ) ;
   861  000704  0E00               	movlw	0
   862  000706  0100               	movlb	0	; () banked
   863  000708  6F85               	movwf	lcd_cursor@y& (0+255),b
   864  00070A  0E00               	movlw	0
   865  00070C  ECDA  F00A         	call	_lcd_cursor
   866                           
   867                           ;st_mch3_update_values_with_debounce_lib.c: 174: lcd_print ( startup ) ;
   868  000710  C09A  F085         	movff	_startup,lcd_print@mess
   869  000714  C09B  F086         	movff	_startup+1,lcd_print@mess+1
   870  000718  EC07  F00A         	call	_lcd_print	;wreg free
   871                           
   872                           ;st_mch3_update_values_with_debounce_lib.c: 176: delay_s(2);
   873  00071C  0E02               	movlw	2
   874  00071E  EC39  F00A         	call	_delay_s
   875                           
   876                           ;st_mch3_update_values_with_debounce_lib.c: 178: Window(0);
   877  000722  0E00               	movlw	0
   878  000724  EC85  F009         	call	_Window
   879  000728                     l2220:
   880  000728  0100               	movlb	0	; () banked
   881  00072A  5196               	movf	_Button_Press& (0+255),w,b
   882  00072C  A4D8               	btfss	status,2,c
   883  00072E  D026               	goto	l2244
   884                           
   885                           ; BSR set to: 0
   886  000730  0100               	movlb	0	; () banked
   887  000732  5197               	movf	_TICK_E& (0+255),w,b
   888  000734  A4D8               	btfss	status,2,c
   889  000736  D022               	goto	l2244
   890  000738  D7F7               	goto	l2220
   891  00073A                     l196:
   892                           
   893                           ; BSR set to: 0
   894                           ;st_mch3_update_values_with_debounce_lib.c: 191: if (Button_Press.B0){
   895  00073A  0100               	movlb	0	; () banked
   896  00073C  A196               	btfss	_Button_Press& (0+255),0,b
   897  00073E  D087               	goto	l2272
   898                           
   899                           ; BSR set to: 0
   900                           ;st_mch3_update_values_with_debounce_lib.c: 192: my_mch_state = MENU_1;
   901  000740  0E01               	movlw	1
   902  000742  0100               	movlb	0	; () banked
   903  000744  6F92               	movwf	main@my_mch_state& (0+255),b
   904                           
   905                           ; BSR set to: 0
   906                           ;st_mch3_update_values_with_debounce_lib.c: 193: Window(1);
   907  000746  0E01               	movlw	1
   908  000748  EC85  F009         	call	_Window
   909                           
   910                           ;st_mch3_update_values_with_debounce_lib.c: 194: PIR1bits.ADIF=0;
   911  00074C  9C9E               	bcf	3998,6,c	;volatile
   912                           
   913                           ;st_mch3_update_values_with_debounce_lib.c: 195: ADCON0bits.ADON=1;
   914  00074E  80C2               	bsf	4034,0,c	;volatile
   915                           
   916                           ;st_mch3_update_values_with_debounce_lib.c: 197: }
   917                           ;st_mch3_update_values_with_debounce_lib.c: 199: break;
   918  000750  D07E               	goto	l2272
   919  000752                     l199:
   920                           
   921                           ; BSR set to: 0
   922                           ;st_mch3_update_values_with_debounce_lib.c: 201: if (Button_Press.B0){
   923  000752  0100               	movlb	0	; () banked
   924  000754  A196               	btfss	_Button_Press& (0+255),0,b
   925  000756  D07B               	goto	l2272
   926                           
   927                           ; BSR set to: 0
   928                           ;st_mch3_update_values_with_debounce_lib.c: 202: my_mch_state = MENU_0;
   929  000758  0E00               	movlw	0
   930  00075A  0100               	movlb	0	; () banked
   931  00075C  6F92               	movwf	main@my_mch_state& (0+255),b
   932                           
   933                           ; BSR set to: 0
   934                           ;st_mch3_update_values_with_debounce_lib.c: 203: Window(0);
   935  00075E  0E00               	movlw	0
   936  000760  EC85  F009         	call	_Window
   937                           
   938                           ;st_mch3_update_values_with_debounce_lib.c: 204: ADCON0bits.ADON=0;
   939  000764  90C2               	bcf	4034,0,c	;volatile
   940                           
   941                           ;st_mch3_update_values_with_debounce_lib.c: 205: }
   942                           ;st_mch3_update_values_with_debounce_lib.c: 206: break;
   943  000766  D073               	goto	l2272
   944  000768                     l201:
   945                           
   946                           ; BSR set to: 0
   947                           ;st_mch3_update_values_with_debounce_lib.c: 210: if (Button_Press.B0){
   948  000768  0100               	movlb	0	; () banked
   949  00076A  A196               	btfss	_Button_Press& (0+255),0,b
   950  00076C  D070               	goto	l2272
   951                           
   952                           ; BSR set to: 0
   953                           ;st_mch3_update_values_with_debounce_lib.c: 211: my_mch_state = MENU_0;
   954  00076E  0E00               	movlw	0
   955  000770  0100               	movlb	0	; () banked
   956  000772  6F92               	movwf	main@my_mch_state& (0+255),b
   957                           
   958                           ; BSR set to: 0
   959                           ;st_mch3_update_values_with_debounce_lib.c: 212: Window(0);
   960  000774  0E00               	movlw	0
   961  000776  EC85  F009         	call	_Window
   962                           
   963                           ;st_mch3_update_values_with_debounce_lib.c: 215: }
   964                           
   965                           ;st_mch3_update_values_with_debounce_lib.c: 213: }
   966                           ;st_mch3_update_values_with_debounce_lib.c: 214: break;
   967  00077A  D069               	goto	l2272
   968  00077C                     l2244:
   969  00077C  0100               	movlb	0	; () banked
   970  00077E  5192               	movf	main@my_mch_state& (0+255),w,b
   971                           
   972                           ; Switch size 1, requested type "space"
   973                           ; Number of cases is 2, Range of values is 0 to 1
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte            7     4 (average)
   977                           ;	Chosen strategy is simple_byte
   978  000780  0A00               	xorlw	0	; case 0
   979  000782  B4D8               	btfsc	status,2,c
   980  000784  D7DA               	goto	l196
   981  000786  0A01               	xorlw	1	; case 1
   982  000788  B4D8               	btfsc	status,2,c
   983  00078A  D7E3               	goto	l199
   984  00078C  D7ED               	goto	l201
   985  00078E                     l2246:
   986                           
   987                           ; BSR set to: 0
   988                           ;st_mch3_update_values_with_debounce_lib.c: 222: lcd_cursor(10,0);
   989  00078E  0E00               	movlw	0
   990  000790  0100               	movlb	0	; () banked
   991  000792  6F85               	movwf	lcd_cursor@y& (0+255),b
   992  000794  0E0A               	movlw	10
   993  000796  ECDA  F00A         	call	_lcd_cursor
   994                           
   995                           ;st_mch3_update_values_with_debounce_lib.c: 223: lcd_display_value(Motor1.Desired);
   996  00079A  0100               	movlb	0	; () banked
   997  00079C  5194               	movf	_Motor1& (0+255),w,b
   998  00079E  ECDC  F007         	call	_lcd_display_value
   999                           
  1000                           ;st_mch3_update_values_with_debounce_lib.c: 224: test = captured;
  1001  0007A2  C05A  F090         	movff	_captured,main@test
  1002  0007A6  C05B  F091         	movff	_captured+1,main@test+1
  1003                           
  1004                           ;st_mch3_update_values_with_debounce_lib.c: 225: Motor1.Actual= t1clk/test;
  1005  0007AA  C08D  F080         	movff	main@t1clk,___ltdiv@dividend
  1006  0007AE  C08E  F081         	movff	main@t1clk+1,___ltdiv@dividend+1
  1007  0007B2  C08F  F082         	movff	main@t1clk+2,___ltdiv@dividend+2
  1008  0007B6  C090  F083         	movff	main@test,___ltdiv@divisor
  1009  0007BA  C091  F084         	movff	main@test+1,___ltdiv@divisor+1
  1010  0007BE  0100               	movlb	0	; () banked
  1011  0007C0  6B85               	clrf	(___ltdiv@divisor+2)& (0+255),b
  1012  0007C2  EC36  F009         	call	___ltdiv	;wreg free
  1013  0007C6  0100               	movlb	0	; () banked
  1014  0007C8  5180               	movf	?___ltdiv& (0+255),w,b
  1015  0007CA  0100               	movlb	0	; () banked
  1016  0007CC  6F95               	movwf	(_Motor1+1)& (0+255),b
  1017                           
  1018                           ;st_mch3_update_values_with_debounce_lib.c: 226: lcd_cursor(10, 1);
  1019  0007CE  0E01               	movlw	1
  1020  0007D0  0100               	movlb	0	; () banked
  1021  0007D2  6F85               	movwf	lcd_cursor@y& (0+255),b
  1022  0007D4  0E0A               	movlw	10
  1023  0007D6  ECDA  F00A         	call	_lcd_cursor
  1024                           
  1025                           ;st_mch3_update_values_with_debounce_lib.c: 227: lcd_display_value(Motor1.Actual);
  1026  0007DA  0100               	movlb	0	; () banked
  1027  0007DC  5195               	movf	(_Motor1+1)& (0+255),w,b
  1028  0007DE  ECDC  F007         	call	_lcd_display_value
  1029                           
  1030                           ;st_mch3_update_values_with_debounce_lib.c: 232: break;
  1031  0007E2  D03E               	goto	l2274
  1032  0007E4                     l206:
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;st_mch3_update_values_with_debounce_lib.c: 237: if (Button_Press.B1)
  1036  0007E4  0100               	movlb	0	; () banked
  1037  0007E6  B396               	btfsc	_Button_Press& (0+255),1,b
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;st_mch3_update_values_with_debounce_lib.c: 238: {
  1041                           ;st_mch3_update_values_with_debounce_lib.c: 239: Motor1.Desired=ADC_Result;
  1042  0007E8  C093  F094         	movff	main@ADC_Result,_Motor1
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;st_mch3_update_values_with_debounce_lib.c: 240: }
  1046                           ;st_mch3_update_values_with_debounce_lib.c: 242: ADC_Result=ADRESH>>2;
  1047                           
  1048                           ; BSR set to: 0
  1049  0007EC  40C4               	rrncf	4036,w,c	;volatile
  1050  0007EE  42E8               	rrncf	wreg,f,c
  1051  0007F0  0B3F               	andlw	63
  1052  0007F2  0100               	movlb	0	; () banked
  1053  0007F4  6F93               	movwf	main@ADC_Result& (0+255),b
  1054                           
  1055                           ;st_mch3_update_values_with_debounce_lib.c: 243: if (ADC_Result>51)
  1056  0007F6  0E33               	movlw	51
  1057  0007F8  0100               	movlb	0	; () banked
  1058  0007FA  6593               	cpfsgt	main@ADC_Result& (0+255),b
  1059  0007FC  D003               	goto	l2256
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;st_mch3_update_values_with_debounce_lib.c: 244: {
  1063                           ;st_mch3_update_values_with_debounce_lib.c: 245: ADC_Result=50;
  1064  0007FE  0E32               	movlw	50
  1065  000800  0100               	movlb	0	; () banked
  1066  000802  6F93               	movwf	main@ADC_Result& (0+255),b
  1067  000804                     l2256:
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;st_mch3_update_values_with_debounce_lib.c: 246: }
  1071                           ;st_mch3_update_values_with_debounce_lib.c: 247: ADCON0bits.GO_nDONE=1;
  1072  000804  82C2               	bsf	4034,1,c	;volatile
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;st_mch3_update_values_with_debounce_lib.c: 249: lcd_cursor ( 10, 0 ) ;
  1076  000806  0E00               	movlw	0
  1077  000808  0100               	movlb	0	; () banked
  1078  00080A  6F85               	movwf	lcd_cursor@y& (0+255),b
  1079  00080C  0E0A               	movlw	10
  1080  00080E  ECDA  F00A         	call	_lcd_cursor
  1081                           
  1082                           ;st_mch3_update_values_with_debounce_lib.c: 250: lcd_display_value(ADC_Result);
  1083  000812  0100               	movlb	0	; () banked
  1084  000814  5193               	movf	main@ADC_Result& (0+255),w,b
  1085  000816  ECDC  F007         	call	_lcd_display_value
  1086                           
  1087                           ;st_mch3_update_values_with_debounce_lib.c: 251: lcd_cursor ( 10, 1 ) ;
  1088  00081A  0E01               	movlw	1
  1089  00081C  0100               	movlb	0	; () banked
  1090  00081E  6F85               	movwf	lcd_cursor@y& (0+255),b
  1091  000820  0E0A               	movlw	10
  1092  000822  ECDA  F00A         	call	_lcd_cursor
  1093                           
  1094                           ;st_mch3_update_values_with_debounce_lib.c: 252: lcd_display_value(Motor1.Desired);
  1095  000826  0100               	movlb	0	; () banked
  1096  000828  5194               	movf	_Motor1& (0+255),w,b
  1097  00082A  ECDC  F007         	call	_lcd_display_value
  1098                           
  1099                           ;st_mch3_update_values_with_debounce_lib.c: 254: break;
  1100  00082E  D018               	goto	l2274
  1101  000830                     l2266:
  1102                           
  1103                           ;st_mch3_update_values_with_debounce_lib.c: 257: lcd_cursor ( 0, 0 ) ;
  1104  000830  0E00               	movlw	0
  1105  000832  0100               	movlb	0	; () banked
  1106  000834  6F85               	movwf	lcd_cursor@y& (0+255),b
  1107  000836  0E00               	movlw	0
  1108  000838  ECDA  F00A         	call	_lcd_cursor
  1109                           
  1110                           ;st_mch3_update_values_with_debounce_lib.c: 258: lcd_clear();
  1111  00083C  ECA8  F00A         	call	_lcd_clear	;wreg free
  1112                           
  1113                           ;st_mch3_update_values_with_debounce_lib.c: 259: lcd_print ( problem );
  1114  000840  C098  F085         	movff	_problem,lcd_print@mess
  1115  000844  C099  F086         	movff	_problem+1,lcd_print@mess+1
  1116  000848  EC07  F00A         	call	_lcd_print	;wreg free
  1117                           
  1118                           ;st_mch3_update_values_with_debounce_lib.c: 262: }
  1119                           
  1120                           ;st_mch3_update_values_with_debounce_lib.c: 261: break;
  1121  00084C  D009               	goto	l2274
  1122  00084E                     l2272:
  1123  00084E  0100               	movlb	0	; () banked
  1124  000850  5192               	movf	main@my_mch_state& (0+255),w,b
  1125                           
  1126                           ; Switch size 1, requested type "space"
  1127                           ; Number of cases is 2, Range of values is 0 to 1
  1128                           ; switch strategies available:
  1129                           ; Name         Instructions Cycles
  1130                           ; simple_byte            7     4 (average)
  1131                           ;	Chosen strategy is simple_byte
  1132  000852  0A00               	xorlw	0	; case 0
  1133  000854  B4D8               	btfsc	status,2,c
  1134  000856  D79B               	goto	l2246
  1135  000858  0A01               	xorlw	1	; case 1
  1136  00085A  B4D8               	btfsc	status,2,c
  1137  00085C  D7C3               	goto	l206
  1138  00085E  D7E8               	goto	l2266
  1139  000860                     l2274:
  1140                           
  1141                           ;st_mch3_update_values_with_debounce_lib.c: 264: Button_Press.Full = 0;
  1142  000860  0E00               	movlw	0
  1143  000862  0100               	movlb	0	; () banked
  1144  000864  6F96               	movwf	_Button_Press& (0+255),b
  1145                           
  1146                           ;st_mch3_update_values_with_debounce_lib.c: 266: TICK_E=0;
  1147  000866  0E00               	movlw	0
  1148  000868  0100               	movlb	0	; () banked
  1149  00086A  6F97               	movwf	_TICK_E& (0+255),b
  1150                           
  1151                           ; BSR set to: 0
  1152  00086C  D75D               	goto	l2220
  1153  00086E                     __end_of_main:
  1154                           	opt stack 0
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           postdec1	equ	0xFE5
  1162                           fsr1l	equ	0xFE1
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function _lcd_start *****************
  1166 ;; Defined at:
  1167 ;;		line 189 in file "../../LCD_library/lcdlib_2016.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  i               1    7[BANK0 ] unsigned char 
  1172 ;;  t               1    0        unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      unsigned char 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1182 ;;      Params:         0       0       0       0       0       0       0
  1183 ;;      Locals:         0       1       0       0       0       0       0
  1184 ;;      Temps:          0       1       0       0       0       0       0
  1185 ;;      Totals:         0       2       0       0       0       0       0
  1186 ;;Total ram usage:        2 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    7
  1189 ;; This function calls:
  1190 ;;		_lcd_clear
  1191 ;;		_lcd_command
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text1
  1198  0014C0                     __ptext1:
  1199                           	opt stack 0
  1200  0014C0                     _lcd_start:
  1201                           	opt stack 23
  1202                           
  1203                           ;lcdlib_2016.c: 191: unsigned char i, t ;
  1204                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;incstack = 0
  1208  0014C0  5095               	movf	3989,w,c	;volatile
  1209  0014C2  0BC0               	andlw	192
  1210  0014C4  6E95               	movwf	3989,c	;volatile
  1211                           
  1212                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
  1213  0014C6  0EE0               	movlw	224
  1214  0014C8  0100               	movlb	0	; () banked
  1215  0014CA  6F86               	movwf	??_lcd_start& (0+255),b
  1216  0014CC  0E6A               	movlw	106
  1217  0014CE                     u1817:
  1218  0014CE  2EE8               	decfsz	wreg,f,c
  1219  0014D0  D7FE               	goto	u1817
  1220  0014D2  2F86               	decfsz	??_lcd_start& (0+255),f,b
  1221  0014D4  D7FC               	goto	u1817
  1222                           
  1223                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
  1224  0014D6  0E00               	movlw	0
  1225  0014D8  0100               	movlb	0	; () banked
  1226  0014DA  6F87               	movwf	lcd_start@i& (0+255),b
  1227  0014DC                     l1998:
  1228                           
  1229                           ; BSR set to: 0
  1230  0014DC  0E04               	movlw	4
  1231  0014DE  0100               	movlb	0	; () banked
  1232  0014E0  6587               	cpfsgt	lcd_start@i& (0+255),b
  1233  0014E2  D001               	goto	l2002
  1234  0014E4  D010               	goto	l2008
  1235  0014E6                     l2002:
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;lcdlib_2016.c: 204: {
  1239                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
  1240  0014E6  0100               	movlb	0	; () banked
  1241  0014E8  5187               	movf	lcd_start@i& (0+255),w,b
  1242  0014EA  0D01               	mullw	1
  1243  0014EC  0E01               	movlw	low _lcd_init
  1244  0014EE  24F3               	addwf	prodl,w,c
  1245  0014F0  6EF6               	movwf	tblptrl,c
  1246  0014F2  0E06               	movlw	high _lcd_init
  1247  0014F4  20F4               	addwfc	prodh,w,c
  1248  0014F6  6EF7               	movwf	tblptrh,c
  1249  0014F8                     	if	0	;There are less than 3 active tblptr bytes
  1250  0014F8                     	endif
  1251  0014F8  0008               	tblrd		*
  1252  0014FA  50F5               	movf	tablat,w,c
  1253  0014FC  EC39  F00B         	call	_lcd_command
  1254  001500  0100               	movlb	0	; () banked
  1255  001502  2B87               	incf	lcd_start@i& (0+255),f,b
  1256  001504  D7EB               	goto	l1998
  1257  001506                     l2008:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;lcdlib_2016.c: 206: }
  1261                           ;lcdlib_2016.c: 207: lcd_clear () ;
  1262  001506  ECA8  F00A         	call	_lcd_clear	;wreg free
  1263  00150A  0012               	return	
  1264  00150C                     __end_of_lcd_start:
  1265                           	opt stack 0
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           prodh	equ	0xFF4
  1271                           prodl	equ	0xFF3
  1272                           postinc0	equ	0xFEE
  1273                           wreg	equ	0xFE8
  1274                           postdec1	equ	0xFE5
  1275                           fsr1l	equ	0xFE1
  1276                           status	equ	0xFD8
  1277                           
  1278 ;; *************** function _lcd_display_value *****************
  1279 ;; Defined at:
  1280 ;;		line 244 in file "../../LCD_library/lcdlib_2016.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  value           1    wreg     unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  value           1   11[BANK0 ] unsigned char 
  1285 ;;  units           1   10[BANK0 ] unsigned char 
  1286 ;;  tens            1    9[BANK0 ] unsigned char 
  1287 ;;  hunds           1    8[BANK0 ] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;		None               void
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1297 ;;      Params:         0       0       0       0       0       0       0
  1298 ;;      Locals:         0       4       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0
  1300 ;;      Totals:         0       4       0       0       0       0       0
  1301 ;;Total ram usage:        4 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    6
  1304 ;; This function calls:
  1305 ;;		___awdiv
  1306 ;;		___awmod
  1307 ;;		_lcd_print_ch
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text2
  1314  000FB8                     __ptext2:
  1315                           	opt stack 0
  1316  000FB8                     _lcd_display_value:
  1317                           	opt stack 24
  1318                           
  1319                           ;incstack = 0
  1320                           ;lcd_display_value@value stored from wreg
  1321  000FB8  0100               	movlb	0	; () banked
  1322  000FBA  6F8B               	movwf	lcd_display_value@value& (0+255),b
  1323                           
  1324                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
  1325                           ;lcdlib_2016.c: 250: units = value % 10 ;
  1326  000FBC  C08B  F080         	movff	lcd_display_value@value,___awmod@dividend
  1327  000FC0  0100               	movlb	0	; () banked
  1328  000FC2  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  1329  000FC4  0E00               	movlw	0
  1330  000FC6  0100               	movlb	0	; () banked
  1331  000FC8  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  1332  000FCA  0E0A               	movlw	10
  1333  000FCC  6F82               	movwf	___awmod@divisor& (0+255),b
  1334  000FCE  ECE5  F008         	call	___awmod	;wreg free
  1335  000FD2  0100               	movlb	0	; () banked
  1336  000FD4  5180               	movf	?___awmod& (0+255),w,b
  1337  000FD6  0100               	movlb	0	; () banked
  1338  000FD8  6F8A               	movwf	lcd_display_value@units& (0+255),b
  1339                           
  1340                           ;lcdlib_2016.c: 251: value = value / 10 ;
  1341  000FDA  C08B  F080         	movff	lcd_display_value@value,___awdiv@dividend
  1342  000FDE  0100               	movlb	0	; () banked
  1343  000FE0  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  1344  000FE2  0E00               	movlw	0
  1345  000FE4  0100               	movlb	0	; () banked
  1346  000FE6  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  1347  000FE8  0E0A               	movlw	10
  1348  000FEA  6F82               	movwf	___awdiv@divisor& (0+255),b
  1349  000FEC  EC7D  F007         	call	___awdiv	;wreg free
  1350  000FF0  0100               	movlb	0	; () banked
  1351  000FF2  5180               	movf	?___awdiv& (0+255),w,b
  1352  000FF4  0100               	movlb	0	; () banked
  1353  000FF6  6F8B               	movwf	lcd_display_value@value& (0+255),b
  1354                           
  1355                           ;lcdlib_2016.c: 252: tens = value % 10 ;
  1356  000FF8  C08B  F080         	movff	lcd_display_value@value,___awmod@dividend
  1357  000FFC  0100               	movlb	0	; () banked
  1358  000FFE  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  1359  001000  0E00               	movlw	0
  1360  001002  0100               	movlb	0	; () banked
  1361  001004  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  1362  001006  0E0A               	movlw	10
  1363  001008  6F82               	movwf	___awmod@divisor& (0+255),b
  1364  00100A  ECE5  F008         	call	___awmod	;wreg free
  1365  00100E  0100               	movlb	0	; () banked
  1366  001010  5180               	movf	?___awmod& (0+255),w,b
  1367  001012  0100               	movlb	0	; () banked
  1368  001014  6F89               	movwf	lcd_display_value@tens& (0+255),b
  1369                           
  1370                           ;lcdlib_2016.c: 253: value = value / 10 ;
  1371  001016  C08B  F080         	movff	lcd_display_value@value,___awdiv@dividend
  1372  00101A  0100               	movlb	0	; () banked
  1373  00101C  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  1374  00101E  0E00               	movlw	0
  1375  001020  0100               	movlb	0	; () banked
  1376  001022  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  1377  001024  0E0A               	movlw	10
  1378  001026  6F82               	movwf	___awdiv@divisor& (0+255),b
  1379  001028  EC7D  F007         	call	___awdiv	;wreg free
  1380  00102C  0100               	movlb	0	; () banked
  1381  00102E  5180               	movf	?___awdiv& (0+255),w,b
  1382  001030  0100               	movlb	0	; () banked
  1383  001032  6F8B               	movwf	lcd_display_value@value& (0+255),b
  1384                           
  1385                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
  1386  001034  C08B  F080         	movff	lcd_display_value@value,___awmod@dividend
  1387  001038  0100               	movlb	0	; () banked
  1388  00103A  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  1389  00103C  0E00               	movlw	0
  1390  00103E  0100               	movlb	0	; () banked
  1391  001040  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  1392  001042  0E0A               	movlw	10
  1393  001044  6F82               	movwf	___awmod@divisor& (0+255),b
  1394  001046  ECE5  F008         	call	___awmod	;wreg free
  1395  00104A  0100               	movlb	0	; () banked
  1396  00104C  5180               	movf	?___awmod& (0+255),w,b
  1397  00104E  0100               	movlb	0	; () banked
  1398  001050  6F88               	movwf	lcd_display_value@hunds& (0+255),b
  1399                           
  1400                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
  1401  001052  0100               	movlb	0	; () banked
  1402  001054  5188               	movf	lcd_display_value@hunds& (0+255),w,b
  1403  001056  0F30               	addlw	48
  1404  001058  EC2F  F00B         	call	_lcd_print_ch
  1405                           
  1406                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
  1407  00105C  0100               	movlb	0	; () banked
  1408  00105E  5189               	movf	lcd_display_value@tens& (0+255),w,b
  1409  001060  0F30               	addlw	48
  1410  001062  EC2F  F00B         	call	_lcd_print_ch
  1411                           
  1412                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
  1413  001066  0100               	movlb	0	; () banked
  1414  001068  518A               	movf	lcd_display_value@units& (0+255),w,b
  1415  00106A  0F30               	addlw	48
  1416  00106C  EC2F  F00B         	call	_lcd_print_ch
  1417  001070  0012               	return		;funcret
  1418  001072                     __end_of_lcd_display_value:
  1419                           	opt stack 0
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           prodh	equ	0xFF4
  1425                           prodl	equ	0xFF3
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1l	equ	0xFE1
  1430                           status	equ	0xFD8
  1431                           
  1432 ;; *************** function ___awmod *****************
  1433 ;; Defined at:
  1434 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  dividend        2    0[BANK0 ] int 
  1437 ;;  divisor         2    2[BANK0 ] int 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  sign            1    5[BANK0 ] unsigned char 
  1440 ;;  counter         1    4[BANK0 ] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  2    0[BANK0 ] int 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1450 ;;      Params:         0       4       0       0       0       0       0
  1451 ;;      Locals:         0       2       0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0
  1453 ;;      Totals:         0       6       0       0       0       0       0
  1454 ;;Total ram usage:        6 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    4
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_lcd_display_value
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text3
  1465  0011CA                     __ptext3:
  1466                           	opt stack 0
  1467  0011CA                     ___awmod:
  1468                           	opt stack 25
  1469                           
  1470                           ;incstack = 0
  1471  0011CA  0E00               	movlw	0
  1472  0011CC  0100               	movlb	0	; () banked
  1473  0011CE  6F85               	movwf	___awmod@sign& (0+255),b
  1474                           
  1475                           ; BSR set to: 0
  1476  0011D0  0100               	movlb	0	; () banked
  1477  0011D2  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  1478  0011D4  D008               	goto	l1882
  1479                           
  1480                           ; BSR set to: 0
  1481  0011D6  0100               	movlb	0	; () banked
  1482  0011D8  6D80               	negf	___awmod@dividend& (0+255),b
  1483  0011DA  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  1484  0011DC  B0D8               	btfsc	status,0,c
  1485  0011DE  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  1486                           
  1487                           ; BSR set to: 0
  1488  0011E0  0E01               	movlw	1
  1489  0011E2  0100               	movlb	0	; () banked
  1490  0011E4  6F85               	movwf	___awmod@sign& (0+255),b
  1491  0011E6                     l1882:
  1492                           
  1493                           ; BSR set to: 0
  1494  0011E6  0100               	movlb	0	; () banked
  1495  0011E8  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1496  0011EA  D005               	goto	l1886
  1497                           
  1498                           ; BSR set to: 0
  1499  0011EC  0100               	movlb	0	; () banked
  1500  0011EE  6D82               	negf	___awmod@divisor& (0+255),b
  1501  0011F0  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  1502  0011F2  B0D8               	btfsc	status,0,c
  1503  0011F4  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  1504  0011F6                     l1886:
  1505                           
  1506                           ; BSR set to: 0
  1507  0011F6  0100               	movlb	0	; () banked
  1508  0011F8  5182               	movf	___awmod@divisor& (0+255),w,b
  1509  0011FA  0100               	movlb	0	; () banked
  1510  0011FC  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1511  0011FE  B4D8               	btfsc	status,2,c
  1512  001200  D026               	goto	l1902
  1513                           
  1514                           ; BSR set to: 0
  1515  001202  0E01               	movlw	1
  1516  001204  0100               	movlb	0	; () banked
  1517  001206  6F84               	movwf	___awmod@counter& (0+255),b
  1518  001208  D006               	goto	l1892
  1519  00120A                     l1890:
  1520                           
  1521                           ; BSR set to: 0
  1522  00120A  0100               	movlb	0	; () banked
  1523  00120C  90D8               	bcf	status,0,c
  1524  00120E  3782               	rlcf	___awmod@divisor& (0+255),f,b
  1525  001210  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1526  001212  0100               	movlb	0	; () banked
  1527  001214  2B84               	incf	___awmod@counter& (0+255),f,b
  1528  001216                     l1892:
  1529                           
  1530                           ; BSR set to: 0
  1531  001216  0100               	movlb	0	; () banked
  1532  001218  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1533  00121A  D7F7               	goto	l1890
  1534  00121C                     l1894:
  1535                           
  1536                           ; BSR set to: 0
  1537  00121C  0100               	movlb	0	; () banked
  1538  00121E  5182               	movf	___awmod@divisor& (0+255),w,b
  1539  001220  0100               	movlb	0	; () banked
  1540  001222  5D80               	subwf	___awmod@dividend& (0+255),w,b
  1541  001224  0100               	movlb	0	; () banked
  1542  001226  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  1543  001228  0100               	movlb	0	; () banked
  1544  00122A  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1545  00122C  A0D8               	btfss	status,0,c
  1546  00122E  D008               	goto	l1898
  1547                           
  1548                           ; BSR set to: 0
  1549  001230  0100               	movlb	0	; () banked
  1550  001232  5182               	movf	___awmod@divisor& (0+255),w,b
  1551  001234  0100               	movlb	0	; () banked
  1552  001236  5F80               	subwf	___awmod@dividend& (0+255),f,b
  1553  001238  0100               	movlb	0	; () banked
  1554  00123A  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  1555  00123C  0100               	movlb	0	; () banked
  1556  00123E  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1557  001240                     l1898:
  1558                           
  1559                           ; BSR set to: 0
  1560  001240  0100               	movlb	0	; () banked
  1561  001242  90D8               	bcf	status,0,c
  1562  001244  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1563  001246  3382               	rrcf	___awmod@divisor& (0+255),f,b
  1564                           
  1565                           ; BSR set to: 0
  1566  001248  0100               	movlb	0	; () banked
  1567  00124A  2F84               	decfsz	___awmod@counter& (0+255),f,b
  1568  00124C  D7E7               	goto	l1894
  1569  00124E                     l1902:
  1570                           
  1571                           ; BSR set to: 0
  1572  00124E  0100               	movlb	0	; () banked
  1573  001250  5185               	movf	___awmod@sign& (0+255),w,b
  1574  001252  0100               	movlb	0	; () banked
  1575  001254  B4D8               	btfsc	status,2,c
  1576  001256  D005               	goto	l1906
  1577                           
  1578                           ; BSR set to: 0
  1579  001258  0100               	movlb	0	; () banked
  1580  00125A  6D80               	negf	___awmod@dividend& (0+255),b
  1581  00125C  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  1582  00125E  B0D8               	btfsc	status,0,c
  1583  001260  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  1584  001262                     l1906:
  1585                           
  1586                           ; BSR set to: 0
  1587  001262  C080  F080         	movff	___awmod@dividend,?___awmod
  1588  001266  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  1589  00126A  0012               	return	
  1590  00126C                     __end_of___awmod:
  1591                           	opt stack 0
  1592                           tblptru	equ	0xFF8
  1593                           tblptrh	equ	0xFF7
  1594                           tblptrl	equ	0xFF6
  1595                           tablat	equ	0xFF5
  1596                           prodh	equ	0xFF4
  1597                           prodl	equ	0xFF3
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           postdec1	equ	0xFE5
  1601                           fsr1l	equ	0xFE1
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function ___awdiv *****************
  1605 ;; Defined at:
  1606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  dividend        2    0[BANK0 ] int 
  1609 ;;  divisor         2    2[BANK0 ] int 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  quotient        2    6[BANK0 ] int 
  1612 ;;  sign            1    5[BANK0 ] unsigned char 
  1613 ;;  counter         1    4[BANK0 ] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  2    0[BANK0 ] int 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1623 ;;      Params:         0       4       0       0       0       0       0
  1624 ;;      Locals:         0       4       0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0
  1626 ;;      Totals:         0       8       0       0       0       0       0
  1627 ;;Total ram usage:        8 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    4
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_lcd_display_value
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text4
  1638  000EFA                     __ptext4:
  1639                           	opt stack 0
  1640  000EFA                     ___awdiv:
  1641                           	opt stack 25
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;incstack = 0
  1645  000EFA  0E00               	movlw	0
  1646  000EFC  0100               	movlb	0	; () banked
  1647  000EFE  6F85               	movwf	___awdiv@sign& (0+255),b
  1648                           
  1649                           ; BSR set to: 0
  1650  000F00  0100               	movlb	0	; () banked
  1651  000F02  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1652  000F04  D008               	goto	l1838
  1653                           
  1654                           ; BSR set to: 0
  1655  000F06  0100               	movlb	0	; () banked
  1656  000F08  6D82               	negf	___awdiv@divisor& (0+255),b
  1657  000F0A  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1658  000F0C  B0D8               	btfsc	status,0,c
  1659  000F0E  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1660                           
  1661                           ; BSR set to: 0
  1662  000F10  0E01               	movlw	1
  1663  000F12  0100               	movlb	0	; () banked
  1664  000F14  6F85               	movwf	___awdiv@sign& (0+255),b
  1665  000F16                     l1838:
  1666                           
  1667                           ; BSR set to: 0
  1668  000F16  0100               	movlb	0	; () banked
  1669  000F18  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1670  000F1A  D008               	goto	l1844
  1671                           
  1672                           ; BSR set to: 0
  1673  000F1C  0100               	movlb	0	; () banked
  1674  000F1E  6D80               	negf	___awdiv@dividend& (0+255),b
  1675  000F20  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1676  000F22  B0D8               	btfsc	status,0,c
  1677  000F24  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1678                           
  1679                           ; BSR set to: 0
  1680  000F26  0E01               	movlw	1
  1681  000F28  0100               	movlb	0	; () banked
  1682  000F2A  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  1683  000F2C                     l1844:
  1684                           
  1685                           ; BSR set to: 0
  1686  000F2C  0E00               	movlw	0
  1687  000F2E  0100               	movlb	0	; () banked
  1688  000F30  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  1689  000F32  0E00               	movlw	0
  1690  000F34  6F86               	movwf	___awdiv@quotient& (0+255),b
  1691                           
  1692                           ; BSR set to: 0
  1693  000F36  0100               	movlb	0	; () banked
  1694  000F38  5182               	movf	___awdiv@divisor& (0+255),w,b
  1695  000F3A  0100               	movlb	0	; () banked
  1696  000F3C  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1697  000F3E  B4D8               	btfsc	status,2,c
  1698  000F40  D02C               	goto	l1866
  1699                           
  1700                           ; BSR set to: 0
  1701  000F42  0E01               	movlw	1
  1702  000F44  0100               	movlb	0	; () banked
  1703  000F46  6F84               	movwf	___awdiv@counter& (0+255),b
  1704  000F48  D006               	goto	l1852
  1705  000F4A                     l1850:
  1706                           
  1707                           ; BSR set to: 0
  1708  000F4A  0100               	movlb	0	; () banked
  1709  000F4C  90D8               	bcf	status,0,c
  1710  000F4E  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  1711  000F50  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1712  000F52  0100               	movlb	0	; () banked
  1713  000F54  2B84               	incf	___awdiv@counter& (0+255),f,b
  1714  000F56                     l1852:
  1715                           
  1716                           ; BSR set to: 0
  1717  000F56  0100               	movlb	0	; () banked
  1718  000F58  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1719  000F5A  D7F7               	goto	l1850
  1720  000F5C                     l1854:
  1721                           
  1722                           ; BSR set to: 0
  1723  000F5C  0100               	movlb	0	; () banked
  1724  000F5E  90D8               	bcf	status,0,c
  1725  000F60  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  1726  000F62  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1727                           
  1728                           ; BSR set to: 0
  1729  000F64  0100               	movlb	0	; () banked
  1730  000F66  5182               	movf	___awdiv@divisor& (0+255),w,b
  1731  000F68  0100               	movlb	0	; () banked
  1732  000F6A  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  1733  000F6C  0100               	movlb	0	; () banked
  1734  000F6E  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1735  000F70  0100               	movlb	0	; () banked
  1736  000F72  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1737  000F74  A0D8               	btfss	status,0,c
  1738  000F76  D00A               	goto	l1862
  1739                           
  1740                           ; BSR set to: 0
  1741  000F78  0100               	movlb	0	; () banked
  1742  000F7A  5182               	movf	___awdiv@divisor& (0+255),w,b
  1743  000F7C  0100               	movlb	0	; () banked
  1744  000F7E  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  1745  000F80  0100               	movlb	0	; () banked
  1746  000F82  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1747  000F84  0100               	movlb	0	; () banked
  1748  000F86  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1749                           
  1750                           ; BSR set to: 0
  1751  000F88  0100               	movlb	0	; () banked
  1752  000F8A  8186               	bsf	___awdiv@quotient& (0+255),0,b
  1753  000F8C                     l1862:
  1754                           
  1755                           ; BSR set to: 0
  1756  000F8C  0100               	movlb	0	; () banked
  1757  000F8E  90D8               	bcf	status,0,c
  1758  000F90  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1759  000F92  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  1760                           
  1761                           ; BSR set to: 0
  1762  000F94  0100               	movlb	0	; () banked
  1763  000F96  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  1764  000F98  D7E1               	goto	l1854
  1765  000F9A                     l1866:
  1766                           
  1767                           ; BSR set to: 0
  1768  000F9A  0100               	movlb	0	; () banked
  1769  000F9C  5185               	movf	___awdiv@sign& (0+255),w,b
  1770  000F9E  0100               	movlb	0	; () banked
  1771  000FA0  B4D8               	btfsc	status,2,c
  1772  000FA2  D005               	goto	l1870
  1773                           
  1774                           ; BSR set to: 0
  1775  000FA4  0100               	movlb	0	; () banked
  1776  000FA6  6D86               	negf	___awdiv@quotient& (0+255),b
  1777  000FA8  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1778  000FAA  B0D8               	btfsc	status,0,c
  1779  000FAC  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1780  000FAE                     l1870:
  1781                           
  1782                           ; BSR set to: 0
  1783  000FAE  C086  F080         	movff	___awdiv@quotient,?___awdiv
  1784  000FB2  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  1785  000FB6  0012               	return	
  1786  000FB8                     __end_of___awdiv:
  1787                           	opt stack 0
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           prodh	equ	0xFF4
  1793                           prodl	equ	0xFF3
  1794                           postinc0	equ	0xFEE
  1795                           wreg	equ	0xFE8
  1796                           postdec1	equ	0xFE5
  1797                           fsr1l	equ	0xFE1
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _flash *****************
  1801 ;; Defined at:
  1802 ;;		line 343 in file "st_mch3_update_values_with_debounce_lib.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;		None               void
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1816 ;;      Params:         0       0       0       0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0
  1819 ;;      Totals:         0       0       0       0       0       0       0
  1820 ;;Total ram usage:        0 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    5
  1823 ;; This function calls:
  1824 ;;		_delay_s
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text5
  1831  001648                     __ptext5:
  1832                           	opt stack 0
  1833  001648                     _flash:
  1834                           	opt stack 25
  1835                           
  1836                           ;st_mch3_update_values_with_debounce_lib.c: 345: PORTE = 0x01;
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;incstack = 0
  1840  001648  0E01               	movlw	1
  1841  00164A  6E84               	movwf	3972,c	;volatile
  1842                           
  1843                           ;st_mch3_update_values_with_debounce_lib.c: 346: delay_s(5);
  1844  00164C  0E05               	movlw	5
  1845  00164E  EC39  F00A         	call	_delay_s
  1846                           
  1847                           ;st_mch3_update_values_with_debounce_lib.c: 347: PORTE = 0x00;
  1848  001652  0E00               	movlw	0
  1849  001654  6E84               	movwf	3972,c	;volatile
  1850                           
  1851                           ;st_mch3_update_values_with_debounce_lib.c: 348: delay_s(5);
  1852  001656  0E05               	movlw	5
  1853  001658  EC39  F00A         	call	_delay_s
  1854  00165C  0012               	return		;funcret
  1855  00165E                     __end_of_flash:
  1856                           	opt stack 0
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           prodh	equ	0xFF4
  1862                           prodl	equ	0xFF3
  1863                           postinc0	equ	0xFEE
  1864                           wreg	equ	0xFE8
  1865                           postdec1	equ	0xFE5
  1866                           fsr1l	equ	0xFE1
  1867                           status	equ	0xFD8
  1868                           
  1869 ;; *************** function ___ltdiv *****************
  1870 ;; Defined at:
  1871 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ltdiv.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  dividend        3    0[BANK0 ] unsigned um
  1874 ;;  divisor         3    3[BANK0 ] unsigned um
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  quotient        3    6[BANK0 ] unsigned um
  1877 ;;  counter         1    9[BANK0 ] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  3    0[BANK0 ] unsigned um
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1887 ;;      Params:         0       6       0       0       0       0       0
  1888 ;;      Locals:         0       4       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0
  1890 ;;      Totals:         0      10       0       0       0       0       0
  1891 ;;Total ram usage:       10 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    4
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text6
  1902  00126C                     __ptext6:
  1903                           	opt stack 0
  1904  00126C                     ___ltdiv:
  1905                           	opt stack 26
  1906                           
  1907                           ;incstack = 0
  1908  00126C  0E00               	movlw	0
  1909  00126E  0100               	movlb	0	; () banked
  1910  001270  6F86               	movwf	___ltdiv@quotient& (0+255),b
  1911  001272  0E00               	movlw	0
  1912  001274  0100               	movlb	0	; () banked
  1913  001276  6F87               	movwf	(___ltdiv@quotient+1)& (0+255),b
  1914  001278  0E00               	movlw	0
  1915  00127A  0100               	movlb	0	; () banked
  1916  00127C  6F88               	movwf	(___ltdiv@quotient+2)& (0+255),b
  1917                           
  1918                           ; BSR set to: 0
  1919  00127E  0100               	movlb	0	; () banked
  1920  001280  5183               	movf	___ltdiv@divisor& (0+255),w,b
  1921  001282  0100               	movlb	0	; () banked
  1922  001284  1184               	iorwf	(___ltdiv@divisor+1)& (0+255),w,b
  1923  001286  0100               	movlb	0	; () banked
  1924  001288  1185               	iorwf	(___ltdiv@divisor+2)& (0+255),w,b
  1925  00128A  B4D8               	btfsc	status,2,c
  1926  00128C  D037               	goto	l636
  1927                           
  1928                           ; BSR set to: 0
  1929  00128E  0E01               	movlw	1
  1930  001290  0100               	movlb	0	; () banked
  1931  001292  6F89               	movwf	___ltdiv@counter& (0+255),b
  1932  001294  D007               	goto	l2122
  1933  001296                     l2120:
  1934                           
  1935                           ; BSR set to: 0
  1936  001296  0100               	movlb	0	; () banked
  1937  001298  90D8               	bcf	status,0,c
  1938  00129A  3783               	rlcf	___ltdiv@divisor& (0+255),f,b
  1939  00129C  3784               	rlcf	(___ltdiv@divisor+1)& (0+255),f,b
  1940  00129E  3785               	rlcf	(___ltdiv@divisor+2)& (0+255),f,b
  1941  0012A0  0100               	movlb	0	; () banked
  1942  0012A2  2B89               	incf	___ltdiv@counter& (0+255),f,b
  1943  0012A4                     l2122:
  1944                           
  1945                           ; BSR set to: 0
  1946  0012A4  0100               	movlb	0	; () banked
  1947  0012A6  AF85               	btfss	(___ltdiv@divisor+2)& (0+255),7,b
  1948  0012A8  D7F6               	goto	l2120
  1949  0012AA                     l2124:
  1950                           
  1951                           ; BSR set to: 0
  1952  0012AA  0100               	movlb	0	; () banked
  1953  0012AC  90D8               	bcf	status,0,c
  1954  0012AE  3786               	rlcf	___ltdiv@quotient& (0+255),f,b
  1955  0012B0  3787               	rlcf	(___ltdiv@quotient+1)& (0+255),f,b
  1956  0012B2  3788               	rlcf	(___ltdiv@quotient+2)& (0+255),f,b
  1957                           
  1958                           ; BSR set to: 0
  1959  0012B4  0100               	movlb	0	; () banked
  1960  0012B6  5183               	movf	___ltdiv@divisor& (0+255),w,b
  1961  0012B8  0100               	movlb	0	; () banked
  1962  0012BA  5D80               	subwf	___ltdiv@dividend& (0+255),w,b
  1963  0012BC  0100               	movlb	0	; () banked
  1964  0012BE  5184               	movf	(___ltdiv@divisor+1)& (0+255),w,b
  1965  0012C0  0100               	movlb	0	; () banked
  1966  0012C2  5981               	subwfb	(___ltdiv@dividend+1)& (0+255),w,b
  1967  0012C4  0100               	movlb	0	; () banked
  1968  0012C6  5185               	movf	(___ltdiv@divisor+2)& (0+255),w,b
  1969  0012C8  0100               	movlb	0	; () banked
  1970  0012CA  5982               	subwfb	(___ltdiv@dividend+2)& (0+255),w,b
  1971  0012CC  A0D8               	btfss	status,0,c
  1972  0012CE  D00E               	goto	l641
  1973                           
  1974                           ; BSR set to: 0
  1975  0012D0  0100               	movlb	0	; () banked
  1976  0012D2  5183               	movf	___ltdiv@divisor& (0+255),w,b
  1977  0012D4  0100               	movlb	0	; () banked
  1978  0012D6  5F80               	subwf	___ltdiv@dividend& (0+255),f,b
  1979  0012D8  0100               	movlb	0	; () banked
  1980  0012DA  5184               	movf	(___ltdiv@divisor+1)& (0+255),w,b
  1981  0012DC  0100               	movlb	0	; () banked
  1982  0012DE  5B81               	subwfb	(___ltdiv@dividend+1)& (0+255),f,b
  1983  0012E0  0100               	movlb	0	; () banked
  1984  0012E2  5185               	movf	(___ltdiv@divisor+2)& (0+255),w,b
  1985  0012E4  0100               	movlb	0	; () banked
  1986  0012E6  5B82               	subwfb	(___ltdiv@dividend+2)& (0+255),f,b
  1987                           
  1988                           ; BSR set to: 0
  1989  0012E8  0100               	movlb	0	; () banked
  1990  0012EA  8186               	bsf	___ltdiv@quotient& (0+255),0,b
  1991  0012EC                     l641:
  1992                           
  1993                           ; BSR set to: 0
  1994  0012EC  0100               	movlb	0	; () banked
  1995  0012EE  90D8               	bcf	status,0,c
  1996  0012F0  3385               	rrcf	(___ltdiv@divisor+2)& (0+255),f,b
  1997  0012F2  3384               	rrcf	(___ltdiv@divisor+1)& (0+255),f,b
  1998  0012F4  3383               	rrcf	___ltdiv@divisor& (0+255),f,b
  1999                           
  2000                           ; BSR set to: 0
  2001  0012F6  0100               	movlb	0	; () banked
  2002  0012F8  2F89               	decfsz	___ltdiv@counter& (0+255),f,b
  2003  0012FA  D7D7               	goto	l2124
  2004  0012FC                     l636:
  2005                           
  2006                           ; BSR set to: 0
  2007  0012FC  C086  F080         	movff	___ltdiv@quotient,?___ltdiv
  2008  001300  C087  F081         	movff	___ltdiv@quotient+1,?___ltdiv+1
  2009  001304  C088  F082         	movff	___ltdiv@quotient+2,?___ltdiv+2
  2010                           
  2011                           ; BSR set to: 0
  2012  001308  0012               	return		;funcret
  2013  00130A                     __end_of___ltdiv:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           prodh	equ	0xFF4
  2020                           prodl	equ	0xFF3
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           postdec1	equ	0xFE5
  2024                           fsr1l	equ	0xFE1
  2025                           status	equ	0xFD8
  2026                           
  2027 ;; *************** function _Window *****************
  2028 ;; Defined at:
  2029 ;;		line 351 in file "st_mch3_update_values_with_debounce_lib.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  num             1    wreg     unsigned char 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  num             1   12[BANK0 ] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;		None               void
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2043 ;;      Params:         0       0       0       0       0       0       0
  2044 ;;      Locals:         0       1       0       0       0       0       0
  2045 ;;      Temps:          0       2       0       0       0       0       0
  2046 ;;      Totals:         0       3       0       0       0       0       0
  2047 ;;Total ram usage:        3 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    7
  2050 ;; This function calls:
  2051 ;;		_lcd_clear
  2052 ;;		_lcd_cursor
  2053 ;;		_lcd_print
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text7
  2060  00130A                     __ptext7:
  2061                           	opt stack 0
  2062  00130A                     _Window:
  2063                           	opt stack 23
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;incstack = 0
  2067                           ;Window@num stored from wreg
  2068  00130A  0100               	movlb	0	; () banked
  2069  00130C  6F8C               	movwf	Window@num& (0+255),b
  2070                           
  2071                           ;st_mch3_update_values_with_debounce_lib.c: 353: lcd_clear();
  2072  00130E  ECA8  F00A         	call	_lcd_clear	;wreg free
  2073                           
  2074                           ;st_mch3_update_values_with_debounce_lib.c: 354: lcd_cursor ( 0, 0 ) ;
  2075  001312  0E00               	movlw	0
  2076  001314  0100               	movlb	0	; () banked
  2077  001316  6F85               	movwf	lcd_cursor@y& (0+255),b
  2078  001318  0E00               	movlw	0
  2079  00131A  ECDA  F00A         	call	_lcd_cursor
  2080                           
  2081                           ;st_mch3_update_values_with_debounce_lib.c: 355: lcd_print ( msg_ary[num*2]);
  2082  00131E  0100               	movlb	0	; () banked
  2083  001320  518C               	movf	Window@num& (0+255),w,b
  2084  001322  0D20               	mullw	32
  2085  001324  0E06               	movlw	low _msg_ary
  2086  001326  24F3               	addwf	prodl,w,c
  2087  001328  0100               	movlb	0	; () banked
  2088  00132A  6F85               	movwf	lcd_print@mess& (0+255),b
  2089  00132C  0E06               	movlw	high _msg_ary
  2090  00132E  20F4               	addwfc	prodh,w,c
  2091  001330  0100               	movlb	0	; () banked
  2092  001332  6F86               	movwf	(lcd_print@mess+1)& (0+255),b
  2093  001334  EC07  F00A         	call	_lcd_print	;wreg free
  2094                           
  2095                           ;st_mch3_update_values_with_debounce_lib.c: 356: lcd_cursor ( 0, 1 ) ;
  2096  001338  0E01               	movlw	1
  2097  00133A  0100               	movlb	0	; () banked
  2098  00133C  6F85               	movwf	lcd_cursor@y& (0+255),b
  2099  00133E  0E00               	movlw	0
  2100  001340  ECDA  F00A         	call	_lcd_cursor
  2101                           
  2102                           ;st_mch3_update_values_with_debounce_lib.c: 357: lcd_print ( msg_ary[(num*2)+1]);
  2103  001344  0100               	movlb	0	; () banked
  2104  001346  518C               	movf	Window@num& (0+255),w,b
  2105  001348  0100               	movlb	0	; () banked
  2106  00134A  6F8A               	movwf	??_Window& (0+255),b
  2107  00134C  6B8B               	clrf	(??_Window+1)& (0+255),b
  2108  00134E  90D8               	bcf	status,0,c
  2109  001350  0100               	movlb	0	; () banked
  2110  001352  378A               	rlcf	??_Window& (0+255),f,b
  2111  001354  378B               	rlcf	(??_Window+1)& (0+255),f,b
  2112  001356  0100               	movlb	0	; () banked
  2113  001358  3B8A               	swapf	??_Window& (0+255),f,b
  2114  00135A  3B8B               	swapf	(??_Window+1)& (0+255),f,b
  2115  00135C  0EF0               	movlw	240
  2116  00135E  178B               	andwf	(??_Window+1)& (0+255),f,b
  2117  001360  518A               	movf	??_Window& (0+255),w,b
  2118  001362  0B0F               	andlw	15
  2119  001364  138B               	iorwf	(??_Window+1)& (0+255),f,b
  2120  001366  0EF0               	movlw	240
  2121  001368  178A               	andwf	??_Window& (0+255),f,b
  2122  00136A  0E10               	movlw	16
  2123  00136C  0100               	movlb	0	; () banked
  2124  00136E  278A               	addwf	??_Window& (0+255),f,b
  2125  001370  0E00               	movlw	0
  2126  001372  238B               	addwfc	(??_Window+1)& (0+255),f,b
  2127  001374  0E06               	movlw	low _msg_ary
  2128  001376  0100               	movlb	0	; () banked
  2129  001378  258A               	addwf	??_Window& (0+255),w,b
  2130  00137A  0100               	movlb	0	; () banked
  2131  00137C  6F85               	movwf	lcd_print@mess& (0+255),b
  2132  00137E  0E06               	movlw	high _msg_ary
  2133  001380  0100               	movlb	0	; () banked
  2134  001382  218B               	addwfc	(??_Window+1)& (0+255),w,b
  2135  001384  0100               	movlb	0	; () banked
  2136  001386  6F86               	movwf	(lcd_print@mess+1)& (0+255),b
  2137  001388  EC07  F00A         	call	_lcd_print	;wreg free
  2138  00138C  0012               	return		;funcret
  2139  00138E                     __end_of_Window:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           prodh	equ	0xFF4
  2146                           prodl	equ	0xFF3
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           postdec1	equ	0xFE5
  2150                           fsr1l	equ	0xFE1
  2151                           status	equ	0xFD8
  2152                           
  2153 ;; *************** function _lcd_print *****************
  2154 ;; Defined at:
  2155 ;;		line 215 in file "../../LCD_library/lcdlib_2016.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  mess            2    5[BANK0 ] PTR const unsigned char 
  2158 ;;		 -> msg_ary(160), STR_2(12), STR_1(8), 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  i               1    9[BANK0 ] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      unsigned char 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2170 ;;      Params:         0       2       0       0       0       0       0
  2171 ;;      Locals:         0       1       0       0       0       0       0
  2172 ;;      Temps:          0       2       0       0       0       0       0
  2173 ;;      Totals:         0       5       0       0       0       0       0
  2174 ;;Total ram usage:        5 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    6
  2177 ;; This function calls:
  2178 ;;		_lcd_print_ch
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;;		_Window
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text8
  2186  00140E                     __ptext8:
  2187                           	opt stack 0
  2188  00140E                     _lcd_print:
  2189                           	opt stack 24
  2190                           
  2191                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
  2192                           
  2193                           ;incstack = 0
  2194  00140E  0E00               	movlw	0
  2195  001410  0100               	movlb	0	; () banked
  2196  001412  6F89               	movwf	lcd_print@i& (0+255),b
  2197                           
  2198                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
  2199  001414  D017               	goto	l1670
  2200  001416                     l1666:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;lcdlib_2016.c: 225: {
  2204                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
  2205  001416  0100               	movlb	0	; () banked
  2206  001418  5189               	movf	lcd_print@i& (0+255),w,b
  2207  00141A  0D01               	mullw	1
  2208  00141C  C085  F087         	movff	lcd_print@mess,??_lcd_print
  2209  001420  C086  F088         	movff	lcd_print@mess+1,??_lcd_print+1
  2210  001424  50F3               	movf	prodl,w,c
  2211  001426  0100               	movlb	0	; () banked
  2212  001428  2787               	addwf	??_lcd_print& (0+255),f,b
  2213  00142A  50F4               	movf	prodh,w,c
  2214  00142C  0100               	movlb	0	; () banked
  2215  00142E  2388               	addwfc	(??_lcd_print+1)& (0+255),f,b
  2216  001430  C087  FFF6         	movff	??_lcd_print,tblptrl
  2217  001434  C088  FFF7         	movff	??_lcd_print+1,tblptrh
  2218  001438                     	if	0	;tblptru may be non-zero
  2219  001438                     	endif
  2220  001438                     	if	0	;tblptru may be non-zero
  2221  001438                     	endif
  2222  001438  0008               	tblrd		*
  2223  00143A  50F5               	movf	tablat,w,c
  2224  00143C  EC2F  F00B         	call	_lcd_print_ch
  2225                           
  2226                           ;lcdlib_2016.c: 227: i++ ;
  2227  001440  0100               	movlb	0	; () banked
  2228  001442  2B89               	incf	lcd_print@i& (0+255),f,b
  2229  001444                     l1670:
  2230                           
  2231                           ; BSR set to: 0
  2232  001444  0100               	movlb	0	; () banked
  2233  001446  5189               	movf	lcd_print@i& (0+255),w,b
  2234  001448  0D01               	mullw	1
  2235  00144A  C085  F087         	movff	lcd_print@mess,??_lcd_print
  2236  00144E  C086  F088         	movff	lcd_print@mess+1,??_lcd_print+1
  2237  001452  50F3               	movf	prodl,w,c
  2238  001454  0100               	movlb	0	; () banked
  2239  001456  2787               	addwf	??_lcd_print& (0+255),f,b
  2240  001458  50F4               	movf	prodh,w,c
  2241  00145A  0100               	movlb	0	; () banked
  2242  00145C  2388               	addwfc	(??_lcd_print+1)& (0+255),f,b
  2243  00145E  C087  FFF6         	movff	??_lcd_print,tblptrl
  2244  001462  C088  FFF7         	movff	??_lcd_print+1,tblptrh
  2245  001466                     	if	0	;tblptru may be non-zero
  2246  001466                     	endif
  2247  001466                     	if	0	;tblptru may be non-zero
  2248  001466                     	endif
  2249  001466  0008               	tblrd		*
  2250  001468  50F5               	movf	tablat,w,c
  2251  00146A  0900               	iorlw	0
  2252  00146C  B4D8               	btfsc	status,2,c
  2253  00146E  0012               	return	
  2254  001470  D7D2               	goto	l1666
  2255  001472                     __end_of_lcd_print:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           prodh	equ	0xFF4
  2262                           prodl	equ	0xFF3
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           postdec1	equ	0xFE5
  2266                           fsr1l	equ	0xFE1
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function _lcd_print_ch *****************
  2270 ;; Defined at:
  2271 ;;		line 115 in file "../../LCD_library/lcdlib_2016.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  in              1    wreg     unsigned char 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  in              1    4[BANK0 ] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      unsigned char 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2285 ;;      Params:         0       0       0       0       0       0       0
  2286 ;;      Locals:         0       1       0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0
  2288 ;;      Totals:         0       1       0       0       0       0       0
  2289 ;;Total ram usage:        1 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    5
  2292 ;; This function calls:
  2293 ;;		_lcd_raw_send
  2294 ;; This function is called by:
  2295 ;;		_lcd_print
  2296 ;;		_lcd_display_value
  2297 ;;		_lcd_display_int_value
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text9
  2302  00165E                     __ptext9:
  2303                           	opt stack 0
  2304  00165E                     _lcd_print_ch:
  2305                           	opt stack 24
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;incstack = 0
  2309                           ;lcd_print_ch@in stored from wreg
  2310  00165E  0100               	movlb	0	; () banked
  2311  001660  6F84               	movwf	lcd_print_ch@in& (0+255),b
  2312                           
  2313                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  2314  001662  0E01               	movlw	1
  2315  001664  0100               	movlb	0	; () banked
  2316  001666  6F80               	movwf	lcd_raw_send@RS& (0+255),b
  2317  001668  0100               	movlb	0	; () banked
  2318  00166A  5184               	movf	lcd_print_ch@in& (0+255),w,b
  2319  00166C  EC0D  F005         	call	_lcd_raw_send
  2320  001670  0012               	return	
  2321  001672                     __end_of_lcd_print_ch:
  2322                           	opt stack 0
  2323                           tblptru	equ	0xFF8
  2324                           tblptrh	equ	0xFF7
  2325                           tblptrl	equ	0xFF6
  2326                           tablat	equ	0xFF5
  2327                           prodh	equ	0xFF4
  2328                           prodl	equ	0xFF3
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           fsr1l	equ	0xFE1
  2333                           status	equ	0xFD8
  2334                           
  2335 ;; *************** function _lcd_cursor *****************
  2336 ;; Defined at:
  2337 ;;		line 144 in file "../../LCD_library/lcdlib_2016.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  x               1    wreg     unsigned char 
  2340 ;;  y               1    5[BANK0 ] unsigned char 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  x               1    6[BANK0 ] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      unsigned char 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2352 ;;      Params:         0       1       0       0       0       0       0
  2353 ;;      Locals:         0       1       0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0
  2355 ;;      Totals:         0       2       0       0       0       0       0
  2356 ;;Total ram usage:        2 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    6
  2359 ;; This function calls:
  2360 ;;		_lcd_command
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;;		_Window
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text10
  2368  0015B4                     __ptext10:
  2369                           	opt stack 0
  2370  0015B4                     _lcd_cursor:
  2371                           	opt stack 24
  2372                           
  2373                           ;incstack = 0
  2374                           ;lcd_cursor@x stored from wreg
  2375  0015B4  0100               	movlb	0	; () banked
  2376  0015B6  6F86               	movwf	lcd_cursor@x& (0+255),b
  2377                           
  2378                           ;lcdlib_2016.c: 153: if ( y==0 )
  2379  0015B8  0100               	movlb	0	; () banked
  2380  0015BA  5185               	movf	lcd_cursor@y& (0+255),w,b
  2381  0015BC  0100               	movlb	0	; () banked
  2382  0015BE  A4D8               	btfss	status,2,c
  2383  0015C0  D002               	goto	l1658
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;lcdlib_2016.c: 154: {
  2387                           ;lcdlib_2016.c: 156: y=0x80 ;
  2388  0015C2  0E80               	movlw	128
  2389  0015C4  D001               	goto	L1
  2390  0015C6                     l1658:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;lcdlib_2016.c: 158: else
  2394                           ;lcdlib_2016.c: 159: {
  2395                           ;lcdlib_2016.c: 161: y=0xc0 ;
  2396  0015C6  0EC0               	movlw	192
  2397  0015C8                     L1:
  2398  0015C8  0100               	movlb	0	; () banked
  2399  0015CA  6F85               	movwf	lcd_cursor@y& (0+255),b
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;lcdlib_2016.c: 162: }
  2403                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  2404                           
  2405                           ; BSR set to: 0
  2406  0015CC  0100               	movlb	0	; () banked
  2407  0015CE  5185               	movf	lcd_cursor@y& (0+255),w,b
  2408  0015D0  0100               	movlb	0	; () banked
  2409  0015D2  2586               	addwf	lcd_cursor@x& (0+255),w,b
  2410  0015D4  EC39  F00B         	call	_lcd_command
  2411  0015D8  0012               	return	
  2412  0015DA                     __end_of_lcd_cursor:
  2413                           	opt stack 0
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           postdec1	equ	0xFE5
  2423                           fsr1l	equ	0xFE1
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _lcd_clear *****************
  2427 ;; Defined at:
  2428 ;;		line 131 in file "../../LCD_library/lcdlib_2016.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      unsigned char 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2442 ;;      Params:         0       0       0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0
  2444 ;;      Temps:          0       1       0       0       0       0       0
  2445 ;;      Totals:         0       1       0       0       0       0       0
  2446 ;;Total ram usage:        1 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    6
  2449 ;; This function calls:
  2450 ;;		_lcd_command
  2451 ;; This function is called by:
  2452 ;;		_lcd_start
  2453 ;;		_main
  2454 ;;		_Window
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text11
  2459  001550                     __ptext11:
  2460                           	opt stack 0
  2461  001550                     _lcd_clear:
  2462                           	opt stack 23
  2463                           
  2464                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
  2465                           
  2466                           ;incstack = 0
  2467  001550  0E01               	movlw	1
  2468  001552  EC39  F00B         	call	_lcd_command
  2469                           
  2470                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
  2471  001556  0E0D               	movlw	13
  2472  001558  0100               	movlb	0	; () banked
  2473  00155A  6F85               	movwf	??_lcd_clear& (0+255),b
  2474  00155C  0EC3               	movlw	195
  2475  00155E                     u1827:
  2476  00155E  2EE8               	decfsz	wreg,f,c
  2477  001560  D7FE               	goto	u1827
  2478  001562  2F85               	decfsz	??_lcd_clear& (0+255),f,b
  2479  001564  D7FC               	goto	u1827
  2480  001566  F000               	nop	
  2481                           
  2482                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
  2483  001568  0E02               	movlw	2
  2484  00156A  EC39  F00B         	call	_lcd_command
  2485                           
  2486                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
  2487  00156E  0E0D               	movlw	13
  2488  001570  0100               	movlb	0	; () banked
  2489  001572  6F85               	movwf	??_lcd_clear& (0+255),b
  2490  001574  0EC3               	movlw	195
  2491  001576                     u1837:
  2492  001576  2EE8               	decfsz	wreg,f,c
  2493  001578  D7FE               	goto	u1837
  2494  00157A  2F85               	decfsz	??_lcd_clear& (0+255),f,b
  2495  00157C  D7FC               	goto	u1837
  2496  00157E  F000               	nop	
  2497  001580  0012               	return	
  2498  001582                     __end_of_lcd_clear:
  2499                           	opt stack 0
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           prodh	equ	0xFF4
  2505                           prodl	equ	0xFF3
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           postdec1	equ	0xFE5
  2509                           fsr1l	equ	0xFE1
  2510                           status	equ	0xFD8
  2511                           
  2512 ;; *************** function _lcd_command *****************
  2513 ;; Defined at:
  2514 ;;		line 123 in file "../../LCD_library/lcdlib_2016.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  in              1    wreg     unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  in              1    4[BANK0 ] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2528 ;;      Params:         0       0       0       0       0       0       0
  2529 ;;      Locals:         0       1       0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0
  2531 ;;      Totals:         0       1       0       0       0       0       0
  2532 ;;Total ram usage:        1 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    5
  2535 ;; This function calls:
  2536 ;;		_lcd_raw_send
  2537 ;; This function is called by:
  2538 ;;		_lcd_clear
  2539 ;;		_lcd_cursor
  2540 ;;		_lcd_start
  2541 ;;		_lcd_cursor_on
  2542 ;;		_lcd_cursor_off
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text12
  2547  001672                     __ptext12:
  2548                           	opt stack 0
  2549  001672                     _lcd_command:
  2550                           	opt stack 24
  2551                           
  2552                           ;incstack = 0
  2553                           ;lcd_command@in stored from wreg
  2554  001672  0100               	movlb	0	; () banked
  2555  001674  6F84               	movwf	lcd_command@in& (0+255),b
  2556                           
  2557                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  2558  001676  0E00               	movlw	0
  2559  001678  0100               	movlb	0	; () banked
  2560  00167A  6F80               	movwf	lcd_raw_send@RS& (0+255),b
  2561  00167C  0100               	movlb	0	; () banked
  2562  00167E  5184               	movf	lcd_command@in& (0+255),w,b
  2563  001680  EC0D  F005         	call	_lcd_raw_send
  2564  001684  0012               	return		;funcret
  2565  001686                     __end_of_lcd_command:
  2566                           	opt stack 0
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           prodh	equ	0xFF4
  2572                           prodl	equ	0xFF3
  2573                           postinc0	equ	0xFEE
  2574                           wreg	equ	0xFE8
  2575                           postdec1	equ	0xFE5
  2576                           fsr1l	equ	0xFE1
  2577                           status	equ	0xFD8
  2578                           
  2579 ;; *************** function _lcd_raw_send *****************
  2580 ;; Defined at:
  2581 ;;		line 74 in file "../../LCD_library/lcdlib_2016.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  in              1    wreg     unsigned char 
  2584 ;;  RS              1    0[BANK0 ] unsigned char 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  in              1    3[BANK0 ] unsigned char 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;		None               void
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2596 ;;      Params:         0       1       0       0       0       0       0
  2597 ;;      Locals:         0       1       0       0       0       0       0
  2598 ;;      Temps:          0       2       0       0       0       0       0
  2599 ;;      Totals:         0       4       0       0       0       0       0
  2600 ;;Total ram usage:        4 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    4
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_lcd_print_ch
  2607 ;;		_lcd_command
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text13
  2612  000A1A                     __ptext13:
  2613                           	opt stack 0
  2614  000A1A                     _lcd_raw_send:
  2615                           	opt stack 24
  2616                           
  2617                           ;incstack = 0
  2618                           ;lcd_raw_send@in stored from wreg
  2619  000A1A  0100               	movlb	0	; () banked
  2620  000A1C  6F83               	movwf	lcd_raw_send@in& (0+255),b
  2621                           
  2622                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  2623  000A1E  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2624  000A22  0100               	movlb	0	; () banked
  2625  000A24  3B81               	swapf	??_lcd_raw_send& (0+255),f,b
  2626  000A26  0E0F               	movlw	15
  2627  000A28  1781               	andwf	??_lcd_raw_send& (0+255),f,b
  2628  000A2A  508C               	movf	3980,w,c	;volatile
  2629  000A2C  0100               	movlb	0	; () banked
  2630  000A2E  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2631  000A30  0BFE               	andlw	-2
  2632  000A32  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2633  000A34  6E8C               	movwf	3980,c	;volatile
  2634                           
  2635                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  2636  000A36  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2637  000A3A  0E05               	movlw	5
  2638  000A3C  0100               	movlb	0	; () banked
  2639  000A3E  6F82               	movwf	(??_lcd_raw_send+1)& (0+255),b
  2640  000A40                     u915:
  2641  000A40  0100               	movlb	0	; () banked
  2642  000A42  90D8               	bcf	status,0,c
  2643  000A44  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2644  000A46  0100               	movlb	0	; () banked
  2645  000A48  2F82               	decfsz	(??_lcd_raw_send+1)& (0+255),f,b
  2646  000A4A  D7FA               	goto	u915
  2647  000A4C  0100               	movlb	0	; () banked
  2648  000A4E  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2649  000A50  508C               	movf	3980,w,c	;volatile
  2650  000A52  0100               	movlb	0	; () banked
  2651  000A54  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2652  000A56  0BFD               	andlw	-3
  2653  000A58  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2654  000A5A  6E8C               	movwf	3980,c	;volatile
  2655                           
  2656                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  2657  000A5C  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2658  000A60  0E06               	movlw	6
  2659  000A62  0100               	movlb	0	; () banked
  2660  000A64  6F82               	movwf	(??_lcd_raw_send+1)& (0+255),b
  2661  000A66                     u925:
  2662  000A66  0100               	movlb	0	; () banked
  2663  000A68  90D8               	bcf	status,0,c
  2664  000A6A  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2665  000A6C  0100               	movlb	0	; () banked
  2666  000A6E  2F82               	decfsz	(??_lcd_raw_send+1)& (0+255),f,b
  2667  000A70  D7FA               	goto	u925
  2668  000A72  0100               	movlb	0	; () banked
  2669  000A74  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2670  000A76  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2671  000A78  508C               	movf	3980,w,c	;volatile
  2672  000A7A  0100               	movlb	0	; () banked
  2673  000A7C  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2674  000A7E  0BFB               	andlw	-5
  2675  000A80  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2676  000A82  6E8C               	movwf	3980,c	;volatile
  2677                           
  2678                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  2679  000A84  0100               	movlb	0	; () banked
  2680  000A86  6B81               	clrf	??_lcd_raw_send& (0+255),b
  2681  000A88  AF83               	btfss	lcd_raw_send@in& (0+255),7,b
  2682  000A8A  D002               	bra	u935
  2683  000A8C  0100               	movlb	0	; () banked
  2684  000A8E  2B81               	incf	??_lcd_raw_send& (0+255),f,b
  2685  000A90                     u935:
  2686  000A90  0100               	movlb	0	; () banked
  2687  000A92  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2688  000A94  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2689  000A96  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2690  000A98  508C               	movf	3980,w,c	;volatile
  2691  000A9A  0100               	movlb	0	; () banked
  2692  000A9C  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2693  000A9E  0BF7               	andlw	-9
  2694  000AA0  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2695  000AA2  6E8C               	movwf	3980,c	;volatile
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  2699  000AA4  0100               	movlb	0	; () banked
  2700  000AA6  B180               	btfsc	lcd_raw_send@RS& (0+255),0,b
  2701  000AA8  D002               	bra	u945
  2702  000AAA  988C               	bcf	3980,4,c	;volatile
  2703  000AAC  D001               	bra	u946
  2704  000AAE                     u945:
  2705  000AAE  888C               	bsf	3980,4,c	;volatile
  2706  000AB0                     u946:
  2707                           
  2708                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2709  000AB0  0E03               	movlw	3
  2710  000AB2                     u1847:
  2711  000AB2  2EE8               	decfsz	wreg,f,c
  2712  000AB4  D7FE               	goto	u1847
  2713                           
  2714                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  2715  000AB6  8A8C               	bsf	3980,5,c	;volatile
  2716                           
  2717                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2718  000AB8  0E03               	movlw	3
  2719  000ABA                     u1857:
  2720  000ABA  2EE8               	decfsz	wreg,f,c
  2721  000ABC  D7FE               	goto	u1857
  2722                           
  2723                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  2724  000ABE  9A8C               	bcf	3980,5,c	;volatile
  2725                           
  2726                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2727  000AC0  0E51               	movlw	81
  2728  000AC2                     u1867:
  2729  000AC2  2EE8               	decfsz	wreg,f,c
  2730  000AC4  D7FE               	goto	u1867
  2731  000AC6  D000               	nop2		;nop
  2732                           
  2733                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  2734  000AC8  0100               	movlb	0	; () banked
  2735  000ACA  B183               	btfsc	lcd_raw_send@in& (0+255),0,b
  2736  000ACC  D002               	bra	u955
  2737  000ACE  908C               	bcf	3980,0,c	;volatile
  2738  000AD0  D001               	bra	u956
  2739  000AD2                     u955:
  2740  000AD2  808C               	bsf	3980,0,c	;volatile
  2741  000AD4                     u956:
  2742                           
  2743                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  2744  000AD4  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2745  000AD8  0100               	movlb	0	; () banked
  2746  000ADA  90D8               	bcf	status,0,c
  2747  000ADC  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2748  000ADE  0100               	movlb	0	; () banked
  2749  000AE0  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2750  000AE2  508C               	movf	3980,w,c	;volatile
  2751  000AE4  0100               	movlb	0	; () banked
  2752  000AE6  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2753  000AE8  0BFD               	andlw	-3
  2754  000AEA  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2755  000AEC  6E8C               	movwf	3980,c	;volatile
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  2759  000AEE  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2760  000AF2  0100               	movlb	0	; () banked
  2761  000AF4  90D8               	bcf	status,0,c
  2762  000AF6  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2763  000AF8  0100               	movlb	0	; () banked
  2764  000AFA  90D8               	bcf	status,0,c
  2765  000AFC  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2766  000AFE  0100               	movlb	0	; () banked
  2767  000B00  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2768  000B02  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2769  000B04  508C               	movf	3980,w,c	;volatile
  2770  000B06  0100               	movlb	0	; () banked
  2771  000B08  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2772  000B0A  0BFB               	andlw	-5
  2773  000B0C  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2774  000B0E  6E8C               	movwf	3980,c	;volatile
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  2778  000B10  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2779  000B14  0100               	movlb	0	; () banked
  2780  000B16  90D8               	bcf	status,0,c
  2781  000B18  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2782  000B1A  0100               	movlb	0	; () banked
  2783  000B1C  90D8               	bcf	status,0,c
  2784  000B1E  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2785  000B20  0100               	movlb	0	; () banked
  2786  000B22  90D8               	bcf	status,0,c
  2787  000B24  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2788  000B26  0100               	movlb	0	; () banked
  2789  000B28  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2790  000B2A  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2791  000B2C  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2792  000B2E  508C               	movf	3980,w,c	;volatile
  2793  000B30  0100               	movlb	0	; () banked
  2794  000B32  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2795  000B34  0BF7               	andlw	-9
  2796  000B36  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2797  000B38  6E8C               	movwf	3980,c	;volatile
  2798                           
  2799                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2800  000B3A  0E03               	movlw	3
  2801  000B3C                     u1877:
  2802  000B3C  2EE8               	decfsz	wreg,f,c
  2803  000B3E  D7FE               	goto	u1877
  2804                           
  2805                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  2806  000B40  8A8C               	bsf	3980,5,c	;volatile
  2807                           
  2808                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2809  000B42  0E03               	movlw	3
  2810  000B44                     u1887:
  2811  000B44  2EE8               	decfsz	wreg,f,c
  2812  000B46  D7FE               	goto	u1887
  2813                           
  2814                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  2815  000B48  9A8C               	bcf	3980,5,c	;volatile
  2816                           
  2817                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2818  000B4A  0E51               	movlw	81
  2819  000B4C                     u1897:
  2820  000B4C  2EE8               	decfsz	wreg,f,c
  2821  000B4E  D7FE               	goto	u1897
  2822  000B50  D000               	nop2		;nop
  2823  000B52  0012               	return		;funcret
  2824  000B54                     __end_of_lcd_raw_send:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           prodh	equ	0xFF4
  2831                           prodl	equ	0xFF3
  2832                           postinc0	equ	0xFEE
  2833                           wreg	equ	0xFE8
  2834                           postdec1	equ	0xFE5
  2835                           fsr1l	equ	0xFE1
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _Set *****************
  2839 ;; Defined at:
  2840 ;;		line 333 in file "st_mch3_update_values_with_debounce_lib.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;		None               void
  2847 ;; Registers used:
  2848 ;;		None
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2854 ;;      Params:         0       0       0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    4
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text14
  2869  0016AA                     __ptext14:
  2870                           	opt stack 0
  2871  0016AA                     _Set:
  2872                           	opt stack 26
  2873                           
  2874                           ;st_mch3_update_values_with_debounce_lib.c: 335: OSCCONbits.IRCF2=1;
  2875                           
  2876                           ;incstack = 0
  2877  0016AA  8CD3               	bsf	4051,6,c	;volatile
  2878                           
  2879                           ;st_mch3_update_values_with_debounce_lib.c: 336: OSCCONbits.IRCF1=1;
  2880  0016AC  8AD3               	bsf	4051,5,c	;volatile
  2881                           
  2882                           ;st_mch3_update_values_with_debounce_lib.c: 337: OSCCONbits.IRCF0=1;
  2883  0016AE  88D3               	bsf	4051,4,c	;volatile
  2884                           
  2885                           ;st_mch3_update_values_with_debounce_lib.c: 338: OSCCONbits.SCS1=1;
  2886  0016B0  82D3               	bsf	4051,1,c	;volatile
  2887                           
  2888                           ;st_mch3_update_values_with_debounce_lib.c: 339: OSCCONbits.SCS0=0;
  2889  0016B2  90D3               	bcf	4051,0,c	;volatile
  2890  0016B4  0012               	return		;funcret
  2891  0016B6                     __end_of_Set:
  2892                           	opt stack 0
  2893                           tblptru	equ	0xFF8
  2894                           tblptrh	equ	0xFF7
  2895                           tblptrl	equ	0xFF6
  2896                           tablat	equ	0xFF5
  2897                           prodh	equ	0xFF4
  2898                           prodl	equ	0xFF3
  2899                           postinc0	equ	0xFEE
  2900                           wreg	equ	0xFE8
  2901                           postdec1	equ	0xFE5
  2902                           fsr1l	equ	0xFE1
  2903                           status	equ	0xFD8
  2904                           
  2905 ;; *************** function _Initial *****************
  2906 ;; Defined at:
  2907 ;;		line 271 in file "st_mch3_update_values_with_debounce_lib.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;		None               void
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2921 ;;      Params:         0       0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    5
  2928 ;; This function calls:
  2929 ;;		_OpenTimer0
  2930 ;;		_WriteTimer0
  2931 ;;		_delay_s
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text15
  2938  001120                     __ptext15:
  2939                           	opt stack 0
  2940  001120                     _Initial:
  2941                           	opt stack 25
  2942                           
  2943                           ;st_mch3_update_values_with_debounce_lib.c: 272: ADCON0 = 0x01;
  2944                           
  2945                           ;incstack = 0
  2946  001120  0E01               	movlw	1
  2947  001122  6EC2               	movwf	4034,c	;volatile
  2948                           
  2949                           ;st_mch3_update_values_with_debounce_lib.c: 273: ADCON1 = 0x0E;
  2950  001124  0E0E               	movlw	14
  2951  001126  6EC1               	movwf	4033,c	;volatile
  2952                           
  2953                           ;st_mch3_update_values_with_debounce_lib.c: 274: ADCON2 = 0x17;
  2954  001128  0E17               	movlw	23
  2955  00112A  6EC0               	movwf	4032,c	;volatile
  2956                           
  2957                           ;st_mch3_update_values_with_debounce_lib.c: 275: TRISA = 0x01;
  2958  00112C  0E01               	movlw	1
  2959  00112E  6E92               	movwf	3986,c	;volatile
  2960                           
  2961                           ;st_mch3_update_values_with_debounce_lib.c: 276: TRISB = 0xFF;
  2962  001130  6893               	setf	3987,c	;volatile
  2963                           
  2964                           ;st_mch3_update_values_with_debounce_lib.c: 277: TRISC = 0x00;
  2965  001132  0E00               	movlw	0
  2966  001134  6E94               	movwf	3988,c	;volatile
  2967                           
  2968                           ;st_mch3_update_values_with_debounce_lib.c: 278: TRISE = 0x00;
  2969  001136  0E00               	movlw	0
  2970  001138  6E96               	movwf	3990,c	;volatile
  2971                           
  2972                           ;st_mch3_update_values_with_debounce_lib.c: 279: TRISCbits.RC2=1;
  2973  00113A  8494               	bsf	3988,2,c	;volatile
  2974                           
  2975                           ;st_mch3_update_values_with_debounce_lib.c: 283: LATE = 0xff;
  2976  00113C  688D               	setf	3981,c	;volatile
  2977                           
  2978                           ;st_mch3_update_values_with_debounce_lib.c: 284: delay_s(3);
  2979  00113E  0E03               	movlw	3
  2980  001140  EC39  F00A         	call	_delay_s
  2981                           
  2982                           ;st_mch3_update_values_with_debounce_lib.c: 285: LATE = 0x00;
  2983  001144  0E00               	movlw	0
  2984  001146  6E8D               	movwf	3981,c	;volatile
  2985                           
  2986                           ;st_mch3_update_values_with_debounce_lib.c: 288: OpenTimer0( 0b11111111 & 0b10111111 & 0
      +                          b11011111 & 0b11111111);
  2987  001148  0E9F               	movlw	159
  2988  00114A  ECED  F00A         	call	_OpenTimer0
  2989                           
  2990                           ;st_mch3_update_values_with_debounce_lib.c: 289: WriteTimer0(45536);
  2991  00114E  0EB1               	movlw	177
  2992  001150  0100               	movlb	0	; () banked
  2993  001152  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  2994  001154  0EE0               	movlw	224
  2995  001156  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  2996  001158  EC43  F00B         	call	_WriteTimer0	;wreg free
  2997                           
  2998                           ;st_mch3_update_values_with_debounce_lib.c: 290: (INTCONbits.GIE = 1);
  2999  00115C  8EF2               	bsf	intcon,7,c	;volatile
  3000                           
  3001                           ;st_mch3_update_values_with_debounce_lib.c: 293: T2CONbits.TMR2ON=1;
  3002  00115E  84CA               	bsf	4042,2,c	;volatile
  3003                           
  3004                           ;st_mch3_update_values_with_debounce_lib.c: 294: T2CONbits.T2OUTPS3=0;
  3005  001160  9CCA               	bcf	4042,6,c	;volatile
  3006                           
  3007                           ;st_mch3_update_values_with_debounce_lib.c: 295: T2CONbits.T2OUTPS2=0;
  3008  001162  9ACA               	bcf	4042,5,c	;volatile
  3009                           
  3010                           ;st_mch3_update_values_with_debounce_lib.c: 296: T2CONbits.T2OUTPS1=0;
  3011  001164  98CA               	bcf	4042,4,c	;volatile
  3012                           
  3013                           ;st_mch3_update_values_with_debounce_lib.c: 297: T2CONbits.T2OUTPS0=0;
  3014  001166  96CA               	bcf	4042,3,c	;volatile
  3015                           
  3016                           ;st_mch3_update_values_with_debounce_lib.c: 299: CCP2CONbits.CCP2M3=1;
  3017  001168  86BA               	bsf	4026,3,c	;volatile
  3018                           
  3019                           ;st_mch3_update_values_with_debounce_lib.c: 300: CCP2CONbits.CCP2M2=1;
  3020  00116A  84BA               	bsf	4026,2,c	;volatile
  3021                           
  3022                           ;st_mch3_update_values_with_debounce_lib.c: 301: CCP2CONbits.CCP2M1=0;
  3023  00116C  92BA               	bcf	4026,1,c	;volatile
  3024                           
  3025                           ;st_mch3_update_values_with_debounce_lib.c: 302: CCP2CONbits.CCP2M0=1;
  3026  00116E  80BA               	bsf	4026,0,c	;volatile
  3027                           
  3028                           ;st_mch3_update_values_with_debounce_lib.c: 304: PR2=100;
  3029  001170  0E64               	movlw	100
  3030  001172  6ECB               	movwf	4043,c	;volatile
  3031                           
  3032                           ;st_mch3_update_values_with_debounce_lib.c: 307: CCP1CONbits.CCP1M3=0;
  3033  001174  96BD               	bcf	4029,3,c	;volatile
  3034                           
  3035                           ;st_mch3_update_values_with_debounce_lib.c: 308: CCP1CONbits.CCP1M2=1;
  3036  001176  84BD               	bsf	4029,2,c	;volatile
  3037                           
  3038                           ;st_mch3_update_values_with_debounce_lib.c: 309: CCP1CONbits.CCP1M1=0;
  3039  001178  92BD               	bcf	4029,1,c	;volatile
  3040                           
  3041                           ;st_mch3_update_values_with_debounce_lib.c: 310: CCP1CONbits.CCP1M0=1;
  3042  00117A  80BD               	bsf	4029,0,c	;volatile
  3043                           
  3044                           ;st_mch3_update_values_with_debounce_lib.c: 311: PIE1bits.CCP1IE=1;
  3045  00117C  849D               	bsf	3997,2,c	;volatile
  3046                           
  3047                           ;st_mch3_update_values_with_debounce_lib.c: 315: T1CONbits.RD16=1;
  3048  00117E  8ECD               	bsf	4045,7,c	;volatile
  3049                           
  3050                           ;st_mch3_update_values_with_debounce_lib.c: 316: T1CONbits.TMR1CS=0;
  3051  001180  92CD               	bcf	4045,1,c	;volatile
  3052                           
  3053                           ;st_mch3_update_values_with_debounce_lib.c: 317: T1CONbits.TMR1ON=1;
  3054  001182  80CD               	bsf	4045,0,c	;volatile
  3055                           
  3056                           ;st_mch3_update_values_with_debounce_lib.c: 318: T1CONbits.T1CKPS1=1;
  3057  001184  8ACD               	bsf	4045,5,c	;volatile
  3058                           
  3059                           ;st_mch3_update_values_with_debounce_lib.c: 319: T1CONbits.T1CKPS0=1;
  3060  001186  88CD               	bsf	4045,4,c	;volatile
  3061                           
  3062                           ;st_mch3_update_values_with_debounce_lib.c: 321: control1.kp=0.4;
  3063  001188  0ECD               	movlw	205
  3064  00118A  6E4D               	movwf	_control1,c
  3065  00118C  0ECC               	movlw	204
  3066  00118E  6E4E               	movwf	_control1+1,c
  3067  001190  0E3E               	movlw	62
  3068  001192  6E4F               	movwf	_control1+2,c
  3069                           
  3070                           ;st_mch3_update_values_with_debounce_lib.c: 322: control1.ki=0.3;
  3071  001194  0E9A               	movlw	154
  3072  001196  6E50               	movwf	_control1+3,c
  3073  001198  0E99               	movlw	153
  3074  00119A  6E51               	movwf	_control1+4,c
  3075  00119C  0E3E               	movlw	62
  3076  00119E  6E52               	movwf	_control1+5,c
  3077                           
  3078                           ;st_mch3_update_values_with_debounce_lib.c: 323: control1.kpki=0.7;
  3079  0011A0  0E33               	movlw	51
  3080  0011A2  6E53               	movwf	_control1+6,c
  3081  0011A4  0E33               	movlw	51
  3082  0011A6  6E54               	movwf	_control1+7,c
  3083  0011A8  0E3F               	movlw	63
  3084  0011AA  6E55               	movwf	_control1+8,c
  3085                           
  3086                           ;st_mch3_update_values_with_debounce_lib.c: 324: control1.en=0;
  3087  0011AC  0E00               	movlw	0
  3088  0011AE  6E56               	movwf	_control1+9,c
  3089                           
  3090                           ;st_mch3_update_values_with_debounce_lib.c: 325: control1.en_1=0;
  3091  0011B0  0E00               	movlw	0
  3092  0011B2  6E57               	movwf	_control1+10,c
  3093                           
  3094                           ;st_mch3_update_values_with_debounce_lib.c: 326: control1.un=30;
  3095  0011B4  0E1E               	movlw	30
  3096  0011B6  6E58               	movwf	_control1+11,c
  3097                           
  3098                           ;st_mch3_update_values_with_debounce_lib.c: 327: control1.un_1=30;
  3099  0011B8  0E1E               	movlw	30
  3100  0011BA  6E59               	movwf	_control1+12,c
  3101                           
  3102                           ;st_mch3_update_values_with_debounce_lib.c: 329: Motor1.Actual=0;
  3103  0011BC  0E00               	movlw	0
  3104  0011BE  0100               	movlb	0	; () banked
  3105  0011C0  6F95               	movwf	(_Motor1+1)& (0+255),b
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;st_mch3_update_values_with_debounce_lib.c: 330: Motor1.Desired=20;
  3109  0011C2  0E14               	movlw	20
  3110  0011C4  0100               	movlb	0	; () banked
  3111  0011C6  6F94               	movwf	_Motor1& (0+255),b
  3112                           
  3113                           ; BSR set to: 0
  3114  0011C8  0012               	return		;funcret
  3115  0011CA                     __end_of_Initial:
  3116                           	opt stack 0
  3117                           tblptru	equ	0xFF8
  3118                           tblptrh	equ	0xFF7
  3119                           tblptrl	equ	0xFF6
  3120                           tablat	equ	0xFF5
  3121                           prodh	equ	0xFF4
  3122                           prodl	equ	0xFF3
  3123                           intcon	equ	0xFF2
  3124                           postinc0	equ	0xFEE
  3125                           wreg	equ	0xFE8
  3126                           postdec1	equ	0xFE5
  3127                           fsr1l	equ	0xFE1
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _delay_s *****************
  3131 ;; Defined at:
  3132 ;;		line 361 in file "st_mch3_update_values_with_debounce_lib.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  secs            1    wreg     unsigned char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  secs            1    1[BANK0 ] unsigned char 
  3137 ;;  j               1    3[BANK0 ] unsigned char 
  3138 ;;  i               1    2[BANK0 ] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;		None               void
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3148 ;;      Params:         0       0       0       0       0       0       0
  3149 ;;      Locals:         0       3       0       0       0       0       0
  3150 ;;      Temps:          0       1       0       0       0       0       0
  3151 ;;      Totals:         0       4       0       0       0       0       0
  3152 ;;Total ram usage:        4 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    4
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_main
  3159 ;;		_Initial
  3160 ;;		_flash
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text16
  3165  001472                     __ptext16:
  3166                           	opt stack 0
  3167  001472                     _delay_s:
  3168                           	opt stack 25
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;incstack = 0
  3172                           ;delay_s@secs stored from wreg
  3173  001472  0100               	movlb	0	; () banked
  3174  001474  6F81               	movwf	delay_s@secs& (0+255),b
  3175                           
  3176                           ;st_mch3_update_values_with_debounce_lib.c: 363: num=25;
  3177  001476  0E19               	movlw	25
  3178  001478  0100               	movlb	0	; () banked
  3179  00147A  6F9C               	movwf	_num& (0+255),b
  3180                           
  3181                           ;st_mch3_update_values_with_debounce_lib.c: 365: unsigned char i,j;
  3182                           ;st_mch3_update_values_with_debounce_lib.c: 366: for(j=0;j<secs;j++)
  3183  00147C  0E00               	movlw	0
  3184  00147E  0100               	movlb	0	; () banked
  3185  001480  6F83               	movwf	delay_s@j& (0+255),b
  3186  001482  D017               	goto	l1686
  3187  001484                     l1676:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;st_mch3_update_values_with_debounce_lib.c: 367: {
  3191                           ;st_mch3_update_values_with_debounce_lib.c: 368: for (i=0;i<num;i++)
  3192  001484  0E00               	movlw	0
  3193  001486  0100               	movlb	0	; () banked
  3194  001488  6F82               	movwf	delay_s@i& (0+255),b
  3195  00148A  D00B               	goto	l1682
  3196  00148C                     l1678:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;st_mch3_update_values_with_debounce_lib.c: 369: _delay((unsigned long)((40)*(8000000/40
      +                          00.0)));
  3200  00148C  0E68               	movlw	104
  3201  00148E  0100               	movlb	0	; () banked
  3202  001490  6F80               	movwf	??_delay_s& (0+255),b
  3203  001492  0EE4               	movlw	228
  3204  001494                     u1907:
  3205  001494  2EE8               	decfsz	wreg,f,c
  3206  001496  D7FE               	goto	u1907
  3207  001498  2F80               	decfsz	??_delay_s& (0+255),f,b
  3208  00149A  D7FC               	goto	u1907
  3209  00149C  D000               	nop2	
  3210  00149E  0100               	movlb	0	; () banked
  3211  0014A0  2B82               	incf	delay_s@i& (0+255),f,b
  3212  0014A2                     l1682:
  3213                           
  3214                           ; BSR set to: 0
  3215  0014A2  0100               	movlb	0	; () banked
  3216  0014A4  519C               	movf	_num& (0+255),w,b
  3217  0014A6  0100               	movlb	0	; () banked
  3218  0014A8  5D82               	subwf	delay_s@i& (0+255),w,b
  3219  0014AA  A0D8               	btfss	status,0,c
  3220  0014AC  D7EF               	goto	l1678
  3221                           
  3222                           ; BSR set to: 0
  3223                           
  3224                           ; BSR set to: 0
  3225  0014AE  0100               	movlb	0	; () banked
  3226  0014B0  2B83               	incf	delay_s@j& (0+255),f,b
  3227  0014B2                     l1686:
  3228                           
  3229                           ; BSR set to: 0
  3230  0014B2  0100               	movlb	0	; () banked
  3231  0014B4  5181               	movf	delay_s@secs& (0+255),w,b
  3232  0014B6  0100               	movlb	0	; () banked
  3233  0014B8  5D83               	subwf	delay_s@j& (0+255),w,b
  3234  0014BA  B0D8               	btfsc	status,0,c
  3235  0014BC  0012               	return	
  3236  0014BE  D7E2               	goto	l1676
  3237  0014C0                     __end_of_delay_s:
  3238                           	opt stack 0
  3239                           tblptru	equ	0xFF8
  3240                           tblptrh	equ	0xFF7
  3241                           tblptrl	equ	0xFF6
  3242                           tablat	equ	0xFF5
  3243                           prodh	equ	0xFF4
  3244                           prodl	equ	0xFF3
  3245                           intcon	equ	0xFF2
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           postdec1	equ	0xFE5
  3249                           fsr1l	equ	0xFE1
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _WriteTimer0 *****************
  3253 ;; Defined at:
  3254 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  timer0          2    0[BANK0 ] unsigned int 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  timer           2    2[BANK0 ] struct Timers
  3259 ;; Return value:  Size  Location     Type
  3260 ;;		None               void
  3261 ;; Registers used:
  3262 ;;		None
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3268 ;;      Params:         0       2       0       0       0       0       0
  3269 ;;      Locals:         0       2       0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0
  3271 ;;      Totals:         0       4       0       0       0       0       0
  3272 ;;Total ram usage:        4 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    4
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_Initial
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text17
  3283  001686                     __ptext17:
  3284                           	opt stack 0
  3285  001686                     _WriteTimer0:
  3286                           	opt stack 25
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;incstack = 0
  3290  001686  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  3291  00168A  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  3292  00168E  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  3293  001692  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  3294  001696  0012               	return		;funcret
  3295  001698                     __end_of_WriteTimer0:
  3296                           	opt stack 0
  3297                           tblptru	equ	0xFF8
  3298                           tblptrh	equ	0xFF7
  3299                           tblptrl	equ	0xFF6
  3300                           tablat	equ	0xFF5
  3301                           prodh	equ	0xFF4
  3302                           prodl	equ	0xFF3
  3303                           intcon	equ	0xFF2
  3304                           postinc0	equ	0xFEE
  3305                           wreg	equ	0xFE8
  3306                           postdec1	equ	0xFE5
  3307                           fsr1l	equ	0xFE1
  3308                           status	equ	0xFD8
  3309                           
  3310 ;; *************** function _OpenTimer0 *****************
  3311 ;; Defined at:
  3312 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0open.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  config          1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  config          1    0[BANK0 ] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3326 ;;      Params:         0       0       0       0       0       0       0
  3327 ;;      Locals:         0       1       0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0
  3329 ;;      Totals:         0       1       0       0       0       0       0
  3330 ;;Total ram usage:        1 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    4
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_Initial
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text18
  3341  0015DA                     __ptext18:
  3342                           	opt stack 0
  3343  0015DA                     _OpenTimer0:
  3344                           	opt stack 25
  3345                           
  3346                           ;incstack = 0
  3347                           ;OpenTimer0@config stored from wreg
  3348  0015DA  0100               	movlb	0	; () banked
  3349  0015DC  6F80               	movwf	OpenTimer0@config& (0+255),b
  3350  0015DE  0100               	movlb	0	; () banked
  3351  0015E0  5180               	movf	OpenTimer0@config& (0+255),w,b
  3352  0015E2  0B7F               	andlw	127
  3353  0015E4  6ED5               	movwf	4053,c	;volatile
  3354                           
  3355                           ; BSR set to: 0
  3356  0015E6  0E00               	movlw	0
  3357  0015E8  6ED7               	movwf	4055,c	;volatile
  3358                           
  3359                           ; BSR set to: 0
  3360  0015EA  0E00               	movlw	0
  3361  0015EC  6ED6               	movwf	4054,c	;volatile
  3362                           
  3363                           ; BSR set to: 0
  3364  0015EE  94F2               	bcf	intcon,2,c	;volatile
  3365                           
  3366                           ; BSR set to: 0
  3367  0015F0  0100               	movlb	0	; () banked
  3368  0015F2  AF80               	btfss	OpenTimer0@config& (0+255),7,b
  3369  0015F4  D002               	goto	l249
  3370                           
  3371                           ; BSR set to: 0
  3372  0015F6  8AF2               	bsf	intcon,5,c	;volatile
  3373  0015F8  D001               	goto	l250
  3374  0015FA                     l249:
  3375                           
  3376                           ; BSR set to: 0
  3377  0015FA  9AF2               	bcf	intcon,5,c	;volatile
  3378  0015FC                     l250:
  3379                           
  3380                           ; BSR set to: 0
  3381  0015FC  8ED5               	bsf	4053,7,c	;volatile
  3382                           
  3383                           ; BSR set to: 0
  3384  0015FE  0012               	return		;funcret
  3385  001600                     __end_of_OpenTimer0:
  3386                           	opt stack 0
  3387                           tblptru	equ	0xFF8
  3388                           tblptrh	equ	0xFF7
  3389                           tblptrl	equ	0xFF6
  3390                           tablat	equ	0xFF5
  3391                           prodh	equ	0xFF4
  3392                           prodl	equ	0xFF3
  3393                           intcon	equ	0xFF2
  3394                           postinc0	equ	0xFEE
  3395                           wreg	equ	0xFE8
  3396                           postdec1	equ	0xFE5
  3397                           fsr1l	equ	0xFE1
  3398                           status	equ	0xFD8
  3399                           
  3400 ;; *************** function _myIsr *****************
  3401 ;; Defined at:
  3402 ;;		line 94 in file "st_mch3_update_values_with_debounce_lib.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;		None               void
  3409 ;; Registers used:
  3410 ;;		wreg, status,2, status,0, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3416 ;;      Params:         0       0       0       0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0
  3418 ;;      Temps:         15       0       0       0       0       0       0
  3419 ;;      Totals:        15       0       0       0       0       0       0
  3420 ;;Total ram usage:       15 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    3
  3423 ;; This function calls:
  3424 ;;		_Controller_Func
  3425 ;;		_Find_Button_Press
  3426 ;;		i2_WriteTimer0
  3427 ;; This function is called by:
  3428 ;;		Interrupt level 2
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	intcode
  3433  000008                     __pintcode:
  3434                           	opt stack 0
  3435  000008                     _myIsr:
  3436                           	opt stack 23
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;incstack = 0
  3440  000008  8261               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3441  00000A  CFFA F03F          	movff	pclath,??_myIsr+1
  3442  00000E  CFFB F040          	movff	pclatu,??_myIsr+2
  3443  000012  ED9E  F006         	call	int_func,f	;refresh shadow registers
  3444                           pclatu	equ	0xFFB
  3445                           pclath	equ	0xFFA
  3446                           tblptru	equ	0xFF8
  3447                           tblptrh	equ	0xFF7
  3448                           tblptrl	equ	0xFF6
  3449                           tablat	equ	0xFF5
  3450                           prodh	equ	0xFF4
  3451                           prodl	equ	0xFF3
  3452                           intcon	equ	0xFF2
  3453                           postinc0	equ	0xFEE
  3454                           wreg	equ	0xFE8
  3455                           postdec1	equ	0xFE5
  3456                           fsr1l	equ	0xFE1
  3457                           status	equ	0xFD8
  3458                           
  3459                           	psect	intcode_body
  3460  000D3C                     __pintcode_body:
  3461                           	opt stack 23
  3462  000D3C                     int_func:
  3463                           	opt stack 23
  3464  000D3C  0006               	pop		; remove dummy address from shadow register refresh
  3465  000D3E  CFE9 F041          	movff	fsr0l,??_myIsr+3
  3466  000D42  CFEA F042          	movff	fsr0h,??_myIsr+4
  3467  000D46  CFE1 F043          	movff	fsr1l,??_myIsr+5
  3468  000D4A  CFE2 F044          	movff	fsr1h,??_myIsr+6
  3469  000D4E  CFD9 F045          	movff	fsr2l,??_myIsr+7
  3470  000D52  CFDA F046          	movff	fsr2h,??_myIsr+8
  3471  000D56  CFF3 F047          	movff	prodl,??_myIsr+9
  3472  000D5A  CFF4 F048          	movff	prodh,??_myIsr+10
  3473  000D5E  CFF6 F049          	movff	tblptrl,??_myIsr+11
  3474  000D62  CFF7 F04A          	movff	tblptrh,??_myIsr+12
  3475  000D66  CFF8 F04B          	movff	tblptru,??_myIsr+13
  3476  000D6A  CFF5 F04C          	movff	tablat,??_myIsr+14
  3477                           
  3478                           ;st_mch3_update_values_with_debounce_lib.c: 98: if(INTCONbits.TMR0IE && INTCONbits.TMR0I
      +                          F) {
  3479  000D6E  BAF2               	btfsc	intcon,5,c	;volatile
  3480  000D70  A4F2               	btfss	intcon,2,c	;volatile
  3481  000D72  D03B               	goto	i2l184
  3482                           
  3483                           ;st_mch3_update_values_with_debounce_lib.c: 100: Find_Button_Press();
  3484  000D74  ECC7  F009         	call	_Find_Button_Press	;wreg free
  3485                           
  3486                           ;st_mch3_update_values_with_debounce_lib.c: 101: WriteTimer0(45536);
  3487  000D78  0EB1               	movlw	177
  3488  000D7A  6E02               	movwf	i2WriteTimer0@timer0+1,c
  3489  000D7C  0EE0               	movlw	224
  3490  000D7E  6E01               	movwf	i2WriteTimer0@timer0,c
  3491  000D80  EC4C  F00B         	call	i2_WriteTimer0	;wreg free
  3492                           
  3493                           ;st_mch3_update_values_with_debounce_lib.c: 102: INTCONbits.TMR0IF = 0;
  3494  000D84  94F2               	bcf	intcon,2,c	;volatile
  3495                           
  3496                           ;st_mch3_update_values_with_debounce_lib.c: 105: count_test++;
  3497  000D86  2A5F               	incf	_count_test,f,c
  3498                           
  3499                           ;st_mch3_update_values_with_debounce_lib.c: 106: if(count_test == 100){
  3500  000D88  0E64               	movlw	100
  3501  000D8A  185F               	xorwf	_count_test,w,c
  3502  000D8C  A4D8               	btfss	status,2,c
  3503  000D8E  D00F               	goto	i2l2174
  3504                           
  3505                           ;st_mch3_update_values_with_debounce_lib.c: 107: PORTEbits.RE1 = ~PORTEbits.RE1;
  3506  000D90  A284               	btfss	3972,1,c	;volatile
  3507  000D92  D002               	goto	i2u170_40
  3508  000D94  0E01               	movlw	1
  3509  000D96  D001               	goto	i2u170_46
  3510  000D98                     i2u170_40:
  3511  000D98  0E00               	movlw	0
  3512  000D9A                     i2u170_46:
  3513  000D9A  0AFF               	xorlw	255
  3514  000D9C  6E3E               	movwf	??_myIsr& (0+255),c
  3515  000D9E  463E               	rlncf	??_myIsr,f,c
  3516  000DA0  5084               	movf	3972,w,c	;volatile
  3517  000DA2  183E               	xorwf	??_myIsr,w,c
  3518  000DA4  0BFD               	andlw	-3
  3519  000DA6  183E               	xorwf	??_myIsr,w,c
  3520  000DA8  6E84               	movwf	3972,c	;volatile
  3521                           
  3522                           ;st_mch3_update_values_with_debounce_lib.c: 108: count_test = 0;
  3523  000DAA  0E00               	movlw	0
  3524  000DAC  6E5F               	movwf	_count_test,c
  3525  000DAE                     i2l2174:
  3526                           
  3527                           ;st_mch3_update_values_with_debounce_lib.c: 109: }
  3528                           ;st_mch3_update_values_with_debounce_lib.c: 111: counter++;
  3529  000DAE  2A60               	incf	_counter,f,c
  3530                           
  3531                           ;st_mch3_update_values_with_debounce_lib.c: 112: if(counter >10)
  3532  000DB0  0E0A               	movlw	10
  3533  000DB2  6460               	cpfsgt	_counter,c
  3534  000DB4  D009               	goto	i2l2186
  3535                           
  3536                           ;st_mch3_update_values_with_debounce_lib.c: 113: {
  3537                           ;st_mch3_update_values_with_debounce_lib.c: 114: Controller_Func();
  3538  000DB6  EC13  F007         	call	_Controller_Func	;wreg free
  3539                           
  3540                           ;st_mch3_update_values_with_debounce_lib.c: 115: CCPR2L= control1.un;
  3541  000DBA  C058  FFBB         	movff	_control1+11,4027	;volatile
  3542                           
  3543                           ;st_mch3_update_values_with_debounce_lib.c: 116: TICK_E= 1;
  3544  000DBE  0E01               	movlw	1
  3545  000DC0  0100               	movlb	0	; () banked
  3546  000DC2  6F97               	movwf	_TICK_E& (0+255),b
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;st_mch3_update_values_with_debounce_lib.c: 117: counter=0;
  3550  000DC4  0E00               	movlw	0
  3551  000DC6  6E60               	movwf	_counter,c
  3552  000DC8                     i2l2186:
  3553                           
  3554                           ;st_mch3_update_values_with_debounce_lib.c: 118: }
  3555                           ;st_mch3_update_values_with_debounce_lib.c: 120: if(PIR1bits.CCP1IF && PIE1bits.CCP1IE)
  3556  000DC8  B49E               	btfsc	3998,2,c	;volatile
  3557  000DCA  A49D               	btfss	3997,2,c	;volatile
  3558  000DCC  D00E               	goto	i2l184
  3559                           
  3560                           ;st_mch3_update_values_with_debounce_lib.c: 121: {
  3561                           ;st_mch3_update_values_with_debounce_lib.c: 123: PIR1bits.CCP1IF=0;
  3562  000DCE  949E               	bcf	3998,2,c	;volatile
  3563                           
  3564                           ;st_mch3_update_values_with_debounce_lib.c: 124: captured=(CCPR1H<< 8);
  3565  000DD0  50BF               	movf	4031,w,c	;volatile
  3566  000DD2  6E5B               	movwf	_captured+1,c
  3567  000DD4  6A5A               	clrf	_captured,c
  3568                           
  3569                           ;st_mch3_update_values_with_debounce_lib.c: 125: captured= captured+CCPR1L;
  3570  000DD6  50BE               	movf	4030,w,c	;volatile
  3571  000DD8  245A               	addwf	_captured,w,c
  3572  000DDA  6E5A               	movwf	_captured,c
  3573  000DDC  0E00               	movlw	0
  3574  000DDE  205B               	addwfc	_captured+1,w,c
  3575  000DE0  6E5B               	movwf	_captured+1,c
  3576                           
  3577                           ;st_mch3_update_values_with_debounce_lib.c: 127: TMR1H=0;
  3578  000DE2  0E00               	movlw	0
  3579  000DE4  6ECF               	movwf	4047,c	;volatile
  3580                           
  3581                           ;st_mch3_update_values_with_debounce_lib.c: 128: TMR1L=0;
  3582  000DE6  0E00               	movlw	0
  3583  000DE8  6ECE               	movwf	4046,c	;volatile
  3584  000DEA                     i2l184:
  3585  000DEA  C04C  FFF5         	movff	??_myIsr+14,tablat
  3586  000DEE  C04B  FFF8         	movff	??_myIsr+13,tblptru
  3587  000DF2  C04A  FFF7         	movff	??_myIsr+12,tblptrh
  3588  000DF6  C049  FFF6         	movff	??_myIsr+11,tblptrl
  3589  000DFA  C048  FFF4         	movff	??_myIsr+10,prodh
  3590  000DFE  C047  FFF3         	movff	??_myIsr+9,prodl
  3591  000E02  C046  FFDA         	movff	??_myIsr+8,fsr2h
  3592  000E06  C045  FFD9         	movff	??_myIsr+7,fsr2l
  3593  000E0A  C044  FFE2         	movff	??_myIsr+6,fsr1h
  3594  000E0E  C043  FFE1         	movff	??_myIsr+5,fsr1l
  3595  000E12  C042  FFEA         	movff	??_myIsr+4,fsr0h
  3596  000E16  C041  FFE9         	movff	??_myIsr+3,fsr0l
  3597  000E1A  C040  FFFB         	movff	??_myIsr+2,pclatu
  3598  000E1E  C03F  FFFA         	movff	??_myIsr+1,pclath
  3599  000E22  9261               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3600  000E24  0011               	retfie		f
  3601  000E26                     __end_of_myIsr:
  3602                           	opt stack 0
  3603                           pclatu	equ	0xFFB
  3604                           pclath	equ	0xFFA
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           intcon	equ	0xFF2
  3612                           postinc0	equ	0xFEE
  3613                           fsr0h	equ	0xFEA
  3614                           fsr0l	equ	0xFE9
  3615                           wreg	equ	0xFE8
  3616                           postdec1	equ	0xFE5
  3617                           fsr1h	equ	0xFE2
  3618                           fsr1l	equ	0xFE1
  3619                           fsr2h	equ	0xFDA
  3620                           fsr2l	equ	0xFD9
  3621                           status	equ	0xFD8
  3622                           
  3623 ;; *************** function i2_WriteTimer0 *****************
  3624 ;; Defined at:
  3625 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  timer0          2    0[COMRAM] unsigned int 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  3630 ;; Return value:  Size  Location     Type
  3631 ;;		None               void
  3632 ;; Registers used:
  3633 ;;		None
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3639 ;;      Params:         2       0       0       0       0       0       0
  3640 ;;      Locals:         2       0       0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0
  3642 ;;      Totals:         4       0       0       0       0       0       0
  3643 ;;Total ram usage:        4 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_myIsr
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text20
  3653  001698                     __ptext20:
  3654                           	opt stack 0
  3655  001698                     i2_WriteTimer0:
  3656                           	opt stack 25
  3657                           
  3658                           ;incstack = 0
  3659  001698  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  3660  00169C  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  3661  0016A0  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  3662  0016A4  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  3663  0016A8  0012               	return		;funcret
  3664  0016AA                     __end_ofi2_WriteTimer0:
  3665                           	opt stack 0
  3666                           pclatu	equ	0xFFB
  3667                           pclath	equ	0xFFA
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           prodh	equ	0xFF4
  3673                           prodl	equ	0xFF3
  3674                           intcon	equ	0xFF2
  3675                           postinc0	equ	0xFEE
  3676                           fsr0h	equ	0xFEA
  3677                           fsr0l	equ	0xFE9
  3678                           wreg	equ	0xFE8
  3679                           postdec1	equ	0xFE5
  3680                           fsr1h	equ	0xFE2
  3681                           fsr1l	equ	0xFE1
  3682                           fsr2h	equ	0xFDA
  3683                           fsr2l	equ	0xFD9
  3684                           status	equ	0xFD8
  3685                           
  3686 ;; *************** function _Find_Button_Press *****************
  3687 ;; Defined at:
  3688 ;;		line 36 in file "../../Buttons_Debounce_State_Mch/Buttons_Debounce.X/Buttons_Debounce.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;		None               void
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3702 ;;      Params:         0       0       0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0
  3705 ;;      Totals:         0       0       0       0       0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_myIsr
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text21
  3716  00138E                     __ptext21:
  3717                           	opt stack 0
  3718  00138E                     _Find_Button_Press:
  3719                           	opt stack 25
  3720                           
  3721                           ;Buttons_Debounce.c: 38: static states Button_State=Waiting;
  3722                           ;Buttons_Debounce.c: 39: static unsigned char Button_Count=0;
  3723                           ;Buttons_Debounce.c: 40: static Bit_Mask Temp_Press;
  3724                           ;Buttons_Debounce.c: 44: switch (Button_State){
  3725                           
  3726                           ;incstack = 0
  3727  00138E  D031               	goto	i2l1990
  3728  001390                     i2l1966:
  3729                           
  3730                           ;Buttons_Debounce.c: 46: if(PORTB)
  3731  001390  5081               	movf	3969,w,c	;volatile
  3732  001392  B4D8               	btfsc	status,2,c
  3733  001394  0012               	return	
  3734                           
  3735                           ;Buttons_Debounce.c: 47: {
  3736                           ;Buttons_Debounce.c: 48: Button_State = Detected;
  3737  001396  0E01               	movlw	1
  3738  001398  6E5D               	movwf	Find_Button_Press@Button_State,c
  3739                           
  3740                           ;Buttons_Debounce.c: 49: Button_Count = 0;
  3741  00139A  0E00               	movlw	0
  3742  00139C  6E5C               	movwf	Find_Button_Press@Button_Count,c
  3743                           
  3744                           ;Buttons_Debounce.c: 51: Temp_Press.Full=PORTB;
  3745  00139E  CF81 F05E          	movff	3969,Find_Button_Press@Temp_Press	;volatile
  3746                           
  3747                           ;Buttons_Debounce.c: 52: }
  3748                           ;Buttons_Debounce.c: 53: break;
  3749  0013A2  0012               	return	
  3750  0013A4                     i2l1972:
  3751                           
  3752                           ;Buttons_Debounce.c: 55: if (Temp_Press.Full == PORTB)
  3753  0013A4  5081               	movf	3969,w,c	;volatile
  3754  0013A6  185E               	xorwf	Find_Button_Press@Temp_Press,w,c
  3755  0013A8  A4D8               	btfss	status,2,c
  3756  0013AA  D007               	goto	i2l1980
  3757                           
  3758                           ;Buttons_Debounce.c: 56: {
  3759                           ;Buttons_Debounce.c: 57: ++Button_Count;
  3760  0013AC  2A5C               	incf	Find_Button_Press@Button_Count,f,c
  3761                           
  3762                           ;Buttons_Debounce.c: 58: if (Button_Count > 10)
  3763  0013AE  0E0A               	movlw	10
  3764  0013B0  645C               	cpfsgt	Find_Button_Press@Button_Count,c
  3765  0013B2  0012               	return	
  3766                           
  3767                           ;Buttons_Debounce.c: 59: {
  3768                           ;Buttons_Debounce.c: 60: Button_State = WaitForRelease;
  3769  0013B4  0E02               	movlw	2
  3770  0013B6  6E5D               	movwf	Find_Button_Press@Button_State,c
  3771                           
  3772                           ;Buttons_Debounce.c: 61: }
  3773                           ;Buttons_Debounce.c: 62: }
  3774  0013B8  0012               	return	
  3775  0013BA                     i2l1980:
  3776                           
  3777                           ;Buttons_Debounce.c: 63: else
  3778                           ;Buttons_Debounce.c: 64: {
  3779                           ;Buttons_Debounce.c: 65: Button_State = Waiting;
  3780  0013BA  0E00               	movlw	0
  3781  0013BC  6E5D               	movwf	Find_Button_Press@Button_State,c
  3782                           
  3783                           ;Buttons_Debounce.c: 66: }
  3784                           ;Buttons_Debounce.c: 67: break;
  3785  0013BE  0012               	return	
  3786  0013C0                     i2l1982:
  3787                           
  3788                           ;Buttons_Debounce.c: 69: if (!PORTB)
  3789  0013C0  5081               	movf	3969,w,c	;volatile
  3790  0013C2  A4D8               	btfss	status,2,c
  3791  0013C4  0012               	return	
  3792                           
  3793                           ;Buttons_Debounce.c: 70: {
  3794                           ;Buttons_Debounce.c: 71: Button_State = Update;
  3795  0013C6  0E03               	movlw	3
  3796  0013C8  6E5D               	movwf	Find_Button_Press@Button_State,c
  3797                           
  3798                           ;Buttons_Debounce.c: 72: }
  3799                           ;Buttons_Debounce.c: 73: break;
  3800  0013CA  0012               	return	
  3801  0013CC                     i2l23:
  3802                           
  3803                           ;Buttons_Debounce.c: 75: {
  3804                           ;Buttons_Debounce.c: 76: Button_Press = Temp_Press;
  3805  0013CC  C05E  F096         	movff	Find_Button_Press@Temp_Press,_Button_Press
  3806                           
  3807                           ;Buttons_Debounce.c: 77: Button_State = Waiting;
  3808  0013D0  0E00               	movlw	0
  3809  0013D2  6E5D               	movwf	Find_Button_Press@Button_State,c
  3810                           
  3811                           ;Buttons_Debounce.c: 78: Button_Count = 0;
  3812  0013D4  0E00               	movlw	0
  3813  0013D6  6E5C               	movwf	Find_Button_Press@Button_Count,c
  3814                           
  3815                           ;Buttons_Debounce.c: 79: Temp_Press.Full=0;
  3816  0013D8  0E00               	movlw	0
  3817  0013DA  6E5E               	movwf	Find_Button_Press@Temp_Press,c
  3818                           
  3819                           ;Buttons_Debounce.c: 80: }
  3820                           ;Buttons_Debounce.c: 81: break;
  3821  0013DC  0012               	return	
  3822  0013DE                     i2l1988:
  3823                           
  3824                           ;Buttons_Debounce.c: 83: {
  3825                           ;Buttons_Debounce.c: 84: Button_State = Waiting;
  3826  0013DE  0E00               	movlw	0
  3827  0013E0  6E5D               	movwf	Find_Button_Press@Button_State,c
  3828                           
  3829                           ;Buttons_Debounce.c: 85: Button_Count = 0;
  3830  0013E2  0E00               	movlw	0
  3831  0013E4  6E5C               	movwf	Find_Button_Press@Button_Count,c
  3832                           
  3833                           ;Buttons_Debounce.c: 86: Temp_Press.Full=0;
  3834  0013E6  0E00               	movlw	0
  3835  0013E8  6E5E               	movwf	Find_Button_Press@Temp_Press,c
  3836                           
  3837                           ;Buttons_Debounce.c: 87: Button_Press.Full=0;
  3838  0013EA  0E00               	movlw	0
  3839  0013EC  0100               	movlb	0	; () banked
  3840  0013EE  6F96               	movwf	_Button_Press& (0+255),b
  3841                           
  3842                           ;Buttons_Debounce.c: 88: }
  3843                           ;Buttons_Debounce.c: 89: }
  3844  0013F0  0012               	return	
  3845  0013F2                     i2l1990:
  3846  0013F2  505D               	movf	Find_Button_Press@Button_State,w,c
  3847                           
  3848                           ; Switch size 1, requested type "space"
  3849                           ; Number of cases is 4, Range of values is 0 to 3
  3850                           ; switch strategies available:
  3851                           ; Name         Instructions Cycles
  3852                           ; simple_byte           13     7 (average)
  3853                           ;	Chosen strategy is simple_byte
  3854  0013F4  0A00               	xorlw	0	; case 0
  3855  0013F6  B4D8               	btfsc	status,2,c
  3856  0013F8  D7CB               	goto	i2l1966
  3857  0013FA  0A01               	xorlw	1	; case 1
  3858  0013FC  B4D8               	btfsc	status,2,c
  3859  0013FE  D7D2               	goto	i2l1972
  3860  001400  0A03               	xorlw	3	; case 2
  3861  001402  B4D8               	btfsc	status,2,c
  3862  001404  D7DD               	goto	i2l1982
  3863  001406  0A01               	xorlw	1	; case 3
  3864  001408  B4D8               	btfsc	status,2,c
  3865  00140A  D7E0               	goto	i2l23
  3866  00140C  D7E8               	goto	i2l1988
  3867  00140E                     __end_of_Find_Button_Press:
  3868                           	opt stack 0
  3869                           pclatu	equ	0xFFB
  3870                           pclath	equ	0xFFA
  3871                           tblptru	equ	0xFF8
  3872                           tblptrh	equ	0xFF7
  3873                           tblptrl	equ	0xFF6
  3874                           tablat	equ	0xFF5
  3875                           prodh	equ	0xFF4
  3876                           prodl	equ	0xFF3
  3877                           intcon	equ	0xFF2
  3878                           postinc0	equ	0xFEE
  3879                           fsr0h	equ	0xFEA
  3880                           fsr0l	equ	0xFE9
  3881                           wreg	equ	0xFE8
  3882                           postdec1	equ	0xFE5
  3883                           fsr1h	equ	0xFE2
  3884                           fsr1l	equ	0xFE1
  3885                           fsr2h	equ	0xFDA
  3886                           fsr2l	equ	0xFD9
  3887                           status	equ	0xFD8
  3888                           
  3889 ;; *************** function _Controller_Func *****************
  3890 ;; Defined at:
  3891 ;;		line 374 in file "st_mch3_update_values_with_debounce_lib.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;		None
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  temp            3   58[COMRAM] float 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;		None               void
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3905 ;;      Params:         0       0       0       0       0       0       0
  3906 ;;      Locals:         3       0       0       0       0       0       0
  3907 ;;      Temps:          0       0       0       0       0       0       0
  3908 ;;      Totals:         3       0       0       0       0       0       0
  3909 ;;Total ram usage:        3 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    2
  3912 ;; This function calls:
  3913 ;;		___abtoft
  3914 ;;		___ftadd
  3915 ;;		___ftmul
  3916 ;;		___ftneg
  3917 ;;		___fttol
  3918 ;;		___lbtoft
  3919 ;; This function is called by:
  3920 ;;		_myIsr
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text22
  3925  000E26                     __ptext22:
  3926                           	opt stack 0
  3927  000E26                     _Controller_Func:
  3928                           	opt stack 23
  3929                           
  3930                           ;st_mch3_update_values_with_debounce_lib.c: 376: float temp=0;
  3931                           
  3932                           ;incstack = 0
  3933  000E26  0E00               	movlw	0
  3934  000E28  6E3B               	movwf	Controller_Func@temp,c
  3935  000E2A  0E00               	movlw	0
  3936  000E2C  6E3C               	movwf	Controller_Func@temp+1,c
  3937  000E2E  0E00               	movlw	0
  3938  000E30  6E3D               	movwf	Controller_Func@temp+2,c
  3939                           
  3940                           ;st_mch3_update_values_with_debounce_lib.c: 377: control1.en_1= control1.en;
  3941  000E32  C056  F057         	movff	_control1+9,_control1+10
  3942                           
  3943                           ;st_mch3_update_values_with_debounce_lib.c: 378: control1.en= Motor1.Desired-Motor1.Actu
      +                          al;
  3944  000E36  0100               	movlb	0	; () banked
  3945  000E38  5195               	movf	(_Motor1+1)& (0+255),w,b
  3946  000E3A  0800               	sublw	0
  3947  000E3C  0100               	movlb	0	; () banked
  3948  000E3E  2594               	addwf	_Motor1& (0+255),w,b
  3949  000E40  6E56               	movwf	_control1+9,c
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;st_mch3_update_values_with_debounce_lib.c: 379: control1.un_1= control1.un;
  3953  000E42  C058  F059         	movff	_control1+11,_control1+12
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;st_mch3_update_values_with_debounce_lib.c: 381: temp=((control1.kpki)*(control1.en))-((
      +                          control1.kp*control1.en_1));
  3957  000E46  C053  F011         	movff	_control1+6,___ftmul@f2
  3958  000E4A  C054  F012         	movff	_control1+7,___ftmul@f2+1
  3959  000E4E  C055  F013         	movff	_control1+8,___ftmul@f2+2
  3960  000E52  5056               	movf	_control1+9,w,c
  3961  000E54  ECC1  F00A         	call	___abtoft
  3962  000E58  C009  F00E         	movff	?___abtoft,___ftmul@f1
  3963  000E5C  C00A  F00F         	movff	?___abtoft+1,___ftmul@f1+1
  3964  000E60  C00B  F010         	movff	?___abtoft+2,___ftmul@f1+2
  3965  000E64  EC24  F006         	call	___ftmul	;wreg free
  3966  000E68  C00E  F020         	movff	?___ftmul,___ftadd@f1
  3967  000E6C  C00F  F021         	movff	?___ftmul+1,___ftadd@f1+1
  3968  000E70  C010  F022         	movff	?___ftmul+2,___ftadd@f1+2
  3969  000E74  C04D  F011         	movff	_control1,___ftmul@f2
  3970  000E78  C04E  F012         	movff	_control1+1,___ftmul@f2+1
  3971  000E7C  C04F  F013         	movff	_control1+2,___ftmul@f2+2
  3972  000E80  5057               	movf	_control1+10,w,c
  3973  000E82  ECC1  F00A         	call	___abtoft
  3974  000E86  C009  F00E         	movff	?___abtoft,___ftmul@f1
  3975  000E8A  C00A  F00F         	movff	?___abtoft+1,___ftmul@f1+1
  3976  000E8E  C00B  F010         	movff	?___abtoft+2,___ftmul@f1+2
  3977  000E92  EC24  F006         	call	___ftmul	;wreg free
  3978  000E96  C00E  F01D         	movff	?___ftmul,___ftneg@f1
  3979  000E9A  C00F  F01E         	movff	?___ftmul+1,___ftneg@f1+1
  3980  000E9E  C010  F01F         	movff	?___ftmul+2,___ftneg@f1+2
  3981  000EA2  EC12  F00B         	call	___ftneg	;wreg free
  3982  000EA6  C01D  F023         	movff	?___ftneg,___ftadd@f2
  3983  000EAA  C01E  F024         	movff	?___ftneg+1,___ftadd@f2+1
  3984  000EAE  C01F  F025         	movff	?___ftneg+2,___ftadd@f2+2
  3985  000EB2  EC37  F004         	call	___ftadd	;wreg free
  3986  000EB6  C020  F03B         	movff	?___ftadd,Controller_Func@temp
  3987  000EBA  C021  F03C         	movff	?___ftadd+1,Controller_Func@temp+1
  3988  000EBE  C022  F03D         	movff	?___ftadd+2,Controller_Func@temp+2
  3989                           
  3990                           ;st_mch3_update_values_with_debounce_lib.c: 382: control1.un=control1.un_1+temp;
  3991  000EC2  C03B  F023         	movff	Controller_Func@temp,___ftadd@f2
  3992  000EC6  C03C  F024         	movff	Controller_Func@temp+1,___ftadd@f2+1
  3993  000ECA  C03D  F025         	movff	Controller_Func@temp+2,___ftadd@f2+2
  3994  000ECE  5059               	movf	_control1+12,w,c
  3995  000ED0  EC00  F00B         	call	___lbtoft
  3996  000ED4  C009  F020         	movff	?___lbtoft,___ftadd@f1
  3997  000ED8  C00A  F021         	movff	?___lbtoft+1,___ftadd@f1+1
  3998  000EDC  C00B  F022         	movff	?___lbtoft+2,___ftadd@f1+2
  3999  000EE0  EC37  F004         	call	___ftadd	;wreg free
  4000  000EE4  C020  F02C         	movff	?___ftadd,___fttol@f1
  4001  000EE8  C021  F02D         	movff	?___ftadd+1,___fttol@f1+1
  4002  000EEC  C022  F02E         	movff	?___ftadd+2,___fttol@f1+2
  4003  000EF0  ECAA  F005         	call	___fttol	;wreg free
  4004  000EF4  502C               	movf	?___fttol,w,c
  4005  000EF6  6E58               	movwf	_control1+11,c
  4006  000EF8  0012               	return		;funcret
  4007  000EFA                     __end_of_Controller_Func:
  4008                           	opt stack 0
  4009                           pclatu	equ	0xFFB
  4010                           pclath	equ	0xFFA
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           prodh	equ	0xFF4
  4016                           prodl	equ	0xFF3
  4017                           intcon	equ	0xFF2
  4018                           postinc0	equ	0xFEE
  4019                           fsr0h	equ	0xFEA
  4020                           fsr0l	equ	0xFE9
  4021                           wreg	equ	0xFE8
  4022                           postdec1	equ	0xFE5
  4023                           fsr1h	equ	0xFE2
  4024                           fsr1l	equ	0xFE1
  4025                           fsr2h	equ	0xFDA
  4026                           fsr2l	equ	0xFD9
  4027                           status	equ	0xFD8
  4028                           
  4029 ;; *************** function ___lbtoft *****************
  4030 ;; Defined at:
  4031 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  c               1    wreg     unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  c               1   11[COMRAM] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  3    8[COMRAM] float 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4045 ;;      Params:         3       0       0       0       0       0       0
  4046 ;;      Locals:         1       0       0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0
  4048 ;;      Totals:         4       0       0       0       0       0       0
  4049 ;;Total ram usage:        4 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    1
  4052 ;; This function calls:
  4053 ;;		___ftpack
  4054 ;; This function is called by:
  4055 ;;		_Controller_Func
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text23
  4060  001600                     __ptext23:
  4061                           	opt stack 0
  4062  001600                     ___lbtoft:
  4063                           	opt stack 23
  4064                           
  4065                           ;incstack = 0
  4066                           ;___lbtoft@c stored from wreg
  4067  001600  6E0C               	movwf	___lbtoft@c,c
  4068  001602  500C               	movf	___lbtoft@c,w,c
  4069  001604  6E01               	movwf	___ftpack@arg,c
  4070  001606  6A02               	clrf	___ftpack@arg+1,c
  4071  001608  6A03               	clrf	___ftpack@arg+2,c
  4072  00160A  0E8E               	movlw	142
  4073  00160C  6E04               	movwf	___ftpack@exp,c
  4074  00160E  0E00               	movlw	0
  4075  001610  6E05               	movwf	___ftpack@sign,c
  4076  001612  EC39  F008         	call	___ftpack	;wreg free
  4077  001616  C001  F009         	movff	?___ftpack,?___lbtoft
  4078  00161A  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  4079  00161E  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  4080  001622  0012               	return	
  4081  001624                     __end_of___lbtoft:
  4082                           	opt stack 0
  4083                           pclatu	equ	0xFFB
  4084                           pclath	equ	0xFFA
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           postinc0	equ	0xFEE
  4093                           fsr0h	equ	0xFEA
  4094                           fsr0l	equ	0xFE9
  4095                           wreg	equ	0xFE8
  4096                           postdec1	equ	0xFE5
  4097                           fsr1h	equ	0xFE2
  4098                           fsr1l	equ	0xFE1
  4099                           fsr2h	equ	0xFDA
  4100                           fsr2l	equ	0xFD9
  4101                           status	equ	0xFD8
  4102                           
  4103 ;; *************** function ___fttol *****************
  4104 ;; Defined at:
  4105 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  f1              3   43[COMRAM] float 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  lval            4   53[COMRAM] unsigned long 
  4110 ;;  exp1            1   57[COMRAM] unsigned char 
  4111 ;;  sign1           1   52[COMRAM] unsigned char 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  4   43[COMRAM] long 
  4114 ;; Registers used:
  4115 ;;		wreg, status,2, status,0
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4121 ;;      Params:         4       0       0       0       0       0       0
  4122 ;;      Locals:         6       0       0       0       0       0       0
  4123 ;;      Temps:          5       0       0       0       0       0       0
  4124 ;;      Totals:        15       0       0       0       0       0       0
  4125 ;;Total ram usage:       15 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_Controller_Func
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text24
  4135  000B54                     __ptext24:
  4136                           	opt stack 0
  4137  000B54                     ___fttol:
  4138                           	opt stack 24
  4139                           
  4140                           ;incstack = 0
  4141  000B54  C02E  F030         	movff	___fttol@f1+2,??___fttol
  4142  000B58  6A31               	clrf	(??___fttol+1)& (0+255),c
  4143  000B5A  6A32               	clrf	(??___fttol+2)& (0+255),c
  4144  000B5C  342D               	rlcf	___fttol@f1+1,w,c
  4145  000B5E  3630               	rlcf	??___fttol& (0+255),f,c
  4146  000B60  E301               	bnc	u150_41
  4147  000B62  8031               	bsf	(??___fttol+1)& (0+255),0,c
  4148  000B64                     u150_41:
  4149  000B64  5030               	movf	??___fttol,w,c
  4150  000B66  6E3A               	movwf	___fttol@exp1,c
  4151  000B68  503A               	movf	___fttol@exp1,w,c
  4152  000B6A  A4D8               	btfss	status,2,c
  4153  000B6C  D009               	goto	i2l1920
  4154  000B6E  0E00               	movlw	0
  4155  000B70  6E2C               	movwf	?___fttol,c
  4156  000B72  0E00               	movlw	0
  4157  000B74  6E2D               	movwf	?___fttol+1,c
  4158  000B76  0E00               	movlw	0
  4159  000B78  6E2E               	movwf	?___fttol+2,c
  4160  000B7A  0E00               	movlw	0
  4161  000B7C  6E2F               	movwf	?___fttol+3,c
  4162  000B7E  0012               	return	
  4163  000B80                     i2l1920:
  4164  000B80  0E17               	movlw	23
  4165  000B82  6E30               	movwf	??___fttol& (0+255),c
  4166  000B84  C02C  F031         	movff	___fttol@f1,??___fttol+1
  4167  000B88  C02D  F032         	movff	___fttol@f1+1,??___fttol+2
  4168  000B8C  C02E  F033         	movff	___fttol@f1+2,??___fttol+3
  4169  000B90  2830               	incf	??___fttol,w,c
  4170  000B92  6E34               	movwf	(??___fttol+4)& (0+255),c
  4171  000B94  D004               	goto	i2u152_40
  4172  000B96                     i2u152_45:
  4173  000B96  90D8               	bcf	status,0,c
  4174  000B98  3233               	rrcf	??___fttol+3,f,c
  4175  000B9A  3232               	rrcf	??___fttol+2,f,c
  4176  000B9C  3231               	rrcf	??___fttol+1,f,c
  4177  000B9E                     i2u152_40:
  4178  000B9E  2E34               	decfsz	(??___fttol+4)& (0+255),f,c
  4179  000BA0  D7FA               	goto	i2u152_45
  4180  000BA2  5031               	movf	??___fttol+1,w,c
  4181  000BA4  6E35               	movwf	___fttol@sign1,c
  4182  000BA6  8E2D               	bsf	___fttol@f1+1,7,c
  4183  000BA8  0EFF               	movlw	255
  4184  000BAA  162C               	andwf	___fttol@f1,f,c
  4185  000BAC  0EFF               	movlw	255
  4186  000BAE  162D               	andwf	___fttol@f1+1,f,c
  4187  000BB0  0E00               	movlw	0
  4188  000BB2  162E               	andwf	___fttol@f1+2,f,c
  4189  000BB4  502C               	movf	___fttol@f1,w,c
  4190  000BB6  6E36               	movwf	___fttol@lval,c
  4191  000BB8  502D               	movf	___fttol@f1+1,w,c
  4192  000BBA  6E37               	movwf	___fttol@lval+1,c
  4193  000BBC  502E               	movf	___fttol@f1+2,w,c
  4194  000BBE  6E38               	movwf	___fttol@lval+2,c
  4195  000BC0  6A39               	clrf	___fttol@lval+3,c
  4196  000BC2  0E8E               	movlw	142
  4197  000BC4  5E3A               	subwf	___fttol@exp1,f,c
  4198  000BC6  AE3A               	btfss	___fttol@exp1,7,c
  4199  000BC8  D016               	goto	i2l1942
  4200  000BCA  503A               	movf	___fttol@exp1,w,c
  4201  000BCC  0A80               	xorlw	128
  4202  000BCE  0F8F               	addlw	143
  4203  000BD0  B0D8               	btfsc	status,0,c
  4204  000BD2  D009               	goto	i2l1938
  4205  000BD4  0E00               	movlw	0
  4206  000BD6  6E2C               	movwf	?___fttol,c
  4207  000BD8  0E00               	movlw	0
  4208  000BDA  6E2D               	movwf	?___fttol+1,c
  4209  000BDC  0E00               	movlw	0
  4210  000BDE  6E2E               	movwf	?___fttol+2,c
  4211  000BE0  0E00               	movlw	0
  4212  000BE2  6E2F               	movwf	?___fttol+3,c
  4213  000BE4  0012               	return	
  4214  000BE6                     i2l1938:
  4215  000BE6  90D8               	bcf	status,0,c
  4216  000BE8  3239               	rrcf	___fttol@lval+3,f,c
  4217  000BEA  3238               	rrcf	___fttol@lval+2,f,c
  4218  000BEC  3237               	rrcf	___fttol@lval+1,f,c
  4219  000BEE  3236               	rrcf	___fttol@lval,f,c
  4220  000BF0  3E3A               	incfsz	___fttol@exp1,f,c
  4221  000BF2  D7F9               	goto	i2l1938
  4222  000BF4  D015               	goto	i2l1952
  4223  000BF6                     i2l1942:
  4224  000BF6  0E17               	movlw	23
  4225  000BF8  643A               	cpfsgt	___fttol@exp1,c
  4226  000BFA  D00F               	goto	i2l1950
  4227  000BFC  0E00               	movlw	0
  4228  000BFE  6E2C               	movwf	?___fttol,c
  4229  000C00  0E00               	movlw	0
  4230  000C02  6E2D               	movwf	?___fttol+1,c
  4231  000C04  0E00               	movlw	0
  4232  000C06  6E2E               	movwf	?___fttol+2,c
  4233  000C08  0E00               	movlw	0
  4234  000C0A  6E2F               	movwf	?___fttol+3,c
  4235  000C0C  0012               	return	
  4236  000C0E                     i2l1948:
  4237  000C0E  90D8               	bcf	status,0,c
  4238  000C10  3636               	rlcf	___fttol@lval,f,c
  4239  000C12  3637               	rlcf	___fttol@lval+1,f,c
  4240  000C14  3638               	rlcf	___fttol@lval+2,f,c
  4241  000C16  3639               	rlcf	___fttol@lval+3,f,c
  4242  000C18  063A               	decf	___fttol@exp1,f,c
  4243  000C1A                     i2l1950:
  4244  000C1A  503A               	movf	___fttol@exp1,w,c
  4245  000C1C  A4D8               	btfss	status,2,c
  4246  000C1E  D7F7               	goto	i2l1948
  4247  000C20                     i2l1952:
  4248  000C20  5035               	movf	___fttol@sign1,w,c
  4249  000C22  B4D8               	btfsc	status,2,c
  4250  000C24  D008               	goto	i2l1956
  4251  000C26  1E39               	comf	___fttol@lval+3,f,c
  4252  000C28  1E38               	comf	___fttol@lval+2,f,c
  4253  000C2A  1E37               	comf	___fttol@lval+1,f,c
  4254  000C2C  6C36               	negf	___fttol@lval,c
  4255  000C2E  0E00               	movlw	0
  4256  000C30  2237               	addwfc	___fttol@lval+1,f,c
  4257  000C32  2238               	addwfc	___fttol@lval+2,f,c
  4258  000C34  2239               	addwfc	___fttol@lval+3,f,c
  4259  000C36                     i2l1956:
  4260  000C36  C036  F02C         	movff	___fttol@lval,?___fttol
  4261  000C3A  C037  F02D         	movff	___fttol@lval+1,?___fttol+1
  4262  000C3E  C038  F02E         	movff	___fttol@lval+2,?___fttol+2
  4263  000C42  C039  F02F         	movff	___fttol@lval+3,?___fttol+3
  4264  000C46  0012               	return	
  4265  000C48                     __end_of___fttol:
  4266                           	opt stack 0
  4267                           pclatu	equ	0xFFB
  4268                           pclath	equ	0xFFA
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           prodh	equ	0xFF4
  4274                           prodl	equ	0xFF3
  4275                           intcon	equ	0xFF2
  4276                           postinc0	equ	0xFEE
  4277                           fsr0h	equ	0xFEA
  4278                           fsr0l	equ	0xFE9
  4279                           wreg	equ	0xFE8
  4280                           postdec1	equ	0xFE5
  4281                           fsr1h	equ	0xFE2
  4282                           fsr1l	equ	0xFE1
  4283                           fsr2h	equ	0xFDA
  4284                           fsr2l	equ	0xFD9
  4285                           status	equ	0xFD8
  4286                           
  4287 ;; *************** function ___ftneg *****************
  4288 ;; Defined at:
  4289 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  f1              3   28[COMRAM] float 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  3   28[COMRAM] float 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4303 ;;      Params:         3       0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0
  4306 ;;      Totals:         3       0       0       0       0       0       0
  4307 ;;Total ram usage:        3 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_Controller_Func
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text25
  4317  001624                     __ptext25:
  4318                           	opt stack 0
  4319  001624                     ___ftneg:
  4320                           	opt stack 24
  4321                           
  4322                           ;incstack = 0
  4323  001624  501D               	movf	___ftneg@f1,w,c
  4324  001626  101E               	iorwf	___ftneg@f1+1,w,c
  4325  001628  101F               	iorwf	___ftneg@f1+2,w,c
  4326  00162A  B4D8               	btfsc	status,2,c
  4327  00162C  D006               	goto	i2l563
  4328  00162E  0E00               	movlw	0
  4329  001630  1A1D               	xorwf	___ftneg@f1,f,c
  4330  001632  0E00               	movlw	0
  4331  001634  1A1E               	xorwf	___ftneg@f1+1,f,c
  4332  001636  0E80               	movlw	128
  4333  001638  1A1F               	xorwf	___ftneg@f1+2,f,c
  4334  00163A                     i2l563:
  4335  00163A  C01D  F01D         	movff	___ftneg@f1,?___ftneg
  4336  00163E  C01E  F01E         	movff	___ftneg@f1+1,?___ftneg+1
  4337  001642  C01F  F01F         	movff	___ftneg@f1+2,?___ftneg+2
  4338  001646  0012               	return		;funcret
  4339  001648                     __end_of___ftneg:
  4340                           	opt stack 0
  4341                           pclatu	equ	0xFFB
  4342                           pclath	equ	0xFFA
  4343                           tblptru	equ	0xFF8
  4344                           tblptrh	equ	0xFF7
  4345                           tblptrl	equ	0xFF6
  4346                           tablat	equ	0xFF5
  4347                           prodh	equ	0xFF4
  4348                           prodl	equ	0xFF3
  4349                           intcon	equ	0xFF2
  4350                           postinc0	equ	0xFEE
  4351                           fsr0h	equ	0xFEA
  4352                           fsr0l	equ	0xFE9
  4353                           wreg	equ	0xFE8
  4354                           postdec1	equ	0xFE5
  4355                           fsr1h	equ	0xFE2
  4356                           fsr1l	equ	0xFE1
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361 ;; *************** function ___ftmul *****************
  4362 ;; Defined at:
  4363 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  f1              3   13[COMRAM] float 
  4366 ;;  f2              3   16[COMRAM] float 
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  f3_as_produc    3   23[COMRAM] unsigned um
  4369 ;;  sign            1   27[COMRAM] unsigned char 
  4370 ;;  cntr            1   26[COMRAM] unsigned char 
  4371 ;;  exp             1   22[COMRAM] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  3   13[COMRAM] float 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4381 ;;      Params:         6       0       0       0       0       0       0
  4382 ;;      Locals:         6       0       0       0       0       0       0
  4383 ;;      Temps:          3       0       0       0       0       0       0
  4384 ;;      Totals:        15       0       0       0       0       0       0
  4385 ;;Total ram usage:       15 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    1
  4388 ;; This function calls:
  4389 ;;		___ftpack
  4390 ;; This function is called by:
  4391 ;;		_Controller_Func
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text26
  4396  000C48                     __ptext26:
  4397                           	opt stack 0
  4398  000C48                     ___ftmul:
  4399                           	opt stack 23
  4400                           
  4401                           ;incstack = 0
  4402  000C48  C010  F014         	movff	___ftmul@f1+2,??___ftmul
  4403  000C4C  6A15               	clrf	(??___ftmul+1)& (0+255),c
  4404  000C4E  6A16               	clrf	(??___ftmul+2)& (0+255),c
  4405  000C50  340F               	rlcf	___ftmul@f1+1,w,c
  4406  000C52  3614               	rlcf	??___ftmul& (0+255),f,c
  4407  000C54  E301               	bnc	u131_41
  4408  000C56  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  4409  000C58                     u131_41:
  4410  000C58  5014               	movf	??___ftmul,w,c
  4411  000C5A  6E17               	movwf	___ftmul@exp,c
  4412  000C5C  5017               	movf	___ftmul@exp,w,c
  4413  000C5E  A4D8               	btfss	status,2,c
  4414  000C60  D007               	goto	i2l1788
  4415  000C62  0E00               	movlw	0
  4416  000C64  6E0E               	movwf	?___ftmul,c
  4417  000C66  0E00               	movlw	0
  4418  000C68  6E0F               	movwf	?___ftmul+1,c
  4419  000C6A  0E00               	movlw	0
  4420  000C6C  6E10               	movwf	?___ftmul+2,c
  4421  000C6E  0012               	return	
  4422  000C70                     i2l1788:
  4423  000C70  C013  F014         	movff	___ftmul@f2+2,??___ftmul
  4424  000C74  6A15               	clrf	(??___ftmul+1)& (0+255),c
  4425  000C76  6A16               	clrf	(??___ftmul+2)& (0+255),c
  4426  000C78  3412               	rlcf	___ftmul@f2+1,w,c
  4427  000C7A  3614               	rlcf	??___ftmul& (0+255),f,c
  4428  000C7C  E301               	bnc	u133_41
  4429  000C7E  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  4430  000C80                     u133_41:
  4431  000C80  5014               	movf	??___ftmul,w,c
  4432  000C82  6E1C               	movwf	___ftmul@sign,c
  4433  000C84  501C               	movf	___ftmul@sign,w,c
  4434  000C86  A4D8               	btfss	status,2,c
  4435  000C88  D007               	goto	i2l1794
  4436  000C8A  0E00               	movlw	0
  4437  000C8C  6E0E               	movwf	?___ftmul,c
  4438  000C8E  0E00               	movlw	0
  4439  000C90  6E0F               	movwf	?___ftmul+1,c
  4440  000C92  0E00               	movlw	0
  4441  000C94  6E10               	movwf	?___ftmul+2,c
  4442  000C96  0012               	return	
  4443  000C98                     i2l1794:
  4444  000C98  501C               	movf	___ftmul@sign,w,c
  4445  000C9A  0F7B               	addlw	123
  4446  000C9C  2617               	addwf	___ftmul@exp,f,c
  4447  000C9E  C010  F01C         	movff	___ftmul@f1+2,___ftmul@sign
  4448  000CA2  5013               	movf	___ftmul@f2+2,w,c
  4449  000CA4  1A1C               	xorwf	___ftmul@sign,f,c
  4450  000CA6  0E80               	movlw	128
  4451  000CA8  161C               	andwf	___ftmul@sign,f,c
  4452  000CAA  8E0F               	bsf	___ftmul@f1+1,7,c
  4453  000CAC  8E12               	bsf	___ftmul@f2+1,7,c
  4454  000CAE  0EFF               	movlw	255
  4455  000CB0  1611               	andwf	___ftmul@f2,f,c
  4456  000CB2  0EFF               	movlw	255
  4457  000CB4  1612               	andwf	___ftmul@f2+1,f,c
  4458  000CB6  0E00               	movlw	0
  4459  000CB8  1613               	andwf	___ftmul@f2+2,f,c
  4460  000CBA  0E00               	movlw	0
  4461  000CBC  6E18               	movwf	___ftmul@f3_as_product,c
  4462  000CBE  0E00               	movlw	0
  4463  000CC0  6E19               	movwf	___ftmul@f3_as_product+1,c
  4464  000CC2  0E00               	movlw	0
  4465  000CC4  6E1A               	movwf	___ftmul@f3_as_product+2,c
  4466  000CC6  0E07               	movlw	7
  4467  000CC8  6E1B               	movwf	___ftmul@cntr,c
  4468  000CCA                     i2l1808:
  4469  000CCA  A00E               	btfss	___ftmul@f1,0,c
  4470  000CCC  D006               	goto	i2l1812
  4471  000CCE  5011               	movf	___ftmul@f2,w,c
  4472  000CD0  2618               	addwf	___ftmul@f3_as_product,f,c
  4473  000CD2  5012               	movf	___ftmul@f2+1,w,c
  4474  000CD4  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  4475  000CD6  5013               	movf	___ftmul@f2+2,w,c
  4476  000CD8  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  4477  000CDA                     i2l1812:
  4478  000CDA  90D8               	bcf	status,0,c
  4479  000CDC  3210               	rrcf	___ftmul@f1+2,f,c
  4480  000CDE  320F               	rrcf	___ftmul@f1+1,f,c
  4481  000CE0  320E               	rrcf	___ftmul@f1,f,c
  4482  000CE2  90D8               	bcf	status,0,c
  4483  000CE4  3611               	rlcf	___ftmul@f2,f,c
  4484  000CE6  3612               	rlcf	___ftmul@f2+1,f,c
  4485  000CE8  3613               	rlcf	___ftmul@f2+2,f,c
  4486  000CEA  2E1B               	decfsz	___ftmul@cntr,f,c
  4487  000CEC  D7EE               	goto	i2l1808
  4488  000CEE  0E09               	movlw	9
  4489  000CF0  6E1B               	movwf	___ftmul@cntr,c
  4490  000CF2                     i2l1818:
  4491  000CF2  A00E               	btfss	___ftmul@f1,0,c
  4492  000CF4  D006               	goto	i2l1822
  4493  000CF6  5011               	movf	___ftmul@f2,w,c
  4494  000CF8  2618               	addwf	___ftmul@f3_as_product,f,c
  4495  000CFA  5012               	movf	___ftmul@f2+1,w,c
  4496  000CFC  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  4497  000CFE  5013               	movf	___ftmul@f2+2,w,c
  4498  000D00  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  4499  000D02                     i2l1822:
  4500  000D02  90D8               	bcf	status,0,c
  4501  000D04  3210               	rrcf	___ftmul@f1+2,f,c
  4502  000D06  320F               	rrcf	___ftmul@f1+1,f,c
  4503  000D08  320E               	rrcf	___ftmul@f1,f,c
  4504  000D0A  90D8               	bcf	status,0,c
  4505  000D0C  321A               	rrcf	___ftmul@f3_as_product+2,f,c
  4506  000D0E  3219               	rrcf	___ftmul@f3_as_product+1,f,c
  4507  000D10  3218               	rrcf	___ftmul@f3_as_product,f,c
  4508  000D12  2E1B               	decfsz	___ftmul@cntr,f,c
  4509  000D14  D7EE               	goto	i2l1818
  4510  000D16  C018  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4511  000D1A  C019  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4512  000D1E  C01A  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4513  000D22  C017  F004         	movff	___ftmul@exp,___ftpack@exp
  4514  000D26  C01C  F005         	movff	___ftmul@sign,___ftpack@sign
  4515  000D2A  EC39  F008         	call	___ftpack	;wreg free
  4516  000D2E  C001  F00E         	movff	?___ftpack,?___ftmul
  4517  000D32  C002  F00F         	movff	?___ftpack+1,?___ftmul+1
  4518  000D36  C003  F010         	movff	?___ftpack+2,?___ftmul+2
  4519  000D3A  0012               	return	
  4520  000D3C                     __end_of___ftmul:
  4521                           	opt stack 0
  4522                           pclatu	equ	0xFFB
  4523                           pclath	equ	0xFFA
  4524                           tblptru	equ	0xFF8
  4525                           tblptrh	equ	0xFF7
  4526                           tblptrl	equ	0xFF6
  4527                           tablat	equ	0xFF5
  4528                           prodh	equ	0xFF4
  4529                           prodl	equ	0xFF3
  4530                           intcon	equ	0xFF2
  4531                           postinc0	equ	0xFEE
  4532                           fsr0h	equ	0xFEA
  4533                           fsr0l	equ	0xFE9
  4534                           wreg	equ	0xFE8
  4535                           postdec1	equ	0xFE5
  4536                           fsr1h	equ	0xFE2
  4537                           fsr1l	equ	0xFE1
  4538                           fsr2h	equ	0xFDA
  4539                           fsr2l	equ	0xFD9
  4540                           status	equ	0xFD8
  4541                           
  4542 ;; *************** function ___ftadd *****************
  4543 ;; Defined at:
  4544 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  f1              3   31[COMRAM] float 
  4547 ;;  f2              3   34[COMRAM] float 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  exp1            1   42[COMRAM] unsigned char 
  4550 ;;  exp2            1   41[COMRAM] unsigned char 
  4551 ;;  sign            1   40[COMRAM] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  3   31[COMRAM] float 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4561 ;;      Params:         6       0       0       0       0       0       0
  4562 ;;      Locals:         3       0       0       0       0       0       0
  4563 ;;      Temps:          3       0       0       0       0       0       0
  4564 ;;      Totals:        12       0       0       0       0       0       0
  4565 ;;Total ram usage:       12 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    1
  4568 ;; This function calls:
  4569 ;;		___ftpack
  4570 ;; This function is called by:
  4571 ;;		_Controller_Func
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text27
  4576  00086E                     __ptext27:
  4577                           	opt stack 0
  4578  00086E                     ___ftadd:
  4579                           	opt stack 23
  4580                           
  4581                           ;incstack = 0
  4582  00086E  C022  F026         	movff	___ftadd@f1+2,??___ftadd
  4583  000872  6A27               	clrf	(??___ftadd+1)& (0+255),c
  4584  000874  6A28               	clrf	(??___ftadd+2)& (0+255),c
  4585  000876  3421               	rlcf	___ftadd@f1+1,w,c
  4586  000878  3626               	rlcf	??___ftadd& (0+255),f,c
  4587  00087A  E301               	bnc	u110_41
  4588  00087C  8027               	bsf	(??___ftadd+1)& (0+255),0,c
  4589  00087E                     u110_41:
  4590  00087E  5026               	movf	??___ftadd,w,c
  4591  000880  6E2B               	movwf	___ftadd@exp1,c
  4592  000882  C025  F026         	movff	___ftadd@f2+2,??___ftadd
  4593  000886  6A27               	clrf	(??___ftadd+1)& (0+255),c
  4594  000888  6A28               	clrf	(??___ftadd+2)& (0+255),c
  4595  00088A  3424               	rlcf	___ftadd@f2+1,w,c
  4596  00088C  3626               	rlcf	??___ftadd& (0+255),f,c
  4597  00088E  E301               	bnc	u111_41
  4598  000890  8027               	bsf	(??___ftadd+1)& (0+255),0,c
  4599  000892                     u111_41:
  4600  000892  5026               	movf	??___ftadd,w,c
  4601  000894  6E2A               	movwf	___ftadd@exp2,c
  4602  000896  502B               	movf	___ftadd@exp1,w,c
  4603  000898  B4D8               	btfsc	status,2,c
  4604  00089A  D00B               	goto	i2l506
  4605  00089C  502A               	movf	___ftadd@exp2,w,c
  4606  00089E  5C2B               	subwf	___ftadd@exp1,w,c
  4607  0008A0  B0D8               	btfsc	status,0,c
  4608  0008A2  D00E               	goto	i2l1720
  4609  0008A4  502B               	movf	___ftadd@exp1,w,c
  4610  0008A6  0800               	sublw	0
  4611  0008A8  242A               	addwf	___ftadd@exp2,w,c
  4612  0008AA  6E26               	movwf	??___ftadd& (0+255),c
  4613  0008AC  0E18               	movlw	24
  4614  0008AE  6426               	cpfsgt	??___ftadd,c
  4615  0008B0  D007               	goto	i2l1720
  4616  0008B2                     i2l506:
  4617  0008B2  C023  F020         	movff	___ftadd@f2,?___ftadd
  4618  0008B6  C024  F021         	movff	___ftadd@f2+1,?___ftadd+1
  4619  0008BA  C025  F022         	movff	___ftadd@f2+2,?___ftadd+2
  4620  0008BE  0012               	return	
  4621  0008C0                     i2l1720:
  4622  0008C0  502A               	movf	___ftadd@exp2,w,c
  4623  0008C2  B4D8               	btfsc	status,2,c
  4624  0008C4  D00B               	goto	i2l510
  4625  0008C6  502B               	movf	___ftadd@exp1,w,c
  4626  0008C8  5C2A               	subwf	___ftadd@exp2,w,c
  4627  0008CA  B0D8               	btfsc	status,0,c
  4628  0008CC  D00E               	goto	i2l1726
  4629  0008CE  502A               	movf	___ftadd@exp2,w,c
  4630  0008D0  0800               	sublw	0
  4631  0008D2  242B               	addwf	___ftadd@exp1,w,c
  4632  0008D4  6E26               	movwf	??___ftadd& (0+255),c
  4633  0008D6  0E18               	movlw	24
  4634  0008D8  6426               	cpfsgt	??___ftadd,c
  4635  0008DA  D007               	goto	i2l1726
  4636  0008DC                     i2l510:
  4637  0008DC  C020  F020         	movff	___ftadd@f1,?___ftadd
  4638  0008E0  C021  F021         	movff	___ftadd@f1+1,?___ftadd+1
  4639  0008E4  C022  F022         	movff	___ftadd@f1+2,?___ftadd+2
  4640  0008E8  0012               	return	
  4641  0008EA                     i2l1726:
  4642  0008EA  0E06               	movlw	6
  4643  0008EC  6E29               	movwf	___ftadd@sign,c
  4644  0008EE  BE22               	btfsc	___ftadd@f1+2,7,c
  4645  0008F0  8E29               	bsf	___ftadd@sign,7,c
  4646  0008F2  BE25               	btfsc	___ftadd@f2+2,7,c
  4647  0008F4  8C29               	bsf	___ftadd@sign,6,c
  4648  0008F6  8E21               	bsf	___ftadd@f1+1,7,c
  4649  0008F8  0EFF               	movlw	255
  4650  0008FA  1620               	andwf	___ftadd@f1,f,c
  4651  0008FC  0EFF               	movlw	255
  4652  0008FE  1621               	andwf	___ftadd@f1+1,f,c
  4653  000900  0E00               	movlw	0
  4654  000902  1622               	andwf	___ftadd@f1+2,f,c
  4655  000904  8E24               	bsf	___ftadd@f2+1,7,c
  4656  000906  0EFF               	movlw	255
  4657  000908  1623               	andwf	___ftadd@f2,f,c
  4658  00090A  0EFF               	movlw	255
  4659  00090C  1624               	andwf	___ftadd@f2+1,f,c
  4660  00090E  0E00               	movlw	0
  4661  000910  1625               	andwf	___ftadd@f2+2,f,c
  4662  000912  502A               	movf	___ftadd@exp2,w,c
  4663  000914  5C2B               	subwf	___ftadd@exp1,w,c
  4664  000916  B0D8               	btfsc	status,0,c
  4665  000918  D01B               	goto	i2l1752
  4666  00091A                     i2l1742:
  4667  00091A  90D8               	bcf	status,0,c
  4668  00091C  3623               	rlcf	___ftadd@f2,f,c
  4669  00091E  3624               	rlcf	___ftadd@f2+1,f,c
  4670  000920  3625               	rlcf	___ftadd@f2+2,f,c
  4671  000922  062A               	decf	___ftadd@exp2,f,c
  4672  000924  502B               	movf	___ftadd@exp1,w,c
  4673  000926  182A               	xorwf	___ftadd@exp2,w,c
  4674  000928  B4D8               	btfsc	status,2,c
  4675  00092A  D00D               	goto	i2l1750
  4676  00092C  0629               	decf	___ftadd@sign,f,c
  4677  00092E  C029  F026         	movff	___ftadd@sign,??___ftadd
  4678  000932  0E07               	movlw	7
  4679  000934  1626               	andwf	??___ftadd,f,c
  4680  000936  B4D8               	btfsc	status,2,c
  4681  000938  D006               	goto	i2l1750
  4682  00093A  D7EF               	goto	i2l1742
  4683  00093C                     i2l1748:
  4684  00093C  90D8               	bcf	status,0,c
  4685  00093E  3222               	rrcf	___ftadd@f1+2,f,c
  4686  000940  3221               	rrcf	___ftadd@f1+1,f,c
  4687  000942  3220               	rrcf	___ftadd@f1,f,c
  4688  000944  2A2B               	incf	___ftadd@exp1,f,c
  4689  000946                     i2l1750:
  4690  000946  502A               	movf	___ftadd@exp2,w,c
  4691  000948  182B               	xorwf	___ftadd@exp1,w,c
  4692  00094A  B4D8               	btfsc	status,2,c
  4693  00094C  D01F               	goto	i2l521
  4694  00094E  D7F6               	goto	i2l1748
  4695  000950                     i2l1752:
  4696  000950  502B               	movf	___ftadd@exp1,w,c
  4697  000952  5C2A               	subwf	___ftadd@exp2,w,c
  4698  000954  B0D8               	btfsc	status,0,c
  4699  000956  D01A               	goto	i2l521
  4700  000958                     i2l1754:
  4701  000958  90D8               	bcf	status,0,c
  4702  00095A  3620               	rlcf	___ftadd@f1,f,c
  4703  00095C  3621               	rlcf	___ftadd@f1+1,f,c
  4704  00095E  3622               	rlcf	___ftadd@f1+2,f,c
  4705  000960  062B               	decf	___ftadd@exp1,f,c
  4706  000962  502B               	movf	___ftadd@exp1,w,c
  4707  000964  182A               	xorwf	___ftadd@exp2,w,c
  4708  000966  B4D8               	btfsc	status,2,c
  4709  000968  D00D               	goto	i2l1762
  4710  00096A  0629               	decf	___ftadd@sign,f,c
  4711  00096C  C029  F026         	movff	___ftadd@sign,??___ftadd
  4712  000970  0E07               	movlw	7
  4713  000972  1626               	andwf	??___ftadd,f,c
  4714  000974  B4D8               	btfsc	status,2,c
  4715  000976  D006               	goto	i2l1762
  4716  000978  D7EF               	goto	i2l1754
  4717  00097A                     i2l1760:
  4718  00097A  90D8               	bcf	status,0,c
  4719  00097C  3225               	rrcf	___ftadd@f2+2,f,c
  4720  00097E  3224               	rrcf	___ftadd@f2+1,f,c
  4721  000980  3223               	rrcf	___ftadd@f2,f,c
  4722  000982  2A2A               	incf	___ftadd@exp2,f,c
  4723  000984                     i2l1762:
  4724  000984  502A               	movf	___ftadd@exp2,w,c
  4725  000986  182B               	xorwf	___ftadd@exp1,w,c
  4726  000988  A4D8               	btfss	status,2,c
  4727  00098A  D7F7               	goto	i2l1760
  4728  00098C                     i2l521:
  4729  00098C  AE29               	btfss	___ftadd@sign,7,c
  4730  00098E  D00C               	goto	i2l530
  4731  000990  0EFF               	movlw	255
  4732  000992  1A20               	xorwf	___ftadd@f1,f,c
  4733  000994  0EFF               	movlw	255
  4734  000996  1A21               	xorwf	___ftadd@f1+1,f,c
  4735  000998  0EFF               	movlw	255
  4736  00099A  1A22               	xorwf	___ftadd@f1+2,f,c
  4737  00099C  0E01               	movlw	1
  4738  00099E  2620               	addwf	___ftadd@f1,f,c
  4739  0009A0  0E00               	movlw	0
  4740  0009A2  2221               	addwfc	___ftadd@f1+1,f,c
  4741  0009A4  0E00               	movlw	0
  4742  0009A6  2222               	addwfc	___ftadd@f1+2,f,c
  4743  0009A8                     i2l530:
  4744  0009A8  AC29               	btfss	___ftadd@sign,6,c
  4745  0009AA  D00C               	goto	i2l1768
  4746  0009AC  0EFF               	movlw	255
  4747  0009AE  1A23               	xorwf	___ftadd@f2,f,c
  4748  0009B0  0EFF               	movlw	255
  4749  0009B2  1A24               	xorwf	___ftadd@f2+1,f,c
  4750  0009B4  0EFF               	movlw	255
  4751  0009B6  1A25               	xorwf	___ftadd@f2+2,f,c
  4752  0009B8  0E01               	movlw	1
  4753  0009BA  2623               	addwf	___ftadd@f2,f,c
  4754  0009BC  0E00               	movlw	0
  4755  0009BE  2224               	addwfc	___ftadd@f2+1,f,c
  4756  0009C0  0E00               	movlw	0
  4757  0009C2  2225               	addwfc	___ftadd@f2+2,f,c
  4758  0009C4                     i2l1768:
  4759  0009C4  0E00               	movlw	0
  4760  0009C6  6E29               	movwf	___ftadd@sign,c
  4761  0009C8  5020               	movf	___ftadd@f1,w,c
  4762  0009CA  2623               	addwf	___ftadd@f2,f,c
  4763  0009CC  5021               	movf	___ftadd@f1+1,w,c
  4764  0009CE  2224               	addwfc	___ftadd@f2+1,f,c
  4765  0009D0  5022               	movf	___ftadd@f1+2,w,c
  4766  0009D2  2225               	addwfc	___ftadd@f2+2,f,c
  4767  0009D4  AE25               	btfss	___ftadd@f2+2,7,c
  4768  0009D6  D00E               	goto	i2l1778
  4769  0009D8  0EFF               	movlw	255
  4770  0009DA  1A23               	xorwf	___ftadd@f2,f,c
  4771  0009DC  0EFF               	movlw	255
  4772  0009DE  1A24               	xorwf	___ftadd@f2+1,f,c
  4773  0009E0  0EFF               	movlw	255
  4774  0009E2  1A25               	xorwf	___ftadd@f2+2,f,c
  4775  0009E4  0E01               	movlw	1
  4776  0009E6  2623               	addwf	___ftadd@f2,f,c
  4777  0009E8  0E00               	movlw	0
  4778  0009EA  2224               	addwfc	___ftadd@f2+1,f,c
  4779  0009EC  0E00               	movlw	0
  4780  0009EE  2225               	addwfc	___ftadd@f2+2,f,c
  4781  0009F0  0E01               	movlw	1
  4782  0009F2  6E29               	movwf	___ftadd@sign,c
  4783  0009F4                     i2l1778:
  4784  0009F4  C023  F001         	movff	___ftadd@f2,___ftpack@arg
  4785  0009F8  C024  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4786  0009FC  C025  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4787  000A00  C02B  F004         	movff	___ftadd@exp1,___ftpack@exp
  4788  000A04  C029  F005         	movff	___ftadd@sign,___ftpack@sign
  4789  000A08  EC39  F008         	call	___ftpack	;wreg free
  4790  000A0C  C001  F020         	movff	?___ftpack,?___ftadd
  4791  000A10  C002  F021         	movff	?___ftpack+1,?___ftadd+1
  4792  000A14  C003  F022         	movff	?___ftpack+2,?___ftadd+2
  4793  000A18  0012               	return	
  4794  000A1A                     __end_of___ftadd:
  4795                           	opt stack 0
  4796                           pclatu	equ	0xFFB
  4797                           pclath	equ	0xFFA
  4798                           tblptru	equ	0xFF8
  4799                           tblptrh	equ	0xFF7
  4800                           tblptrl	equ	0xFF6
  4801                           tablat	equ	0xFF5
  4802                           prodh	equ	0xFF4
  4803                           prodl	equ	0xFF3
  4804                           intcon	equ	0xFF2
  4805                           postinc0	equ	0xFEE
  4806                           fsr0h	equ	0xFEA
  4807                           fsr0l	equ	0xFE9
  4808                           wreg	equ	0xFE8
  4809                           postdec1	equ	0xFE5
  4810                           fsr1h	equ	0xFE2
  4811                           fsr1l	equ	0xFE1
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function ___abtoft *****************
  4817 ;; Defined at:
  4818 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abtoft.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  c               1    wreg     char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  c               1   12[COMRAM] char 
  4823 ;;  f1              3    0        float 
  4824 ;;  sign            1   11[COMRAM] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  3    8[COMRAM] float 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4834 ;;      Params:         3       0       0       0       0       0       0
  4835 ;;      Locals:         2       0       0       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0
  4837 ;;      Totals:         5       0       0       0       0       0       0
  4838 ;;Total ram usage:        5 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    1
  4841 ;; This function calls:
  4842 ;;		___ftpack
  4843 ;; This function is called by:
  4844 ;;		_Controller_Func
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text28
  4849  001582                     __ptext28:
  4850                           	opt stack 0
  4851  001582                     ___abtoft:
  4852                           	opt stack 23
  4853                           
  4854                           ;incstack = 0
  4855                           ;___abtoft@c stored from wreg
  4856  001582  6E0D               	movwf	___abtoft@c,c
  4857  001584  0E00               	movlw	0
  4858  001586  6E0C               	movwf	___abtoft@sign,c
  4859  001588  AE0D               	btfss	___abtoft@c,7,c
  4860  00158A  D003               	goto	i2l1708
  4861  00158C  6C0D               	negf	___abtoft@c,c
  4862  00158E  0E01               	movlw	1
  4863  001590  6E0C               	movwf	___abtoft@sign,c
  4864  001592                     i2l1708:
  4865  001592  500D               	movf	___abtoft@c,w,c
  4866  001594  6E01               	movwf	___ftpack@arg,c
  4867  001596  6A02               	clrf	___ftpack@arg+1,c
  4868  001598  6A03               	clrf	___ftpack@arg+2,c
  4869  00159A  0E8E               	movlw	142
  4870  00159C  6E04               	movwf	___ftpack@exp,c
  4871  00159E  C00C  F005         	movff	___abtoft@sign,___ftpack@sign
  4872  0015A2  EC39  F008         	call	___ftpack	;wreg free
  4873  0015A6  C001  F009         	movff	?___ftpack,?___abtoft
  4874  0015AA  C002  F00A         	movff	?___ftpack+1,?___abtoft+1
  4875  0015AE  C003  F00B         	movff	?___ftpack+2,?___abtoft+2
  4876  0015B2  0012               	return	
  4877  0015B4                     __end_of___abtoft:
  4878                           	opt stack 0
  4879                           pclatu	equ	0xFFB
  4880                           pclath	equ	0xFFA
  4881                           tblptru	equ	0xFF8
  4882                           tblptrh	equ	0xFF7
  4883                           tblptrl	equ	0xFF6
  4884                           tablat	equ	0xFF5
  4885                           prodh	equ	0xFF4
  4886                           prodl	equ	0xFF3
  4887                           intcon	equ	0xFF2
  4888                           postinc0	equ	0xFEE
  4889                           fsr0h	equ	0xFEA
  4890                           fsr0l	equ	0xFE9
  4891                           wreg	equ	0xFE8
  4892                           postdec1	equ	0xFE5
  4893                           fsr1h	equ	0xFE2
  4894                           fsr1l	equ	0xFE1
  4895                           fsr2h	equ	0xFDA
  4896                           fsr2l	equ	0xFD9
  4897                           status	equ	0xFD8
  4898                           
  4899 ;; *************** function ___ftpack *****************
  4900 ;; Defined at:
  4901 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  arg             3    0[COMRAM] unsigned um
  4904 ;;  exp             1    3[COMRAM] unsigned char 
  4905 ;;  sign            1    4[COMRAM] unsigned char 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  3    0[COMRAM] float 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4917 ;;      Params:         5       0       0       0       0       0       0
  4918 ;;      Locals:         0       0       0       0       0       0       0
  4919 ;;      Temps:          3       0       0       0       0       0       0
  4920 ;;      Totals:         8       0       0       0       0       0       0
  4921 ;;Total ram usage:        8 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		___abtoft
  4927 ;;		___ftadd
  4928 ;;		___ftmul
  4929 ;;		___lbtoft
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text29
  4934  001072                     __ptext29:
  4935                           	opt stack 0
  4936  001072                     ___ftpack:
  4937                           	opt stack 23
  4938                           
  4939                           ;incstack = 0
  4940  001072  5004               	movf	___ftpack@exp,w,c
  4941  001074  B4D8               	btfsc	status,2,c
  4942  001076  D005               	goto	i2l1614
  4943  001078  5001               	movf	___ftpack@arg,w,c
  4944  00107A  1002               	iorwf	___ftpack@arg+1,w,c
  4945  00107C  1003               	iorwf	___ftpack@arg+2,w,c
  4946  00107E  A4D8               	btfss	status,2,c
  4947  001080  D00C               	goto	i2l1620
  4948  001082                     i2l1614:
  4949  001082  0E00               	movlw	0
  4950  001084  6E01               	movwf	?___ftpack,c
  4951  001086  0E00               	movlw	0
  4952  001088  6E02               	movwf	?___ftpack+1,c
  4953  00108A  0E00               	movlw	0
  4954  00108C  6E03               	movwf	?___ftpack+2,c
  4955  00108E  0012               	return	
  4956  001090                     i2l1618:
  4957  001090  2A04               	incf	___ftpack@exp,f,c
  4958  001092  90D8               	bcf	status,0,c
  4959  001094  3203               	rrcf	___ftpack@arg+2,f,c
  4960  001096  3202               	rrcf	___ftpack@arg+1,f,c
  4961  001098  3201               	rrcf	___ftpack@arg,f,c
  4962  00109A                     i2l1620:
  4963  00109A  0E00               	movlw	0
  4964  00109C  1401               	andwf	___ftpack@arg,w,c
  4965  00109E  6E06               	movwf	??___ftpack& (0+255),c
  4966  0010A0  0E00               	movlw	0
  4967  0010A2  1402               	andwf	___ftpack@arg+1,w,c
  4968  0010A4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4969  0010A6  0EFE               	movlw	254
  4970  0010A8  1403               	andwf	___ftpack@arg+2,w,c
  4971  0010AA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4972  0010AC  5006               	movf	??___ftpack,w,c
  4973  0010AE  1007               	iorwf	??___ftpack+1,w,c
  4974  0010B0  1008               	iorwf	??___ftpack+2,w,c
  4975  0010B2  B4D8               	btfsc	status,2,c
  4976  0010B4  D00C               	goto	i2l1626
  4977  0010B6  D7EC               	goto	i2l1618
  4978  0010B8                     i2l1622:
  4979  0010B8  2A04               	incf	___ftpack@exp,f,c
  4980  0010BA  0E01               	movlw	1
  4981  0010BC  2601               	addwf	___ftpack@arg,f,c
  4982  0010BE  0E00               	movlw	0
  4983  0010C0  2202               	addwfc	___ftpack@arg+1,f,c
  4984  0010C2  0E00               	movlw	0
  4985  0010C4  2203               	addwfc	___ftpack@arg+2,f,c
  4986  0010C6  90D8               	bcf	status,0,c
  4987  0010C8  3203               	rrcf	___ftpack@arg+2,f,c
  4988  0010CA  3202               	rrcf	___ftpack@arg+1,f,c
  4989  0010CC  3201               	rrcf	___ftpack@arg,f,c
  4990  0010CE                     i2l1626:
  4991  0010CE  0E00               	movlw	0
  4992  0010D0  1401               	andwf	___ftpack@arg,w,c
  4993  0010D2  6E06               	movwf	??___ftpack& (0+255),c
  4994  0010D4  0E00               	movlw	0
  4995  0010D6  1402               	andwf	___ftpack@arg+1,w,c
  4996  0010D8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4997  0010DA  0EFF               	movlw	255
  4998  0010DC  1403               	andwf	___ftpack@arg+2,w,c
  4999  0010DE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5000  0010E0  5006               	movf	??___ftpack,w,c
  5001  0010E2  1007               	iorwf	??___ftpack+1,w,c
  5002  0010E4  1008               	iorwf	??___ftpack+2,w,c
  5003  0010E6  B4D8               	btfsc	status,2,c
  5004  0010E8  D006               	goto	i2l1630
  5005  0010EA  D7E6               	goto	i2l1622
  5006  0010EC                     i2l1628:
  5007  0010EC  0604               	decf	___ftpack@exp,f,c
  5008  0010EE  90D8               	bcf	status,0,c
  5009  0010F0  3601               	rlcf	___ftpack@arg,f,c
  5010  0010F2  3602               	rlcf	___ftpack@arg+1,f,c
  5011  0010F4  3603               	rlcf	___ftpack@arg+2,f,c
  5012  0010F6                     i2l1630:
  5013  0010F6  BE02               	btfsc	___ftpack@arg+1,7,c
  5014  0010F8  D003               	goto	i2l483
  5015  0010FA  0E02               	movlw	2
  5016  0010FC  6004               	cpfslt	___ftpack@exp,c
  5017  0010FE  D7F6               	goto	i2l1628
  5018  001100                     i2l483:
  5019  001100  A004               	btfss	___ftpack@exp,0,c
  5020  001102  9E02               	bcf	___ftpack@arg+1,7,c
  5021  001104  90D8               	bcf	status,0,c
  5022  001106  3204               	rrcf	___ftpack@exp,f,c
  5023  001108  5004               	movf	___ftpack@exp,w,c
  5024  00110A  1203               	iorwf	___ftpack@arg+2,f,c
  5025  00110C  5005               	movf	___ftpack@sign,w,c
  5026  00110E  A4D8               	btfss	status,2,c
  5027  001110  8E03               	bsf	___ftpack@arg+2,7,c
  5028  001112  C001  F001         	movff	___ftpack@arg,?___ftpack
  5029  001116  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5030  00111A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5031  00111E  0012               	return	
  5032  001120                     __end_of___ftpack:
  5033                           	opt stack 0
  5034                           pclatu	equ	0xFFB
  5035                           pclath	equ	0xFFA
  5036                           tblptru	equ	0xFF8
  5037                           tblptrh	equ	0xFF7
  5038                           tblptrl	equ	0xFF6
  5039                           tablat	equ	0xFF5
  5040                           prodh	equ	0xFF4
  5041                           prodl	equ	0xFF3
  5042                           intcon	equ	0xFF2
  5043                           postinc0	equ	0xFEE
  5044                           fsr0h	equ	0xFEA
  5045                           fsr0l	equ	0xFE9
  5046                           wreg	equ	0xFE8
  5047                           postdec1	equ	0xFE5
  5048                           fsr1h	equ	0xFE2
  5049                           fsr1l	equ	0xFE1
  5050                           fsr2h	equ	0xFDA
  5051                           fsr2l	equ	0xFD9
  5052                           status	equ	0xFD8
  5053                           pclatu	equ	0xFFB
  5054                           pclath	equ	0xFFA
  5055                           tblptru	equ	0xFF8
  5056                           tblptrh	equ	0xFF7
  5057                           tblptrl	equ	0xFF6
  5058                           tablat	equ	0xFF5
  5059                           prodh	equ	0xFF4
  5060                           prodl	equ	0xFF3
  5061                           intcon	equ	0xFF2
  5062                           postinc0	equ	0xFEE
  5063                           fsr0h	equ	0xFEA
  5064                           fsr0l	equ	0xFE9
  5065                           wreg	equ	0xFE8
  5066                           postdec1	equ	0xFE5
  5067                           fsr1h	equ	0xFE2
  5068                           fsr1l	equ	0xFE1
  5069                           fsr2h	equ	0xFDA
  5070                           fsr2l	equ	0xFD9
  5071                           status	equ	0xFD8
  5072                           
  5073                           	psect	rparam
  5074  0000                     pclatu	equ	0xFFB
  5075                           pclath	equ	0xFFA
  5076                           tblptru	equ	0xFF8
  5077                           tblptrh	equ	0xFF7
  5078                           tblptrl	equ	0xFF6
  5079                           tablat	equ	0xFF5
  5080                           prodh	equ	0xFF4
  5081                           prodl	equ	0xFF3
  5082                           intcon	equ	0xFF2
  5083                           postinc0	equ	0xFEE
  5084                           fsr0h	equ	0xFEA
  5085                           fsr0l	equ	0xFE9
  5086                           wreg	equ	0xFE8
  5087                           postdec1	equ	0xFE5
  5088                           fsr1h	equ	0xFE2
  5089                           fsr1l	equ	0xFE1
  5090                           fsr2h	equ	0xFDA
  5091                           fsr2l	equ	0xFD9
  5092                           status	equ	0xFD8
  5093                           
  5094                           	psect	temp
  5095  000061                     btemp:
  5096                           	opt stack 0
  5097  000061                     	ds	1
  5098  0000                     int$flags	set	btemp
  5099                           pclatu	equ	0xFFB
  5100                           pclath	equ	0xFFA
  5101                           tblptru	equ	0xFF8
  5102                           tblptrh	equ	0xFF7
  5103                           tblptrl	equ	0xFF6
  5104                           tablat	equ	0xFF5
  5105                           prodh	equ	0xFF4
  5106                           prodl	equ	0xFF3
  5107                           intcon	equ	0xFF2
  5108                           postinc0	equ	0xFEE
  5109                           fsr0h	equ	0xFEA
  5110                           fsr0l	equ	0xFE9
  5111                           wreg	equ	0xFE8
  5112                           postdec1	equ	0xFE5
  5113                           fsr1h	equ	0xFE2
  5114                           fsr1l	equ	0xFE1
  5115                           fsr2h	equ	0xFDA
  5116                           fsr2l	equ	0xFD9
  5117                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    165
    Data        4
    BSS         24
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     76      96
    BANK0           128     20      29
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    startup	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    problem	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 160
		 -> msg_ary(CODE[160]), STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _myIsr in COMRAM

    _myIsr->_Controller_Func
    _Controller_Func->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___abtoft
    ___ftadd->___ftneg
    ___abtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_Window
    _lcd_start->_lcd_clear
    _lcd_display_value->___awdiv
    _flash->_delay_s
    _Window->_lcd_print
    _lcd_print->_lcd_print_ch
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_WriteTimer0
    _Initial->_delay_s

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    8064
                                             13 BANK0      7     7      0
                            _Initial
                                _Set
                             _Window
                            ___ltdiv
                            _delay_s
                              _flash
                          _lcd_clear
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     812
                                              6 BANK0      2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1909
                                              8 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _flash                                                0     0      0      70
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) ___ltdiv                                             10     4      6     314
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _Window                                               3     3      0    2230
                                             10 BANK0      3     3      0
                          _lcd_clear
                         _lcd_cursor
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     766
                                              5 BANK0      5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     372
                                              4 BANK0      1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1    1048
                                              5 BANK0      2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     372
                                              5 BANK0      1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     372
                                              4 BANK0      1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     350
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Set                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     309
                         _OpenTimer0
                        _WriteTimer0
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              4     4      0      70
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     195
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                               15    15      0   12695
                                             61 COMRAM    15    15      0
                    _Controller_Func
                  _Find_Button_Press
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Find_Button_Press                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Controller_Func                                      3     3      0   12602
                                             58 COMRAM     3     3      0
                           ___abtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (7) ___lbtoft                                             4     1      3    2488
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             15    11      4     328
                                             43 COMRAM    15    11      4
                            ___ftadd (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftneg                                              3     0      3     121
                                             28 COMRAM     3     0      3
                           ___abtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             15     9      6    3222
                                             13 COMRAM    15     9      6
                           ___abtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    3862
                                             31 COMRAM    12     6      6
                           ___abtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___abtoft                                             8     5      3    2557
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2466
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _OpenTimer0
     _WriteTimer0
     _delay_s
   _Set
   _Window
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_cursor
       _lcd_command
         _lcd_raw_send
     _lcd_print
       _lcd_print_ch
         _lcd_raw_send
   ___ltdiv
   _delay_s
   _flash
     _delay_s
   _lcd_clear
     _lcd_command
       _lcd_raw_send
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send

 _myIsr (ROOT)
   _Controller_Func
     ___abtoft
       ___ftpack
     ___ftadd
       ___abtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___abtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg
       ___abtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___fttol
       ___ftadd (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _Find_Button_Press
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     14      1D       5       22.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4C      60       1       76.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7D      15        0.0%
DATA                 0      0      7D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Mar 22 12:40:12 2017

                ?_lcd_raw_send 0080                   ___awdiv@sign 0085                    __CFG_BORV$3 000000  
                ?_lcd_print_ch 0001                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000  
                 ___ftadd@exp1 002B                   ___ftadd@exp2 002A                   ___ftadd@sign 0029  
                          l201 0768                            l206 07E4                            l250 15FC  
                          l249 15FA                            l196 073A                            l199 0752  
                          l641 12EC                            l636 12FC                   __CFG_CPB$OFF 000000  
                          _PR2 000FCB                   __CFG_CPD$OFF 000000                            u915 0A40  
                          u925 0A66                            u935 0A90                            u945 0AAE  
                          u946 0AB0                            u955 0AD2                            u956 0AD4  
                          _Set 16AA           __size_of_WriteTimer0 0012                            _num 009C  
                 ___awmod@sign 0085                            prod 000FF3                            wreg 000FE8  
                  lcd_cursor@x 0086                    lcd_cursor@y 0085               ?_Controller_Func 0001  
                 __CFG_LVP$OFF 000000                           ?_Set 0001                   __CFG_WDT$OFF 000000  
                         l2002 14E6                           l2120 1296                           l2008 1506  
                         l2122 12A4                           l2124 12AA                           l2220 0728  
                         l2244 077C                           l2246 078E                           l2256 0804  
                         l2272 084E                           l2266 0830                           l2274 0860  
                         l1670 1444                           l1902 124E                           l1682 14A2  
                         l1658 15C6                           l1666 1416                           l1850 0F4A  
                         l1906 1262                           l1676 1484                           l1852 0F56  
                         l1844 0F2C                           l1678 148C                           l1686 14B2  
                         l1870 0FAE                           l1862 0F8C                           l1854 0F5C  
                         l1838 0F16                           l1866 0F9A                           l1890 120A  
                         l1882 11E6                           l1892 1216                           l1894 121C  
                         l1886 11F6                           l1898 1240                           l1998 14DC  
                         STR_1 06B2                           STR_2 06A6                           _LATE 000F8D  
                         u1817 14CE                           u1907 1494                           u1827 155E  
                         u1837 1576                           u1847 0AB2                           u1857 0ABA  
                         u1867 0AC2                           u1877 0B3C                           u1887 0B44  
                         u1897 0B4C                           i2l23 13CC                           _main 06BC  
                 ___ftpack@arg 0001                   ___ftpack@exp 0004                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 0061  
       __size_ofi2_WriteTimer0 0012                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0016                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000                   ___ftmul@cntr 001B                 ??_lcd_raw_send 0081  
                 ___param_bank 000010                   ___ftmul@sign 001C                __end_of_Initial 11CA  
                        ??_Set 0080                   ___fttol@exp1 003A                   ___fttol@lval 0036  
               ??_lcd_print_ch 0084                  lcd_command@in 0084                          ?_main 0001  
              __end_of___awdiv 0FB8                __end_of___ftadd 0A1A                __end_of___awmod 126C  
              __end_of___ftneg 1648                __end_of___ftmul 0D3C                          _T0CON 000FD5  
              ___awdiv@divisor 0082                __end_of___fttol 0C48                __end_of___ltdiv 130A  
                        i2l510 08DC                          i2l184 0DEA                          i2l521 098C  
                        i2l530 09A8                          i2l506 08B2                          i2l483 1100  
                        i2l563 163A                ___awdiv@counter 0084                          _TMR0H 000FD7  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR1L 000FCE  
                        _PORTB 000F81                          _PORTE 000F84                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                  __CFG_PWRT$OFF 000000                __end_of_delay_s 14C0  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                          _flash 1648                          _myIsr 0008  
                ___ftpack@sign 0005                __end_of_msg_ary 06A6                          tablat 000FF5  
                        status 000FD8                __initialization 150C                   __end_of_main 086E  
                       ??_main 008D                  ___fttol@sign1 0035                  i2_WriteTimer0 1698  
                __activetblptr 000002               __end_of___abtoft 15B4                         ?_flash 0001  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
                       _ADRESH 000FC4                         ?_myIsr 0001                         _CCPR1H 000FBF  
                       _CCPR1L 000FBE                         _CCPR2L 000FBB               ___awdiv@dividend 0080  
             __end_of___ftpack 1120               __end_of___lbtoft 1624                         u110_41 087E  
                       u111_41 0892                         u131_41 0C58                         i2l1620 109A  
                       i2l1630 10F6                         i2l1622 10B8                         i2l1614 1082  
                       i2l2174 0DAE                         i2l1720 08C0                     _OpenTimer0 15DA  
                       i2l1626 10CE                         i2l1618 1090                         i2l2186 0DC8  
                       i2l1628 10EC                         i2l1708 1592                         i2l1812 0CDA  
                       u133_41 0C80                         i2l1750 0946                         i2l1742 091A  
                       i2l1726 08EA                         i2l1822 0D02                         i2l1760 097A  
                       i2l1752 0950                         i2l1808 0CCA                         i2l1920 0B80  
                       i2l1762 0984                         i2l1754 0958                         i2l1818 0CF2  
                       i2l1748 093C                         u150_41 0B64                         i2l1950 0C1A  
                       i2l1942 0BF6                         i2l1768 09C4                         i2l1952 0C20  
                       i2l1778 09F4                         i2l1794 0C98                         i2l1938 0BE6  
                       i2l1788 0C70                         i2l1956 0C36                         i2l1948 0C0E  
                       i2l1980 13BA                         i2l1972 13A4                         i2l1982 13C0  
                       i2l1966 1390                         i2l1990 13F2                         i2l1988 13DE  
                       _TICK_E 0097                      ??_Initial 0084                 __CFG_XINST$OFF 000000  
                lcd_print@mess 0085                         _Motor1 0094               __end_of_lcd_init 0606  
         __size_of_lcd_command 0014                         _Window 130A                      ??___awdiv 0084  
                    ??___ftadd 0026                 __CFG_STVREN$ON 000000                      ??___awmod 0084  
                    ??___ftneg 0020                      ??___ftmul 0014                      ??___fttol 0030  
                    ??___ltdiv 0086               OpenTimer0@config 0080                         clear_0 151C  
             ___awdiv@quotient 0086                ___awmod@divisor 0082                      ??_delay_s 0080  
               ?i2_WriteTimer0 0001                ___awmod@counter 0084          ___ftmul@f3_as_product 0018  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8           __end_of_lcd_raw_send 0B54                     ___abtoft@c 000D  
         __end_of_lcd_print_ch 1672                     __accesstop 0080        __end_of__initialization 1542  
              __CFG_PBADEN$OFF 000000                     ___ftadd@f1 0020                     ___ftadd@f2 0023  
                ___rparam_used 000001                     ___ftneg@f1 001D                     ___lbtoft@c 000C  
                   ___ftmul@f1 000E                     ___ftmul@f2 0011                     ___fttol@f1 002C  
               __pcstackCOMRAM 0001                   __pidataBANK0 16B6                  __end_of_flash 165E  
                __end_of_myIsr 0E26             __size_of_lcd_clear 0032             __size_of_lcd_print 0064  
           __size_of_lcd_start 004C                        ??_flash 0084                        ??_myIsr 003E  
                   __pbssBANK0 0094                    ?_OpenTimer0 0001                 lcd_raw_send@RS 0080  
               lcd_raw_send@in 0083                        ?_Window 0001          lcd_display_value@tens 0089  
                    ?___abtoft 0009                ??i2_WriteTimer0 0003               WriteTimer0@timer 0082  
                ??_WriteTimer0 0082                      ?___ftpack 0001                      ?___lbtoft 0009  
                   _lcd_cursor 15B4            Controller_Func@temp 003B       __size_of_Controller_Func 00D4  
          i2WriteTimer0@timer0 0001                        _Initial 1120                     _count_test 005F  
                      __Hparam 0000                        __Lparam 0000              __end_of_lcd_clear 1582  
  Find_Button_Press@Temp_Press 005E                __size_of_Window 0084              __end_of_lcd_print 1472  
            __end_of_lcd_start 150C                 lcd_print_ch@in 0084                        ___awdiv 0EFA  
                      ___ftadd 086E                        ___awmod 11CA                        ___ftneg 1624  
                      ___ftmul 0C48                        ___fttol 0B54                        ___ltdiv 126C  
                   ??___abtoft 000C                   __psmallconst 0600                        __pcinit 150C  
                   ??___ftpack 0006                     ??___lbtoft 000C                        _delay_s 1472  
                      __ramtop 0600            __size_of_OpenTimer0 0026                        __ptext0 06BC  
                      __ptext1 14C0                        __ptext2 0FB8                        __ptext3 11CA  
                      __ptext4 0EFA                        __ptext5 1648                        __ptext6 126C  
                      __ptext7 130A                        __ptext8 140E                        __ptext9 165E  
                    _T0CONbits 000FD5                      _T1CONbits 000FCD          __size_of_lcd_raw_send 013A  
                      _counter 0060                   __size_of_Set 000C                      _T2CONbits 000FCA  
             ___awmod@dividend 0080                        _msg_ary 0606            __end_of_WriteTimer0 1698  
        __size_of_lcd_print_ch 0014                        _problem 0098                        _startup 009A  
               __pintcode_body 0D3C           end_of_initialization 1542                  __Lmediumconst 0000  
                      int_func 0D3C              _Find_Button_Press 138E               ___ltdiv@dividend 0080  
           ?_Find_Button_Press 0001                        postdec1 000FE5                        postinc0 000FEE  
                 _lcd_raw_send 0A1A            ??_Find_Button_Press 0001                   _lcd_print_ch 165E  
                    _PORTEbits 000F84                      _TRISCbits 000F94                    ?_lcd_cursor 0085  
             ___ltdiv@quotient 0086      __end_of_Find_Button_Press 140E                    _CCP1CONbits 000FBD  
                  _CCP2CONbits 000FBA                  ??_lcd_command 0084                     lcd_print@i 0089  
                   lcd_start@i 0087                    ___ftmul@exp 0017              _lcd_display_value 0FB8  
            ??_Controller_Func 003B                 __end_of_Window 138E             ?_lcd_display_value 0001  
                  _WriteTimer0 1686            ??_lcd_display_value 0088            start_initialization 150C  
                  __end_of_Set 16B6                   _Button_Press 0096                   ??_OpenTimer0 0080  
    __end_of_lcd_display_value 1072                       ??_Window 008A            __size_of_lcd_cursor 0026  
          __end_of_lcd_command 1686                    __pdataBANK0 0098               __CFG_LPT1OSC$OFF 000000  
            __size_of___abtoft 0032             __end_of_OpenTimer0 1600              __size_of___ftpack 00AE  
            __size_of___lbtoft 0024                    __pbssCOMRAM 004D                  __pcstackBANK0 0080  
                    Window@num 008C     __size_of_Find_Button_Press 0080                      __pnvBANK0 009C  
                     ?_Initial 0001              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
                     ?___awdiv 0080                       ?___ftadd 0020                       ?___awmod 0080  
                     ?___ftneg 001D                       ?___ftmul 000E                       ?___fttol 002C  
                     ?___ltdiv 0080                      _lcd_clear 1550                       ?_delay_s 0001  
        __end_ofi2_WriteTimer0 16AA                      _lcd_print 140E         lcd_display_value@hunds 0088  
                    _lcd_start 14C0         lcd_display_value@value 008B         lcd_display_value@units 008A  
                  __smallconst 0600              WriteTimer0@timer0 0080             i2WriteTimer0@timer 0003  
               __size_of_flash 0016                 __size_of_myIsr 0E1E                       _LATDbits 000F8C  
                     _PIE1bits 000F9D                    _lcd_command 1672     __size_of_lcd_display_value 00BA  
                     i2u152_40 0B9E               main@my_mch_state 0092                       i2u152_45 0B96  
                     i2u170_40 0D98                       i2u170_46 0D9A                ___ltdiv@divisor 0083  
                     _PIR1bits 000F9E                ___ltdiv@counter 0089               __CFG_WDTPS$32768 000000  
                   ?_lcd_clear 0001                     ?_lcd_print 0085                     ?_lcd_start 0001  
                   _ADCON0bits 000FC2                 main@ADC_Result 0093                      main@t1clk 008D  
                 ??_lcd_cursor 0086                      copy_data0 1536                _Controller_Func 0E26  
                     __Hrparam 0000               __size_of_Initial 00AA                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000             __end_of_lcd_cursor 15DA                       ___abtoft 1582  
             __size_of___awdiv 00BE               __size_of___ftadd 01AC               __size_of___awmod 00A2  
             __size_of___ftneg 0024               __size_of___ftmul 00F4               __size_of___fttol 00F4  
             __size_of___ltdiv 009E                   ?_WriteTimer0 0080                       ___ftpack 1072  
                     ___lbtoft 1600               __size_of_delay_s 004E                       _captured 005A  
                     __ptext10 15B4                       __ptext11 1550                       __ptext20 1698  
                     __ptext12 1672                       __ptext21 138E                       __ptext13 0A1A  
                     __ptext22 0E26                       __ptext14 16AA                       __ptext23 1600  
                     __ptext15 1120                       __ptext24 0B54                       __ptext16 1472  
                     __ptext25 1624                       __ptext17 1686                       __ptext26 0C48  
                     __ptext18 15DA                       __ptext27 086E                       __ptext28 1582  
                     __ptext29 1072                       _lcd_init 0601                       _control1 004D  
                __size_of_main 01B2                       delay_s@i 0082                       delay_s@j 0083  
                     int$flags 0061                    ??_lcd_clear 0085                       main@test 0090  
                  delay_s@secs 0081                    ??_lcd_print 0087                    ??_lcd_start 0086  
                   _INTCONbits 000FF2        __end_of_Controller_Func 0EFA                       intlevel2 0000  
                ___abtoft@sign 000C                     _OSCCONbits 000FD3  Find_Button_Press@Button_Count 005C  
Find_Button_Press@Button_State 005D                   ?_lcd_command 0001  
